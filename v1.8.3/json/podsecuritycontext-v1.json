{
  "type": "object",
  "properties": {
    "seLinuxOptions": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "user": {
          "type": [
            "string",
            "null"
          ],
          "title": "User is a SELinux user label that applies to the container.\n+optional"
        },
        "role": {
          "type": [
            "string",
            "null"
          ],
          "title": "Role is a SELinux role label that applies to the container.\n+optional"
        },
        "type": {
          "type": [
            "string",
            "null"
          ],
          "title": "Type is a SELinux type label that applies to the container.\n+optional"
        },
        "level": {
          "type": [
            "string",
            "null"
          ],
          "title": "Level is SELinux level label that applies to the container.\n+optional"
        }
      },
      "title": "SELinuxOptions are the labels to be applied to the container"
    },
    "windowsOptions": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "gmsaCredentialSpecName": {
          "type": [
            "string",
            "null"
          ],
          "title": "GMSACredentialSpecName is the name of the GMSA credential spec to use.\n+optional"
        },
        "gmsaCredentialSpec": {
          "type": [
            "string",
            "null"
          ],
          "title": "GMSACredentialSpec is where the GMSA admission webhook\n(https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the\nGMSA credential spec named by the GMSACredentialSpecName field.\n+optional"
        },
        "runAsUserName": {
          "type": [
            "string",
            "null"
          ],
          "title": "The UserName in Windows to run the entrypoint of the container process.\nDefaults to the user specified in image metadata if unspecified.\nMay also be set in PodSecurityContext. If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
        },
        "hostProcess": {
          "type": [
            "boolean",
            "null"
          ],
          "title": "HostProcess determines if a container should be run as a 'Host Process' container.\nAll of a Pod's containers must have the same effective HostProcess value\n(it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).\nIn addition, if HostProcess is true then HostNetwork must also be set to true.\n+optional"
        }
      },
      "description": "WindowsSecurityContextOptions contain Windows-specific options and credentials."
    },
    "runAsUser": {
      "type": [
        "string",
        "null"
      ],
      "format": "int64",
      "title": "The UID to run the entrypoint of the container process.\nDefaults to user specified in image metadata if unspecified.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
    },
    "runAsGroup": {
      "type": [
        "string",
        "null"
      ],
      "format": "int64",
      "title": "The GID to run the entrypoint of the container process.\nUses runtime default if unset.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence\nfor that container.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
    },
    "runAsNonRoot": {
      "type": [
        "boolean",
        "null"
      ],
      "title": "Indicates that the container must run as a non-root user.\nIf true, the Kubelet will validate the image at runtime to ensure that it\ndoes not run as UID 0 (root) and fail to start the container if it does.\nIf unset or false, no such validation will be performed.\nMay also be set in SecurityContext.  If set in both SecurityContext and\nPodSecurityContext, the value specified in SecurityContext takes precedence.\n+optional"
    },
    "supplementalGroups": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "string",
          "null"
        ],
        "format": "int64"
      },
      "title": "A list of groups applied to the first process run in each container, in addition\nto the container's primary GID, the fsGroup (if specified), and group memberships\ndefined in the container image for the uid of the container process. If unspecified,\nno additional groups are added to any container. Note that group memberships\ndefined in the container image for the uid of the container process are still effective,\neven if they are not included in this list.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
    },
    "fsGroup": {
      "type": [
        "string",
        "null"
      ],
      "format": "int64",
      "description": "1. The owning GID will be the FSGroup\n2. The setgid bit is set (new files created in the volume will be owned by FSGroup)\n3. The permission bits are OR'd with rw-rw----\n\nIf unset, the Kubelet will not modify the ownership and permissions of any volume.\nNote that this field cannot be set when spec.os.name is windows.\n+optional",
      "title": "A special supplemental group that applies to all containers in a pod.\nSome volume types allow the Kubelet to change the ownership of that volume\nto be owned by the pod:"
    },
    "sysctls": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "name": {
            "type": [
              "string",
              "null"
            ],
            "title": "Name of a property to set"
          },
          "value": {
            "type": [
              "string",
              "null"
            ],
            "title": "Value of a property to set"
          }
        },
        "title": "Sysctl defines a kernel parameter to be set"
      },
      "title": "Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported\nsysctls (by the container runtime) might fail to launch.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
    },
    "fsGroupChangePolicy": {
      "type": [
        "string",
        "null"
      ],
      "title": "fsGroupChangePolicy defines behavior of changing ownership and permission of the volume\nbefore being exposed inside Pod. This field will only apply to\nvolume types which support fsGroup based ownership(and permissions).\nIt will have no effect on ephemeral volume types such as: secret, configmaps\nand emptydir.\nValid values are \"OnRootMismatch\" and \"Always\". If not specified, \"Always\" is used.\nNote that this field cannot be set when spec.os.name is windows.\n+optional"
    },
    "seccompProfile": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "type": {
          "type": [
            "string",
            "null"
          ],
          "description": "Localhost - a profile defined in a file on the node should be used.\nRuntimeDefault - the container runtime default profile should be used.\nUnconfined - no profile should be applied.\n+unionDiscriminator",
          "title": "type indicates which kind of seccomp profile will be applied.\nValid options are:"
        },
        "localhostProfile": {
          "type": [
            "string",
            "null"
          ],
          "title": "localhostProfile indicates a profile defined in a file on the node should be used.\nThe profile must be preconfigured on the node to work.\nMust be a descending path, relative to the kubelet's configured seccomp profile location.\nMust be set if type is \"Localhost\". Must NOT be set for any other type.\n+optional"
        }
      },
      "title": "SeccompProfile defines a pod/container's seccomp profile settings.\nOnly one profile source may be set.\n+union"
    }
  },
  "description": "PodSecurityContext holds pod-level security attributes and common container settings.\nSome fields are also present in container.securityContext.  Field values of\ncontainer.securityContext take precedence over field values of PodSecurityContext.",
  "$schema": "http://json-schema.org/schema#"
}