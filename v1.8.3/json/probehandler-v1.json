{
  "type": "object",
  "properties": {
    "exec": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "command": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "string",
              "null"
            ]
          },
          "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional"
        }
      },
      "description": "ExecAction describes a \"run in container\" action."
    },
    "httpGet": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "path": {
          "type": [
            "string",
            "null"
          ],
          "title": "Path to access on the HTTP server.\n+optional"
        },
        "port": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": [
                "string",
                "null"
              ],
              "format": "int64"
            },
            "intVal": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "strVal": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
        },
        "host": {
          "type": [
            "string",
            "null"
          ],
          "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
        },
        "scheme": {
          "type": [
            "string",
            "null"
          ],
          "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
        },
        "httpHeaders": {
          "type": [
            "array",
            "null"
          ],
          "items": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
              },
              "value": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "The header field value"
              }
            },
            "title": "HTTPHeader describes a custom header to be used in HTTP probes"
          },
          "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests."
    },
    "tcpSocket": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "port": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "type": {
              "type": [
                "string",
                "null"
              ],
              "format": "int64"
            },
            "intVal": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32"
            },
            "strVal": {
              "type": [
                "string",
                "null"
              ]
            }
          },
          "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
          "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
        },
        "host": {
          "type": [
            "string",
            "null"
          ],
          "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
        }
      },
      "title": "TCPSocketAction describes an action based on opening a socket"
    },
    "grpc": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "port": {
          "type": [
            "integer",
            "null"
          ],
          "format": "int32",
          "description": "Port number of the gRPC service. Number must be in the range 1 to 65535."
        },
        "service": {
          "type": [
            "string",
            "null"
          ],
          "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.\n+optional\n+default=\"\""
        }
      }
    }
  },
  "description": "ProbeHandler defines a specific action that should be taken in a probe.\nOne and only one of the fields must be specified.",
  "$schema": "http://json-schema.org/schema#"
}