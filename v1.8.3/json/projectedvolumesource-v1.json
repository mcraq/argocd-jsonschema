{
  "type": "object",
  "properties": {
    "sources": {
      "type": [
        "array",
        "null"
      ],
      "items": {
        "type": [
          "object",
          "null"
        ],
        "properties": {
          "secret": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "localObjectReference": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                  }
                },
                "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
              },
              "items": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "key": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "key is the key to project."
                    },
                    "path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                    },
                    "mode": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                  },
                  "description": "Maps a string key to a path within a volume."
                },
                "title": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
              },
              "optional": {
                "type": [
                  "boolean",
                  "null"
                ],
                "title": "optional field specify whether the Secret or its key must be defined\n+optional"
              }
            },
            "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode."
          },
          "downwardAPI": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "items": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                    },
                    "fieldRef": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "apiVersion": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
                        },
                        "fieldPath": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "Path of the field to select in the specified API version."
                        }
                      },
                      "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
                    },
                    "resourceFieldRef": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "containerName": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Container name: required for volumes, optional for env vars\n+optional"
                        },
                        "resource": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Required: resource to select"
                        },
                        "divisor": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "string": {
                              "type": [
                                "string",
                                "null"
                              ]
                            }
                          },
                          "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
                        }
                      },
                      "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
                    },
                    "mode": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                  },
                  "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                },
                "title": "Items is a list of DownwardAPIVolume file\n+optional"
              }
            },
            "description": "Represents downward API info for projecting into a projected volume.\nNote that this is identical to a downwardAPI volume source without the default\nmode."
          },
          "configMap": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "localObjectReference": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                  }
                },
                "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
              },
              "items": {
                "type": [
                  "array",
                  "null"
                ],
                "items": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "key": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "key is the key to project."
                    },
                    "path": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                    },
                    "mode": {
                      "type": [
                        "integer",
                        "null"
                      ],
                      "format": "int32",
                      "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                    }
                  },
                  "description": "Maps a string key to a path within a volume."
                },
                "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
              },
              "optional": {
                "type": [
                  "boolean",
                  "null"
                ],
                "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
              }
            },
            "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode."
          },
          "serviceAccountToken": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "audience": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional"
              },
              "expirationSeconds": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "int64",
                "title": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional"
              },
              "path": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "path is the path relative to the mount point of the file to project the\ntoken into."
              }
            },
            "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise)."
          },
          "clusterTrustBundle": {
            "type": [
              "object",
              "null"
            ],
            "properties": {
              "name": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.\n+optional"
              },
              "signerName": {
                "type": [
                  "string",
                  "null"
                ],
                "title": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.\n+optional"
              },
              "labelSelector": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "matchLabels": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "additionalProperties": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
                  },
                  "matchExpressions": {
                    "type": [
                      "array",
                      "null"
                    ],
                    "items": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "key": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "key is the label key that the selector applies to."
                        },
                        "operator": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                        },
                        "values": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
                        }
                      },
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                    },
                    "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
                  }
                },
                "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
              },
              "optional": {
                "type": [
                  "boolean",
                  "null"
                ],
                "title": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.\n+optional"
              },
              "path": {
                "type": [
                  "string",
                  "null"
                ],
                "description": "Relative path from the volume root to write the bundle."
              }
            },
            "description": "ClusterTrustBundleProjection describes how to select a set of\nClusterTrustBundle objects and project their contents into the pod\nfilesystem."
          }
        },
        "title": "Projection that may be projected along with other supported volume types"
      },
      "title": "sources is the list of volume projections\n+optional"
    },
    "defaultMode": {
      "type": [
        "integer",
        "null"
      ],
      "format": "int32",
      "title": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
    }
  },
  "title": "Represents a projected volume source",
  "$schema": "http://json-schema.org/schema#"
}