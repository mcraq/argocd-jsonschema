{
  "type": "object",
  "properties": {
    "handler": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "exec": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "command": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "Command is the command line to execute inside the container, the working directory for the\ncommand  is root ('/') in the container's filesystem. The command is simply exec'd, it is\nnot run inside a shell, so traditional shell instructions ('|', etc) won't work. To use\na shell, you need to explicitly call out to that shell.\nExit status of 0 is treated as live/healthy and non-zero is unhealthy.\n+optional"
            }
          },
          "description": "ExecAction describes a \"run in container\" action."
        },
        "httpGet": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "path": {
              "type": [
                "string",
                "null"
              ],
              "title": "Path to access on the HTTP server.\n+optional"
            },
            "port": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "type": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "int64"
                },
                "intVal": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "strVal": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
              "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
            },
            "host": {
              "type": [
                "string",
                "null"
              ],
              "title": "Host name to connect to, defaults to the pod IP. You probably want to set\n\"Host\" in httpHeaders instead.\n+optional"
            },
            "scheme": {
              "type": [
                "string",
                "null"
              ],
              "title": "Scheme to use for connecting to the host.\nDefaults to HTTP.\n+optional"
            },
            "httpHeaders": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "name": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "The header field name.\nThis will be canonicalized upon output, so case-variant names will be understood as the same header."
                  },
                  "value": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "title": "The header field value"
                  }
                },
                "title": "HTTPHeader describes a custom header to be used in HTTP probes"
              },
              "title": "Custom headers to set in the request. HTTP allows repeated headers.\n+optional"
            }
          },
          "description": "HTTPGetAction describes an action based on HTTP Get requests."
        },
        "tcpSocket": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "port": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "type": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "format": "int64"
                },
                "intVal": {
                  "type": [
                    "integer",
                    "null"
                  ],
                  "format": "int32"
                },
                "strVal": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "description": "+protobuf=true\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:openapi-gen=true",
              "title": "IntOrString is a type that can hold an int32 or a string.  When used in\nJSON or YAML marshalling and unmarshalling, it produces or consumes the\ninner type.  This allows you to have, for example, a JSON field that can\naccept a name or number.\nTODO: Rename to Int32OrString"
            },
            "host": {
              "type": [
                "string",
                "null"
              ],
              "title": "Optional: Host name to connect to, defaults to the pod IP.\n+optional"
            }
          },
          "title": "TCPSocketAction describes an action based on opening a socket"
        },
        "grpc": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "port": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "description": "Port number of the gRPC service. Number must be in the range 1 to 65535."
            },
            "service": {
              "type": [
                "string",
                "null"
              ],
              "description": "Service is the name of the service to place in the gRPC HealthCheckRequest\n(see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).\n\nIf this is not specified, the default behavior is defined by gRPC.\n+optional\n+default=\"\""
            }
          }
        }
      },
      "description": "ProbeHandler defines a specific action that should be taken in a probe.\nOne and only one of the fields must be specified."
    },
    "initialDelaySeconds": {
      "type": [
        "integer",
        "null"
      ],
      "format": "int32",
      "title": "Number of seconds after the container has started before liveness probes are initiated.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
    },
    "timeoutSeconds": {
      "type": [
        "integer",
        "null"
      ],
      "format": "int32",
      "title": "Number of seconds after which the probe times out.\nDefaults to 1 second. Minimum value is 1.\nMore info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes\n+optional"
    },
    "periodSeconds": {
      "type": [
        "integer",
        "null"
      ],
      "format": "int32",
      "title": "How often (in seconds) to perform the probe.\nDefault to 10 seconds. Minimum value is 1.\n+optional"
    },
    "successThreshold": {
      "type": [
        "integer",
        "null"
      ],
      "format": "int32",
      "title": "Minimum consecutive successes for the probe to be considered successful after having failed.\nDefaults to 1. Must be 1 for liveness and startup. Minimum value is 1.\n+optional"
    },
    "failureThreshold": {
      "type": [
        "integer",
        "null"
      ],
      "format": "int32",
      "title": "Minimum consecutive failures for the probe to be considered failed after having succeeded.\nDefaults to 3. Minimum value is 1.\n+optional"
    },
    "terminationGracePeriodSeconds": {
      "type": [
        "string",
        "null"
      ],
      "format": "int64",
      "title": "Optional duration in seconds the pod needs to terminate gracefully upon probe failure.\nThe grace period is the duration in seconds after the processes running in the pod are sent\na termination signal and the time when the processes are forcibly halted with a kill signal.\nSet this value longer than the expected cleanup time for your process.\nIf this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this\nvalue overrides the value provided by the pod spec.\nValue must be non-negative integer. The value zero indicates stop immediately via\nthe kill signal (no opportunity to shut down).\nThis is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.\nMinimum value is 1. spec.terminationGracePeriodSeconds is used if unset.\n+optional"
    }
  },
  "description": "Probe describes a health check to be performed against a container to determine whether it is\nalive or ready to receive traffic.",
  "$schema": "http://json-schema.org/schema#"
}