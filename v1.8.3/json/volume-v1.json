{
  "type": "object",
  "properties": {
    "name": {
      "type": [
        "string",
        "null"
      ],
      "title": "name of the volume.\nMust be a DNS_LABEL and unique within the pod.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
    },
    "volumeSource": {
      "type": [
        "object",
        "null"
      ],
      "properties": {
        "hostPath": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "path": {
              "type": [
                "string",
                "null"
              ],
              "title": "path of the directory on the host.\nIf the path is a symlink, it will follow the link to the real path.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
            },
            "type": {
              "type": [
                "string",
                "null"
              ],
              "title": "type for HostPath Volume\nDefaults to \"\"\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath\n+optional"
            }
          },
          "description": "Represents a host path mapped into a pod.\nHost path volumes do not support ownership management or SELinux relabeling."
        },
        "emptyDir": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "medium": {
              "type": [
                "string",
                "null"
              ],
              "title": "medium represents what type of storage medium should back this directory.\nThe default is \"\" which means to use the node's default medium.\nMust be an empty string (default) or Memory.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir\n+optional"
            },
            "sizeLimit": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "string": {
                  "type": [
                    "string",
                    "null"
                  ]
                }
              },
              "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
            }
          },
          "description": "Represents an empty directory for a pod.\nEmpty directory volumes support ownership management and SELinux relabeling."
        },
        "gcePersistentDisk": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "pdName": {
              "type": [
                "string",
                "null"
              ],
              "title": "pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
            },
            "partition": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk\n+optional"
            }
          },
          "description": "Represents a Persistent Disk resource in Google Compute Engine.\n\nA GCE PD must exist before mounting to a container. The disk must\nalso be in the same GCE project and zone as the kubelet. A GCE PD\ncan only be mounted as read/write once or read-only many times. GCE\nPDs support ownership management and SELinux relabeling."
        },
        "awsElasticBlockStore": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "volumeID": {
              "type": [
                "string",
                "null"
              ],
              "title": "volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
            },
            "partition": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "partition is the partition in the volume that you want to mount.\nIf omitted, the default is to mount by volume name.\nExamples: For volume /dev/sda1, you specify the partition as \"1\".\nSimilarly, the volume partition for /dev/sda is \"0\" (or you can leave the property empty).\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly value true will force the readOnly setting in VolumeMounts.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore\n+optional"
            }
          },
          "description": "Represents a Persistent Disk resource in AWS.\n\nAn AWS EBS disk must exist before mounting to a container. The disk\nmust also be in the same AWS zone as the kubelet. An AWS EBS disk\ncan only be mounted as read/write once. AWS EBS volumes support\nownership management and SELinux relabeling."
        },
        "gitRepo": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "repository": {
              "type": [
                "string",
                "null"
              ],
              "title": "repository is the URL"
            },
            "revision": {
              "type": [
                "string",
                "null"
              ],
              "title": "revision is the commit hash for the specified revision.\n+optional"
            },
            "directory": {
              "type": [
                "string",
                "null"
              ],
              "title": "directory is the target directory name.\nMust not contain or start with '..'.  If '.' is supplied, the volume directory will be the\ngit repository.  Otherwise, if specified, the volume will contain the git repository in\nthe subdirectory with the given name.\n+optional"
            }
          },
          "description": "Represents a volume that is populated with the contents of a git repository.\nGit repo volumes do not support ownership management.\nGit repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an\nEmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir\ninto the Pod's container."
        },
        "secret": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "secretName": {
              "type": [
                "string",
                "null"
              ],
              "title": "secretName is the name of the secret in the pod's namespace to use.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#secret\n+optional"
            },
            "items": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "key": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "key is the key to project."
                  },
                  "path": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                  },
                  "mode": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                  }
                },
                "description": "Maps a string key to a path within a volume."
              },
              "title": "items If unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
            },
            "defaultMode": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "defaultMode is Optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values\nfor mode bits. Defaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
            },
            "optional": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "optional field specify whether the Secret or its keys must be defined\n+optional"
            }
          },
          "description": "Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume\nas files using the keys in the Data field as the file names.\nSecret volumes support ownership management and SELinux relabeling."
        },
        "nfs": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "server": {
              "type": [
                "string",
                "null"
              ],
              "title": "server is the hostname or IP address of the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
            },
            "path": {
              "type": [
                "string",
                "null"
              ],
              "title": "path that is exported by the NFS server.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly here will force the NFS export to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#nfs\n+optional"
            }
          },
          "description": "Represents an NFS mount that lasts the lifetime of a pod.\nNFS volumes do not support ownership management or SELinux relabeling."
        },
        "iscsi": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "targetPortal": {
              "type": [
                "string",
                "null"
              ],
              "description": "targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260)."
            },
            "iqn": {
              "type": [
                "string",
                "null"
              ],
              "description": "iqn is the target iSCSI Qualified Name."
            },
            "lun": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "description": "lun represents iSCSI Target Lun number."
            },
            "iscsiInterface": {
              "type": [
                "string",
                "null"
              ],
              "title": "iscsiInterface is the interface Name that uses an iSCSI transport.\nDefaults to 'default' (tcp).\n+optional"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\n+optional"
            },
            "portals": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port\nis other than default (typically TCP ports 860 and 3260).\n+optional"
            },
            "chapAuthDiscovery": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication\n+optional"
            },
            "chapAuthSession": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "chapAuthSession defines whether support iSCSI Session CHAP authentication\n+optional"
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            },
            "initiatorName": {
              "type": [
                "string",
                "null"
              ],
              "title": "initiatorName is the custom iSCSI Initiator Name.\nIf initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface\n<target portal>:<volume name> will be created for the connection.\n+optional"
            }
          },
          "description": "Represents an ISCSI disk.\nISCSI volumes can only be mounted as read/write once.\nISCSI volumes support ownership management and SELinux relabeling."
        },
        "glusterfs": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "endpoints": {
              "type": [
                "string",
                "null"
              ],
              "title": "endpoints is the endpoint name that details Glusterfs topology.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
            },
            "path": {
              "type": [
                "string",
                "null"
              ],
              "title": "path is the Glusterfs volume path.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly here will force the Glusterfs volume to be mounted with read-only permissions.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod\n+optional"
            }
          },
          "description": "Represents a Glusterfs mount that lasts the lifetime of a pod.\nGlusterfs volumes do not support ownership management or SELinux relabeling."
        },
        "persistentVolumeClaim": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "claimName": {
              "type": [
                "string",
                "null"
              ],
              "title": "claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly Will force the ReadOnly setting in VolumeMounts.\nDefault false.\n+optional"
            }
          },
          "description": "PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.\nThis volume finds the bound PV and mounts that volume for the pod. A\nPersistentVolumeClaimVolumeSource is, essentially, a wrapper around another\ntype of volume that is owned by someone else (the system)."
        },
        "rbd": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "monitors": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "monitors is a collection of Ceph monitors.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
            },
            "image": {
              "type": [
                "string",
                "null"
              ],
              "title": "image is the rados image name.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type of the volume that you want to mount.\nTip: Ensure that the filesystem type is supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://kubernetes.io/docs/concepts/storage/volumes#rbd\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
            },
            "pool": {
              "type": [
                "string",
                "null"
              ],
              "title": "pool is the rados pool name.\nDefault is rbd.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
            },
            "user": {
              "type": [
                "string",
                "null"
              ],
              "title": "user is the rados user name.\nDefault is admin.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
            },
            "keyring": {
              "type": [
                "string",
                "null"
              ],
              "title": "keyring is the path to key ring for RBDUser.\nDefault is /etc/ceph/keyring.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly here will force the ReadOnly setting in VolumeMounts.\nDefaults to false.\nMore info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it\n+optional"
            }
          },
          "description": "Represents a Rados Block Device mount that lasts the lifetime of a pod.\nRBD volumes support ownership management and SELinux relabeling."
        },
        "flexVolume": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "driver": {
              "type": [
                "string",
                "null"
              ],
              "description": "driver is the name of the driver to use for this volume."
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". The default filesystem depends on FlexVolume script.\n+optional"
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly is Optional: defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            },
            "options": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "options is Optional: this field holds extra command options if any.\n+optional"
            }
          },
          "description": "FlexVolume represents a generic volume resource that is\nprovisioned/attached using an exec based plugin."
        },
        "cinder": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "volumeID": {
              "type": [
                "string",
                "null"
              ],
              "title": "volumeID used to identify the volume in cinder.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nExamples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/mysql-cinder-pd/README.md\n+optional"
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            }
          },
          "description": "Represents a cinder volume resource in Openstack.\nA Cinder volume must exist before mounting to a container.\nThe volume must also be in the same region as the kubelet.\nCinder volumes support ownership management and SELinux relabeling."
        },
        "cephfs": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "monitors": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "monitors is Required: Monitors is a collection of Ceph monitors\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it"
            },
            "path": {
              "type": [
                "string",
                "null"
              ],
              "title": "path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /\n+optional"
            },
            "user": {
              "type": [
                "string",
                "null"
              ],
              "title": "user is optional: User is the rados user name, default is admin\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
            },
            "secretFile": {
              "type": [
                "string",
                "null"
              ],
              "title": "secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\nMore info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it\n+optional"
            }
          },
          "description": "Represents a Ceph Filesystem mount that lasts the lifetime of a pod\nCephfs volumes do not support ownership management or SELinux relabeling."
        },
        "flocker": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "datasetName": {
              "type": [
                "string",
                "null"
              ],
              "title": "datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker\nshould be considered as deprecated\n+optional"
            },
            "datasetUUID": {
              "type": [
                "string",
                "null"
              ],
              "title": "datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset\n+optional"
            }
          },
          "description": "Represents a Flocker volume mounted by the Flocker agent.\nOne and only one of datasetName and datasetUUID should be set.\nFlocker volumes do not support ownership management or SELinux relabeling."
        },
        "downwardAPI": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "items": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "path": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                  },
                  "fieldRef": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "apiVersion": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
                      },
                      "fieldPath": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Path of the field to select in the specified API version."
                      }
                    },
                    "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
                  },
                  "resourceFieldRef": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "containerName": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "title": "Container name: required for volumes, optional for env vars\n+optional"
                      },
                      "resource": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "title": "Required: resource to select"
                      },
                      "divisor": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "string": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
                      }
                    },
                    "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
                  },
                  "mode": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                  }
                },
                "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
              },
              "title": "Items is a list of downward API volume file\n+optional"
            },
            "defaultMode": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "Optional: mode bits to use on created files by default. Must be a\nOptional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
            }
          },
          "description": "DownwardAPIVolumeSource represents a volume containing downward API info.\nDownward API volumes support ownership management and SELinux relabeling."
        },
        "fc": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "targetWWNs": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "targetWWNs is Optional: FC target worldwide names (WWNs)\n+optional"
            },
            "lun": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "lun is Optional: FC target lun number\n+optional"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\nTODO: how do we prevent errors in the filesystem from compromising the machine\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly is Optional: Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            },
            "wwids": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "wwids Optional: FC volume world wide identifiers (wwids)\nEither wwids or combination of targetWWNs and lun must be set, but not both simultaneously.\n+optional"
            }
          },
          "description": "Represents a Fibre Channel volume.\nFibre Channel volumes can only be mounted as read/write once.\nFibre Channel volumes support ownership management and SELinux relabeling."
        },
        "azureFile": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "secretName": {
              "type": [
                "string",
                "null"
              ],
              "title": "secretName is the  name of secret that contains Azure Storage Account Name and Key"
            },
            "shareName": {
              "type": [
                "string",
                "null"
              ],
              "title": "shareName is the azure share Name"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            }
          },
          "description": "AzureFile represents an Azure File Service mount on the host and bind mount to the pod."
        },
        "configMap": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "localObjectReference": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            },
            "items": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "key": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "key is the key to project."
                  },
                  "path": {
                    "type": [
                      "string",
                      "null"
                    ],
                    "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                  },
                  "mode": {
                    "type": [
                      "integer",
                      "null"
                    ],
                    "format": "int32",
                    "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                  }
                },
                "description": "Maps a string key to a path within a volume."
              },
              "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
            },
            "defaultMode": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "defaultMode is optional: mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDefaults to 0644.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
            },
            "optional": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
            }
          },
          "description": "Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nvolume as files using the keys in the Data field as the file names, unless\nthe items element is populated with specific mappings of keys to paths.\nConfigMap volumes support ownership management and SELinux relabeling."
        },
        "vsphereVolume": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "volumePath": {
              "type": [
                "string",
                "null"
              ],
              "title": "volumePath is the path that identifies vSphere volume vmdk"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
            },
            "storagePolicyName": {
              "type": [
                "string",
                "null"
              ],
              "title": "storagePolicyName is the storage Policy Based Management (SPBM) profile name.\n+optional"
            },
            "storagePolicyID": {
              "type": [
                "string",
                "null"
              ],
              "title": "storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.\n+optional"
            }
          },
          "description": "Represents a vSphere volume resource."
        },
        "quobyte": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "registry": {
              "type": [
                "string",
                "null"
              ],
              "title": "registry represents a single or multiple Quobyte Registry services\nspecified as a string as host:port pair (multiple entries are separated with commas)\nwhich acts as the central registry for volumes"
            },
            "volume": {
              "type": [
                "string",
                "null"
              ],
              "description": "volume is a string that references an already created Quobyte volume by name."
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly here will force the Quobyte volume to be mounted with read-only permissions.\nDefaults to false.\n+optional"
            },
            "user": {
              "type": [
                "string",
                "null"
              ],
              "title": "user to map volume access to\nDefaults to serivceaccount user\n+optional"
            },
            "group": {
              "type": [
                "string",
                "null"
              ],
              "title": "group to map volume access to\nDefault is no group\n+optional"
            },
            "tenant": {
              "type": [
                "string",
                "null"
              ],
              "title": "tenant owning the given Quobyte volume in the Backend\nUsed with dynamically provisioned Quobyte volumes, value is set by the plugin\n+optional"
            }
          },
          "description": "Represents a Quobyte mount that lasts the lifetime of a pod.\nQuobyte volumes do not support ownership management or SELinux relabeling."
        },
        "azureDisk": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "diskName": {
              "type": [
                "string",
                "null"
              ],
              "title": "diskName is the Name of the data disk in the blob storage"
            },
            "diskURI": {
              "type": [
                "string",
                "null"
              ],
              "title": "diskURI is the URI of data disk in the blob storage"
            },
            "cachingMode": {
              "type": [
                "string",
                "null"
              ],
              "title": "cachingMode is the Host Caching mode: None, Read Only, Read Write.\n+optional"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is Filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            },
            "kind": {
              "type": [
                "string",
                "null"
              ],
              "title": "kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared"
            }
          },
          "description": "AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod."
        },
        "photonPersistentDisk": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "pdID": {
              "type": [
                "string",
                "null"
              ],
              "title": "pdID is the ID that identifies Photon Controller persistent disk"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "description": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified."
            }
          },
          "description": "Represents a Photon Controller persistent disk resource."
        },
        "projected": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "sources": {
              "type": [
                "array",
                "null"
              ],
              "items": {
                "type": [
                  "object",
                  "null"
                ],
                "properties": {
                  "secret": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "localObjectReference": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                          }
                        },
                        "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
                      },
                      "items": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "key is the key to project."
                            },
                            "path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                            },
                            "mode": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32",
                              "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                            }
                          },
                          "description": "Maps a string key to a path within a volume."
                        },
                        "title": "items if unspecified, each key-value pair in the Data field of the referenced\nSecret will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the Secret,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
                      },
                      "optional": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "title": "optional field specify whether the Secret or its key must be defined\n+optional"
                      }
                    },
                    "description": "Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names.\nNote that this is identical to a secret volume source without the default\nmode."
                  },
                  "downwardAPI": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "items": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "title": "Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'"
                            },
                            "fieldRef": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "apiVersion": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "title": "Version of the schema the FieldPath is written in terms of, defaults to \"v1\".\n+optional"
                                },
                                "fieldPath": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "Path of the field to select in the specified API version."
                                }
                              },
                              "title": "ObjectFieldSelector selects an APIVersioned field of an object.\n+structType=atomic"
                            },
                            "resourceFieldRef": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "containerName": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "title": "Container name: required for volumes, optional for env vars\n+optional"
                                },
                                "resource": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "title": "Required: resource to select"
                                },
                                "divisor": {
                                  "type": [
                                    "object",
                                    "null"
                                  ],
                                  "properties": {
                                    "string": {
                                      "type": [
                                        "string",
                                        "null"
                                      ]
                                    }
                                  },
                                  "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
                                }
                              },
                              "title": "ResourceFieldSelector represents container resources (cpu, memory) and their output format\n+structType=atomic"
                            },
                            "mode": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32",
                              "title": "Optional: mode bits used to set permissions on this file, must be an octal value\nbetween 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                            }
                          },
                          "title": "DownwardAPIVolumeFile represents information to create the file containing the pod field"
                        },
                        "title": "Items is a list of DownwardAPIVolume file\n+optional"
                      }
                    },
                    "description": "Represents downward API info for projecting into a projected volume.\nNote that this is identical to a downwardAPI volume source without the default\nmode."
                  },
                  "configMap": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "localObjectReference": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                          }
                        },
                        "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
                      },
                      "items": {
                        "type": [
                          "array",
                          "null"
                        ],
                        "items": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "properties": {
                            "key": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "key is the key to project."
                            },
                            "path": {
                              "type": [
                                "string",
                                "null"
                              ],
                              "description": "path is the relative path of the file to map the key to.\nMay not be an absolute path.\nMay not contain the path element '..'.\nMay not start with the string '..'."
                            },
                            "mode": {
                              "type": [
                                "integer",
                                "null"
                              ],
                              "format": "int32",
                              "title": "mode is Optional: mode bits used to set permissions on this file.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nIf not specified, the volume defaultMode will be used.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
                            }
                          },
                          "description": "Maps a string key to a path within a volume."
                        },
                        "title": "items if unspecified, each key-value pair in the Data field of the referenced\nConfigMap will be projected into the volume as a file whose name is the\nkey and content is the value. If specified, the listed keys will be\nprojected into the specified paths, and unlisted keys will not be\npresent. If a key is specified which is not present in the ConfigMap,\nthe volume setup will error unless it is marked optional. Paths must be\nrelative and may not contain the '..' path or start with '..'.\n+optional"
                      },
                      "optional": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "title": "optional specify whether the ConfigMap or its keys must be defined\n+optional"
                      }
                    },
                    "description": "Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a\nprojected volume as files using the keys in the Data field as the file names,\nunless the items element is populated with specific mappings of keys to paths.\nNote that this is identical to a configmap volume source without the default\nmode."
                  },
                  "serviceAccountToken": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "audience": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "title": "audience is the intended audience of the token. A recipient of a token\nmust identify itself with an identifier specified in the audience of the\ntoken, and otherwise should reject the token. The audience defaults to the\nidentifier of the apiserver.\n+optional"
                      },
                      "expirationSeconds": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "format": "int64",
                        "title": "expirationSeconds is the requested duration of validity of the service\naccount token. As the token approaches expiration, the kubelet volume\nplugin will proactively rotate the service account token. The kubelet will\nstart trying to rotate the token if the token is older than 80 percent of\nits time to live or if the token is older than 24 hours.Defaults to 1 hour\nand must be at least 10 minutes.\n+optional"
                      },
                      "path": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "path is the path relative to the mount point of the file to project the\ntoken into."
                      }
                    },
                    "description": "ServiceAccountTokenProjection represents a projected service account token\nvolume. This projection can be used to insert a service account token into\nthe pods runtime filesystem for use against APIs (Kubernetes API Server or\notherwise)."
                  },
                  "clusterTrustBundle": {
                    "type": [
                      "object",
                      "null"
                    ],
                    "properties": {
                      "name": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "title": "Select a single ClusterTrustBundle by object name.  Mutually-exclusive\nwith signerName and labelSelector.\n+optional"
                      },
                      "signerName": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "title": "Select all ClusterTrustBundles that match this signer name.\nMutually-exclusive with name.  The contents of all selected\nClusterTrustBundles will be unified and deduplicated.\n+optional"
                      },
                      "labelSelector": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "matchLabels": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "additionalProperties": {
                              "type": [
                                "string",
                                "null"
                              ]
                            },
                            "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
                          },
                          "matchExpressions": {
                            "type": [
                              "array",
                              "null"
                            ],
                            "items": {
                              "type": [
                                "object",
                                "null"
                              ],
                              "properties": {
                                "key": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "key is the label key that the selector applies to."
                                },
                                "operator": {
                                  "type": [
                                    "string",
                                    "null"
                                  ],
                                  "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                                },
                                "values": {
                                  "type": [
                                    "array",
                                    "null"
                                  ],
                                  "items": {
                                    "type": [
                                      "string",
                                      "null"
                                    ]
                                  },
                                  "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
                                }
                              },
                              "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                            },
                            "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
                          }
                        },
                        "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
                      },
                      "optional": {
                        "type": [
                          "boolean",
                          "null"
                        ],
                        "title": "If true, don't block pod startup if the referenced ClusterTrustBundle(s)\naren't available.  If using name, then the named ClusterTrustBundle is\nallowed not to exist.  If using signerName, then the combination of\nsignerName and labelSelector is allowed to match zero\nClusterTrustBundles.\n+optional"
                      },
                      "path": {
                        "type": [
                          "string",
                          "null"
                        ],
                        "description": "Relative path from the volume root to write the bundle."
                      }
                    },
                    "description": "ClusterTrustBundleProjection describes how to select a set of\nClusterTrustBundle objects and project their contents into the pod\nfilesystem."
                  }
                },
                "title": "Projection that may be projected along with other supported volume types"
              },
              "title": "sources is the list of volume projections\n+optional"
            },
            "defaultMode": {
              "type": [
                "integer",
                "null"
              ],
              "format": "int32",
              "title": "defaultMode are the mode bits used to set permissions on created files by default.\nMust be an octal value between 0000 and 0777 or a decimal value between 0 and 511.\nYAML accepts both octal and decimal values, JSON requires decimal values for mode bits.\nDirectories within the path are not affected by this setting.\nThis might be in conflict with other options that affect the file\nmode, like fsGroup, and the result can be other mode bits set.\n+optional"
            }
          },
          "title": "Represents a projected volume source"
        },
        "portworxVolume": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "volumeID": {
              "type": [
                "string",
                "null"
              ],
              "title": "volumeID uniquely identifies a Portworx volume"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "description": "fSType represents the filesystem type to mount\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\". Implicitly inferred to be \"ext4\" if unspecified."
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            }
          },
          "description": "PortworxVolumeSource represents a Portworx volume resource."
        },
        "scaleIO": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "gateway": {
              "type": [
                "string",
                "null"
              ],
              "description": "gateway is the host address of the ScaleIO API Gateway."
            },
            "system": {
              "type": [
                "string",
                "null"
              ],
              "description": "system is the name of the storage system as configured in ScaleIO."
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            },
            "sslEnabled": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "sslEnabled Flag enable/disable SSL communication with Gateway, default false\n+optional"
            },
            "protectionDomain": {
              "type": [
                "string",
                "null"
              ],
              "title": "protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.\n+optional"
            },
            "storagePool": {
              "type": [
                "string",
                "null"
              ],
              "title": "storagePool is the ScaleIO Storage Pool associated with the protection domain.\n+optional"
            },
            "storageMode": {
              "type": [
                "string",
                "null"
              ],
              "title": "storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.\nDefault is ThinProvisioned.\n+optional"
            },
            "volumeName": {
              "type": [
                "string",
                "null"
              ],
              "description": "volumeName is the name of a volume already created in the ScaleIO system\nthat is associated with this volume source."
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\".\nDefault is \"xfs\".\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly Defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            }
          },
          "title": "ScaleIOVolumeSource represents a persistent ScaleIO volume"
        },
        "storageos": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "volumeName": {
              "type": [
                "string",
                "null"
              ],
              "description": "volumeName is the human-readable name of the StorageOS volume.  Volume\nnames are only unique within a namespace."
            },
            "volumeNamespace": {
              "type": [
                "string",
                "null"
              ],
              "title": "volumeNamespace specifies the scope of the volume within StorageOS.  If no\nnamespace is specified then the Pod's namespace will be used.  This allows the\nKubernetes name scoping to be mirrored within StorageOS for tighter integration.\nSet VolumeName to any name to override the default behaviour.\nSet to \"default\" if you are not using namespaces within StorageOS.\nNamespaces that do not pre-exist within StorageOS will be created.\n+optional"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType is the filesystem type to mount.\nMust be a filesystem type supported by the host operating system.\nEx. \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"ext4\" if unspecified.\n+optional"
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly defaults to false (read/write). ReadOnly here will force\nthe ReadOnly setting in VolumeMounts.\n+optional"
            },
            "secretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            }
          },
          "description": "Represents a StorageOS persistent volume resource."
        },
        "csi": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "driver": {
              "type": [
                "string",
                "null"
              ],
              "description": "driver is the name of the CSI driver that handles this volume.\nConsult with your admin for the correct name as registered in the cluster."
            },
            "readOnly": {
              "type": [
                "boolean",
                "null"
              ],
              "title": "readOnly specifies a read-only configuration for the volume.\nDefaults to false (read/write).\n+optional"
            },
            "fsType": {
              "type": [
                "string",
                "null"
              ],
              "title": "fsType to mount. Ex. \"ext4\", \"xfs\", \"ntfs\".\nIf not provided, the empty value is passed to the associated CSI driver\nwhich will determine the default filesystem to apply.\n+optional"
            },
            "volumeAttributes": {
              "type": [
                "object",
                "null"
              ],
              "additionalProperties": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "title": "volumeAttributes stores driver-specific properties that are passed to the CSI\ndriver. Consult your driver's documentation for supported values.\n+optional"
            },
            "nodePublishSecretRef": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "name": {
                  "type": [
                    "string",
                    "null"
                  ],
                  "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\nTODO: Add other useful fields. apiVersion, kind, uid?\n+optional"
                }
              },
              "title": "LocalObjectReference contains enough information to let you locate the\nreferenced object inside the same namespace.\n+structType=atomic"
            }
          },
          "title": "Represents a source location of a volume to mount, managed by an external CSI driver"
        },
        "ephemeral": {
          "type": [
            "object",
            "null"
          ],
          "properties": {
            "volumeClaimTemplate": {
              "type": [
                "object",
                "null"
              ],
              "properties": {
                "metadata": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "name": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Name must be unique within a namespace. Is required when creating resources, although\nsome resources may allow a client to request the generation of an appropriate name\nautomatically. Name is primarily intended for creation idempotence and configuration\ndefinition.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n+optional"
                    },
                    "generateName": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "GenerateName is an optional prefix, used by the server, to generate a unique\nname ONLY IF the Name field has not been provided.\nIf this field is used, the name returned to the client will be different\nthan the name passed. This value will also be combined with a unique suffix.\nThe provided value has the same validation rules as the Name field,\nand may be truncated by the length of the suffix required to make the value\nunique on the server.\n\nIf this field is specified and the generated name exists, the server will return a 409.\n\nApplied only if Name is not specified.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n+optional"
                    },
                    "namespace": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "Namespace defines the space within which each name must be unique. An empty namespace is\nequivalent to the \"default\" namespace, but \"default\" is the canonical representation.\nNot all objects are required to be scoped to a namespace - the value of this field for\nthose objects will be empty.\n\nMust be a DNS_LABEL.\nCannot be updated.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n+optional"
                    },
                    "selfLink": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.\n+optional"
                    },
                    "uid": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "UID is the unique in time and space value for this object. It is typically generated by\nthe server on successful creation of a resource and is not allowed to change on PUT\noperations.\n\nPopulated by the system.\nRead-only.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n+optional"
                    },
                    "resourceVersion": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "An opaque value that represents the internal version of this object that can\nbe used by clients to determine when objects have changed. May be used for optimistic\nconcurrency, change detection, and the watch operation on a resource or set of resources.\nClients must treat these values as opaque and passed unmodified back to the server.\nThey may only be valid for a particular resource or set of resources.\n\nPopulated by the system.\nRead-only.\nValue must be treated as opaque by clients and .\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n+optional"
                    },
                    "generation": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "int64",
                      "title": "A sequence number representing a specific generation of the desired state.\nPopulated by the system. Read-only.\n+optional"
                    },
                    "creationTimestamp": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "seconds": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "format": "int64",
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
                        },
                        "nanos": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int32",
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
                        }
                      },
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
                    },
                    "deletionTimestamp": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "seconds": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "format": "int64",
                          "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
                        },
                        "nanos": {
                          "type": [
                            "integer",
                            "null"
                          ],
                          "format": "int32",
                          "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
                        }
                      },
                      "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
                    },
                    "deletionGracePeriodSeconds": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "int64",
                      "title": "Number of seconds allowed for this object to gracefully terminate before\nit will be removed from the system. Only set when deletionTimestamp is also set.\nMay only be shortened.\nRead-only.\n+optional"
                    },
                    "labels": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "title": "Map of string keys and values that can be used to organize and categorize\n(scope and select) objects. May match selectors of replication controllers\nand services.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n+optional"
                    },
                    "annotations": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "additionalProperties": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "title": "Annotations is an unstructured key value map stored with a resource that may be\nset by external tools to store and retrieve arbitrary metadata. They are not\nqueryable and should be preserved when modifying objects.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n+optional"
                    },
                    "ownerReferences": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "apiVersion": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "API version of the referent."
                          },
                          "kind": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "title": "Kind of the referent.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
                          },
                          "name": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "title": "Name of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names"
                          },
                          "uid": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "title": "UID of the referent.\nMore info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids"
                          },
                          "controller": {
                            "type": [
                              "boolean",
                              "null"
                            ],
                            "title": "If true, this reference points to the managing controller.\n+optional"
                          },
                          "blockOwnerDeletion": {
                            "type": [
                              "boolean",
                              "null"
                            ],
                            "title": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then\nthe owner cannot be deleted from the key-value store until this\nreference is removed.\nSee https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion\nfor how the garbage collector interacts with this field and enforces the foreground deletion.\nDefaults to false.\nTo set this field, a user needs \"delete\" permission of the owner,\notherwise 422 (Unprocessable Entity) will be returned.\n+optional"
                          }
                        },
                        "title": "OwnerReference contains enough information to let you identify an owning\nobject. An owning object must be in the same namespace as the dependent, or\nbe cluster-scoped, so there is no namespace field.\n+structType=atomic"
                      },
                      "title": "List of objects depended by this object. If ALL objects in the list have\nbeen deleted, this object will be garbage collected. If this object is managed by a controller,\nthen an entry in this list will point to this controller, with the controller field set to true.\nThere cannot be more than one managing controller.\n+optional\n+patchMergeKey=uid\n+patchStrategy=merge"
                    },
                    "finalizers": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "title": "Must be empty before the object is deleted from the registry. Each entry\nis an identifier for the responsible component that will remove the entry\nfrom the list. If the deletionTimestamp of the object is non-nil, entries\nin this list can only be removed.\nFinalizers may be processed and removed in any order.  Order is NOT enforced\nbecause it introduces significant risk of stuck finalizers.\nfinalizers is a shared field, any actor with permission can reorder it.\nIf the finalizer list is processed in order, then this can lead to a situation\nin which the component responsible for the first finalizer in the list is\nwaiting for a signal (field value, external system, or other) produced by a\ncomponent responsible for a finalizer later in the list, resulting in a deadlock.\nWithout enforced ordering finalizers are free to order amongst themselves and\nare not vulnerable to ordering changes in the list.\n+optional\n+patchStrategy=merge"
                    },
                    "managedFields": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "object",
                          "null"
                        ],
                        "properties": {
                          "manager": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Manager is an identifier of the workflow managing these fields."
                          },
                          "operation": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Operation is the type of operation which lead to this ManagedFieldsEntry being created.\nThe only valid values for this field are 'Apply' and 'Update'."
                          },
                          "apiVersion": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "APIVersion defines the version of this resource that this field set\napplies to. The format is \"group/version\" just like the top-level\nAPIVersion field. It is necessary to track the version of a field\nset because it cannot be automatically converted."
                          },
                          "time": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "seconds": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "format": "int64",
                                "description": "Represents seconds of UTC time since Unix epoch\n1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to\n9999-12-31T23:59:59Z inclusive."
                              },
                              "nanos": {
                                "type": [
                                  "integer",
                                  "null"
                                ],
                                "format": "int32",
                                "description": "Non-negative fractions of a second at nanosecond resolution. Negative\nsecond values with fractions must still have non-negative nanos values\nthat count forward in time. Must be from 0 to 999,999,999\ninclusive. This field may be limited in precision depending on context."
                              }
                            },
                            "description": "Time is a wrapper around time.Time which supports correct\nmarshaling to YAML and JSON.  Wrappers are provided for many\nof the factory methods that the time package offers.\n\n+protobuf.options.marshal=false\n+protobuf.as=Timestamp\n+protobuf.options.(gogoproto.goproto_stringer)=false"
                          },
                          "fieldsType": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "title": "FieldsType is the discriminator for the different fields format and version.\nThere is currently only one possible value: \"FieldsV1\""
                          },
                          "fieldsV1": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "Raw": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "format": "byte",
                                "description": "Raw is the underlying serialization of this object."
                              }
                            },
                            "description": "FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.\n\nEach key is either a '.' representing the field itself, and will always map to an empty set,\nor a string representing a sub-field or item. The string will follow one of these four formats:\n'f:<name>', where <name> is the name of a field in a struct, or key in a map\n'v:<value>', where <value> is the exact json formatted value of a list item\n'i:<index>', where <index> is position of a item in a list\n'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values\nIf a key maps to an empty Fields value, the field that key represents is part of the set.\n\nThe exact format is defined in sigs.k8s.io/structured-merge-diff\n+protobuf.options.(gogoproto.goproto_stringer)=false"
                          },
                          "subresource": {
                            "type": [
                              "string",
                              "null"
                            ],
                            "description": "Subresource is the name of the subresource used to update that object, or\nempty string if the object was updated through the main resource. The\nvalue of this field is used to distinguish between managers, even if they\nshare the same name. For example, a status update will be distinct from a\nregular update using the same manager name.\nNote that the APIVersion field is not related to the Subresource field and\nit always corresponds to the version of the main resource."
                          }
                        },
                        "description": "ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource\nthat the fieldset applies to."
                      },
                      "description": "ManagedFields maps workflow-id and version to the set of fields\nthat are managed by that workflow. This is mostly for internal\nhousekeeping, and users typically shouldn't need to set or\nunderstand this field. A workflow can be the user's name, a\ncontroller's name, or the name of a specific apply path like\n\"ci-cd\". The set of fields is always in the version that the\nworkflow used when modifying the object.\n\n+optional"
                    }
                  },
                  "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects\nusers must create."
                },
                "spec": {
                  "type": [
                    "object",
                    "null"
                  ],
                  "properties": {
                    "accessModes": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": [
                          "string",
                          "null"
                        ]
                      },
                      "title": "accessModes contains the desired access modes the volume should have.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1\n+optional"
                    },
                    "selector": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "matchLabels": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "title": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.\n+optional"
                        },
                        "matchExpressions": {
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "key": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "key is the label key that the selector applies to."
                              },
                              "operator": {
                                "type": [
                                  "string",
                                  "null"
                                ],
                                "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist."
                              },
                              "values": {
                                "type": [
                                  "array",
                                  "null"
                                ],
                                "items": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "title": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.\n+optional"
                              }
                            },
                            "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values."
                          },
                          "title": "matchExpressions is a list of label selector requirements. The requirements are ANDed.\n+optional"
                        }
                      },
                      "title": "A label selector is a label query over a set of resources. The result of matchLabels and\nmatchExpressions are ANDed. An empty label selector matches all objects. A null\nlabel selector matches no objects.\n+structType=atomic"
                    },
                    "resources": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "limits": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "string": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
                          },
                          "title": "Limits describes the maximum amount of compute resources allowed.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
                        },
                        "requests": {
                          "type": [
                            "object",
                            "null"
                          ],
                          "additionalProperties": {
                            "type": [
                              "object",
                              "null"
                            ],
                            "properties": {
                              "string": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "description": "Quantity is a fixed-point representation of a number.\nIt provides convenient marshaling/unmarshaling in JSON and YAML,\nin addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n```\n<quantity>        ::= <signedNumber><suffix>\n\n\t(Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n\n<digit>           ::= 0 | 1 | ... | 9\n<digits>          ::= <digit> | <digit><digits>\n<number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>\n<sign>            ::= \"+\" | \"-\"\n<signedNumber>    ::= <number> | <sign><number>\n<suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>\n<binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n\n\t(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n\n\t(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n```\n\nNo matter which of the three exponent forms is used, no quantity may represent\na number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal\nplaces. Numbers larger or more precise will be capped or rounded up.\n(E.g.: 0.1m will rounded up to 1m.)\nThis may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix\nit had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\".\nThis means that Exponent/suffix will be adjusted up or down (with a\ncorresponding increase or decrease in Mantissa) such that:\n\n- No precision is lost\n- No fractional digits will be emitted\n- The exponent (or suffix) is as large as possible.\n\nThe sign will be omitted unless the number is negative.\n\nExamples:\n\n- 1.5 will be serialized as \"1500m\"\n- 1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a\nfloating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed,\nbut will be re-emitted in their canonical form. (So always use canonical\nform, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without\nwriting some sort of special handling code in the hopes that that will\ncause implementors to also use a fixed point implementation.\n\n+protobuf=true\n+protobuf.embed=string\n+protobuf.options.marshal=false\n+protobuf.options.(gogoproto.goproto_stringer)=false\n+k8s:deepcopy-gen=true\n+k8s:openapi-gen=true"
                          },
                          "title": "Requests describes the minimum amount of compute resources required.\nIf Requests is omitted for a container, it defaults to Limits if that is explicitly specified,\notherwise to an implementation-defined value. Requests cannot exceed Limits.\nMore info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/\n+optional"
                        }
                      },
                      "description": "VolumeResourceRequirements describes the storage resource requirements for a volume."
                    },
                    "volumeName": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "volumeName is the binding reference to the PersistentVolume backing this claim.\n+optional"
                    },
                    "storageClassName": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "storageClassName is the name of the StorageClass required by the claim.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1\n+optional"
                    },
                    "volumeMode": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "volumeMode defines what type of volume is required by the claim.\nValue of Filesystem is implied when not included in claim spec.\n+optional"
                    },
                    "dataSource": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "apiGroup": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
                        },
                        "kind": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Name is the name of resource being referenced"
                        }
                      },
                      "title": "TypedLocalObjectReference contains enough information to let you locate the\ntyped referenced object inside the same namespace.\n+structType=atomic"
                    },
                    "dataSourceRef": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "properties": {
                        "apiGroup": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "APIGroup is the group for the resource being referenced.\nIf APIGroup is not specified, the specified Kind must be in the core API group.\nFor any other third-party types, APIGroup is required.\n+optional"
                        },
                        "kind": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Kind is the type of resource being referenced"
                        },
                        "name": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Name is the name of resource being referenced"
                        },
                        "namespace": {
                          "type": [
                            "string",
                            "null"
                          ],
                          "title": "Namespace is the namespace of resource being referenced\nNote that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.\n(Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.\n+featureGate=CrossNamespaceVolumeDataSource\n+optional"
                        }
                      }
                    },
                    "volumeAttributesClassName": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.\nIf specified, the CSI driver will create or update the volume with the attributes defined\nin the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,\nit can be changed after the claim is created. An empty string value means that no VolumeAttributesClass\nwill be applied to the claim but it's not allowed to reset this field to empty string once it is set.\nIf unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass\nwill be set by the persistentvolume controller if it exists.\nIf the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be\nset to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource\nexists.\nMore info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass\n(Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.\n+featureGate=VolumeAttributesClass\n+optional"
                    }
                  },
                  "title": "PersistentVolumeClaimSpec describes the common attributes of storage devices\nand allows a Source for provider-specific attributes"
                }
              },
              "description": "PersistentVolumeClaimTemplate is used to produce\nPersistentVolumeClaim objects as part of an EphemeralVolumeSource."
            }
          },
          "description": "Represents an ephemeral volume that is handled by a normal storage driver."
        }
      },
      "description": "Represents the source of a volume to mount.\nOnly one of its members may be specified."
    }
  },
  "description": "Volume represents a named volume in a pod that may be accessed by any container in the pod.",
  "$schema": "http://json-schema.org/schema#"
}