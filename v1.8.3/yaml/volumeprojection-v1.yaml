type: object
properties:
  secret:
    type:
      - object
      - "null"
    properties:
      localObjectReference:
        type:
          - object
          - "null"
        properties:
          name:
            type:
              - string
              - "null"
            title: |-
              Name of the referent.
              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
              TODO: Add other useful fields. apiVersion, kind, uid?
              +optional
        title: |-
          LocalObjectReference contains enough information to let you locate the
          referenced object inside the same namespace.
          +structType=atomic
      items:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            key:
              type:
                - string
                - "null"
              description: key is the key to project.
            path:
              type:
                - string
                - "null"
              description: |-
                path is the relative path of the file to map the key to.
                May not be an absolute path.
                May not contain the path element '..'.
                May not start with the string '..'.
            mode:
              type:
                - integer
                - "null"
              format: int32
              title: |-
                mode is Optional: mode bits used to set permissions on this file.
                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                If not specified, the volume defaultMode will be used.
                This might be in conflict with other options that affect the file
                mode, like fsGroup, and the result can be other mode bits set.
                +optional
          description: Maps a string key to a path within a volume.
        title: |-
          items if unspecified, each key-value pair in the Data field of the referenced
          Secret will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the Secret,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
      optional:
        type:
          - boolean
          - "null"
        title: |-
          optional field specify whether the Secret or its key must be defined
          +optional
    description: |-
      Adapts a secret into a projected volume.

      The contents of the target Secret's Data field will be presented in a
      projected volume as files using the keys in the Data field as the file names.
      Note that this is identical to a secret volume source without the default
      mode.
  downwardAPI:
    type:
      - object
      - "null"
    properties:
      items:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            path:
              type:
                - string
                - "null"
              title: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
            fieldRef:
              type:
                - object
                - "null"
              properties:
                apiVersion:
                  type:
                    - string
                    - "null"
                  title: |-
                    Version of the schema the FieldPath is written in terms of, defaults to "v1".
                    +optional
                fieldPath:
                  type:
                    - string
                    - "null"
                  description: Path of the field to select in the specified API version.
              title: |-
                ObjectFieldSelector selects an APIVersioned field of an object.
                +structType=atomic
            resourceFieldRef:
              type:
                - object
                - "null"
              properties:
                containerName:
                  type:
                    - string
                    - "null"
                  title: |-
                    Container name: required for volumes, optional for env vars
                    +optional
                resource:
                  type:
                    - string
                    - "null"
                  title: 'Required: resource to select'
                divisor:
                  type:
                    - object
                    - "null"
                  properties:
                    string:
                      type:
                        - string
                        - "null"
                  description: |-
                    Quantity is a fixed-point representation of a number.
                    It provides convenient marshaling/unmarshaling in JSON and YAML,
                    in addition to String() and AsInt64() accessors.

                    The serialization format is:

                    ```
                    <quantity>        ::= <signedNumber><suffix>

                    	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                    <digit>           ::= 0 | 1 | ... | 9
                    <digits>          ::= <digit> | <digit><digits>
                    <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                    <sign>            ::= "+" | "-"
                    <signedNumber>    ::= <number> | <sign><number>
                    <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                    <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                    	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                    <decimalSI>       ::= m | "" | k | M | G | T | P | E

                    	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                    <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                    ```

                    No matter which of the three exponent forms is used, no quantity may represent
                    a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                    places. Numbers larger or more precise will be capped or rounded up.
                    (E.g.: 0.1m will rounded up to 1m.)
                    This may be extended in the future if we require larger or smaller quantities.

                    When a Quantity is parsed from a string, it will remember the type of suffix
                    it had, and will use the same type again when it is serialized.

                    Before serializing, Quantity will be put in "canonical form".
                    This means that Exponent/suffix will be adjusted up or down (with a
                    corresponding increase or decrease in Mantissa) such that:

                    - No precision is lost
                    - No fractional digits will be emitted
                    - The exponent (or suffix) is as large as possible.

                    The sign will be omitted unless the number is negative.

                    Examples:

                    - 1.5 will be serialized as "1500m"
                    - 1.5Gi will be serialized as "1536Mi"

                    Note that the quantity will NEVER be internally represented by a
                    floating point number. That is the whole point of this exercise.

                    Non-canonical values will still parse as long as they are well formed,
                    but will be re-emitted in their canonical form. (So always use canonical
                    form, or don't diff.)

                    This format is intended to make it difficult to use these numbers without
                    writing some sort of special handling code in the hopes that that will
                    cause implementors to also use a fixed point implementation.

                    +protobuf=true
                    +protobuf.embed=string
                    +protobuf.options.marshal=false
                    +protobuf.options.(gogoproto.goproto_stringer)=false
                    +k8s:deepcopy-gen=true
                    +k8s:openapi-gen=true
              title: |-
                ResourceFieldSelector represents container resources (cpu, memory) and their output format
                +structType=atomic
            mode:
              type:
                - integer
                - "null"
              format: int32
              title: |-
                Optional: mode bits used to set permissions on this file, must be an octal value
                between 0000 and 0777 or a decimal value between 0 and 511.
                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                If not specified, the volume defaultMode will be used.
                This might be in conflict with other options that affect the file
                mode, like fsGroup, and the result can be other mode bits set.
                +optional
          title: DownwardAPIVolumeFile represents information to create the file containing the pod field
        title: |-
          Items is a list of DownwardAPIVolume file
          +optional
    description: |-
      Represents downward API info for projecting into a projected volume.
      Note that this is identical to a downwardAPI volume source without the default
      mode.
  configMap:
    type:
      - object
      - "null"
    properties:
      localObjectReference:
        type:
          - object
          - "null"
        properties:
          name:
            type:
              - string
              - "null"
            title: |-
              Name of the referent.
              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
              TODO: Add other useful fields. apiVersion, kind, uid?
              +optional
        title: |-
          LocalObjectReference contains enough information to let you locate the
          referenced object inside the same namespace.
          +structType=atomic
      items:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            key:
              type:
                - string
                - "null"
              description: key is the key to project.
            path:
              type:
                - string
                - "null"
              description: |-
                path is the relative path of the file to map the key to.
                May not be an absolute path.
                May not contain the path element '..'.
                May not start with the string '..'.
            mode:
              type:
                - integer
                - "null"
              format: int32
              title: |-
                mode is Optional: mode bits used to set permissions on this file.
                Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                If not specified, the volume defaultMode will be used.
                This might be in conflict with other options that affect the file
                mode, like fsGroup, and the result can be other mode bits set.
                +optional
          description: Maps a string key to a path within a volume.
        title: |-
          items if unspecified, each key-value pair in the Data field of the referenced
          ConfigMap will be projected into the volume as a file whose name is the
          key and content is the value. If specified, the listed keys will be
          projected into the specified paths, and unlisted keys will not be
          present. If a key is specified which is not present in the ConfigMap,
          the volume setup will error unless it is marked optional. Paths must be
          relative and may not contain the '..' path or start with '..'.
          +optional
      optional:
        type:
          - boolean
          - "null"
        title: |-
          optional specify whether the ConfigMap or its keys must be defined
          +optional
    description: |-
      Adapts a ConfigMap into a projected volume.

      The contents of the target ConfigMap's Data field will be presented in a
      projected volume as files using the keys in the Data field as the file names,
      unless the items element is populated with specific mappings of keys to paths.
      Note that this is identical to a configmap volume source without the default
      mode.
  serviceAccountToken:
    type:
      - object
      - "null"
    properties:
      audience:
        type:
          - string
          - "null"
        title: |-
          audience is the intended audience of the token. A recipient of a token
          must identify itself with an identifier specified in the audience of the
          token, and otherwise should reject the token. The audience defaults to the
          identifier of the apiserver.
          +optional
      expirationSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          expirationSeconds is the requested duration of validity of the service
          account token. As the token approaches expiration, the kubelet volume
          plugin will proactively rotate the service account token. The kubelet will
          start trying to rotate the token if the token is older than 80 percent of
          its time to live or if the token is older than 24 hours.Defaults to 1 hour
          and must be at least 10 minutes.
          +optional
      path:
        type:
          - string
          - "null"
        description: |-
          path is the path relative to the mount point of the file to project the
          token into.
    description: |-
      ServiceAccountTokenProjection represents a projected service account token
      volume. This projection can be used to insert a service account token into
      the pods runtime filesystem for use against APIs (Kubernetes API Server or
      otherwise).
  clusterTrustBundle:
    type:
      - object
      - "null"
    properties:
      name:
        type:
          - string
          - "null"
        title: |-
          Select a single ClusterTrustBundle by object name.  Mutually-exclusive
          with signerName and labelSelector.
          +optional
      signerName:
        type:
          - string
          - "null"
        title: |-
          Select all ClusterTrustBundles that match this signer name.
          Mutually-exclusive with name.  The contents of all selected
          ClusterTrustBundles will be unified and deduplicated.
          +optional
      labelSelector:
        type:
          - object
          - "null"
        properties:
          matchLabels:
            type:
              - object
              - "null"
            additionalProperties:
              type:
                - string
                - "null"
            title: |-
              matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
              map is equivalent to an element of matchExpressions, whose key field is "key", the
              operator is "In", and the values array contains only "value". The requirements are ANDed.
              +optional
          matchExpressions:
            type:
              - array
              - "null"
            items:
              type:
                - object
                - "null"
              properties:
                key:
                  type:
                    - string
                    - "null"
                  description: key is the label key that the selector applies to.
                operator:
                  type:
                    - string
                    - "null"
                  description: |-
                    operator represents a key's relationship to a set of values.
                    Valid operators are In, NotIn, Exists and DoesNotExist.
                values:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - string
                      - "null"
                  title: |-
                    values is an array of string values. If the operator is In or NotIn,
                    the values array must be non-empty. If the operator is Exists or DoesNotExist,
                    the values array must be empty. This array is replaced during a strategic
                    merge patch.
                    +optional
              description: |-
                A label selector requirement is a selector that contains values, a key, and an operator that
                relates the key and values.
            title: |-
              matchExpressions is a list of label selector requirements. The requirements are ANDed.
              +optional
        title: |-
          A label selector is a label query over a set of resources. The result of matchLabels and
          matchExpressions are ANDed. An empty label selector matches all objects. A null
          label selector matches no objects.
          +structType=atomic
      optional:
        type:
          - boolean
          - "null"
        title: |-
          If true, don't block pod startup if the referenced ClusterTrustBundle(s)
          aren't available.  If using name, then the named ClusterTrustBundle is
          allowed not to exist.  If using signerName, then the combination of
          signerName and labelSelector is allowed to match zero
          ClusterTrustBundles.
          +optional
      path:
        type:
          - string
          - "null"
        description: Relative path from the volume root to write the bundle.
    description: |-
      ClusterTrustBundleProjection describes how to select a set of
      ClusterTrustBundle objects and project their contents into the pod
      filesystem.
title: Projection that may be projected along with other supported volume types
$schema: http://json-schema.org/schema#
