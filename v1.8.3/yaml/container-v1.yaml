type: object
properties:
  name:
    type:
      - string
      - "null"
    description: |-
      Name of the container specified as a DNS_LABEL.
      Each container in a pod must have a unique name (DNS_LABEL).
      Cannot be updated.
  image:
    type:
      - string
      - "null"
    title: |-
      Container image name.
      More info: https://kubernetes.io/docs/concepts/containers/images
      This field is optional to allow higher level config management to default or override
      container images in workload controllers like Deployments and StatefulSets.
      +optional
  command:
    type:
      - array
      - "null"
    items:
      type:
        - string
        - "null"
    title: |-
      Entrypoint array. Not executed within a shell.
      The container image's ENTRYPOINT is used if this is not provided.
      Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
      cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
      to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
      produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
      of whether the variable exists or not. Cannot be updated.
      More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
      +optional
  args:
    type:
      - array
      - "null"
    items:
      type:
        - string
        - "null"
    title: |-
      Arguments to the entrypoint.
      The container image's CMD is used if this is not provided.
      Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
      cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
      to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
      produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
      of whether the variable exists or not. Cannot be updated.
      More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
      +optional
  workingDir:
    type:
      - string
      - "null"
    title: |-
      Container's working directory.
      If not specified, the container runtime's default will be used, which
      might be configured in the container image.
      Cannot be updated.
      +optional
  ports:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        name:
          type:
            - string
            - "null"
          title: |-
            If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
            named port in a pod must have a unique name. Name for the port that can be
            referred to by services.
            +optional
        hostPort:
          type:
            - integer
            - "null"
          format: int32
          title: |-
            Number of port to expose on the host.
            If specified, this must be a valid port number, 0 < x < 65536.
            If HostNetwork is specified, this must match ContainerPort.
            Most containers do not need this.
            +optional
        containerPort:
          type:
            - integer
            - "null"
          format: int32
          description: |-
            Number of port to expose on the pod's IP address.
            This must be a valid port number, 0 < x < 65536.
        protocol:
          type:
            - string
            - "null"
          title: |-
            Protocol for port. Must be UDP, TCP, or SCTP.
            Defaults to "TCP".
            +optional
            +default="TCP"
        hostIP:
          type:
            - string
            - "null"
          title: |-
            What host IP to bind the external port to.
            +optional
      description: ContainerPort represents a network port in a single container.
    title: |-
      List of ports to expose from the container. Not specifying a port here
      DOES NOT prevent that port from being exposed. Any port which is
      listening on the default "0.0.0.0" address inside a container will be
      accessible from the network.
      Modifying this array with strategic merge patch may corrupt the data.
      For more information See https://github.com/kubernetes/kubernetes/issues/108255.
      Cannot be updated.
      +optional
      +patchMergeKey=containerPort
      +patchStrategy=merge
      +listType=map
      +listMapKey=containerPort
      +listMapKey=protocol
  envFrom:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        prefix:
          type:
            - string
            - "null"
          title: |-
            An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
            +optional
        configMapRef:
          type:
            - object
            - "null"
          properties:
            localObjectReference:
              type:
                - object
                - "null"
              properties:
                name:
                  type:
                    - string
                    - "null"
                  title: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?
                    +optional
              title: |-
                LocalObjectReference contains enough information to let you locate the
                referenced object inside the same namespace.
                +structType=atomic
            optional:
              type:
                - boolean
                - "null"
              title: |-
                Specify whether the ConfigMap must be defined
                +optional
          description: |-
            ConfigMapEnvSource selects a ConfigMap to populate the environment
            variables with.

            The contents of the target ConfigMap's Data field will represent the
            key-value pairs as environment variables.
        secretRef:
          type:
            - object
            - "null"
          properties:
            localObjectReference:
              type:
                - object
                - "null"
              properties:
                name:
                  type:
                    - string
                    - "null"
                  title: |-
                    Name of the referent.
                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    TODO: Add other useful fields. apiVersion, kind, uid?
                    +optional
              title: |-
                LocalObjectReference contains enough information to let you locate the
                referenced object inside the same namespace.
                +structType=atomic
            optional:
              type:
                - boolean
                - "null"
              title: |-
                Specify whether the Secret must be defined
                +optional
          description: |-
            SecretEnvSource selects a Secret to populate the environment
            variables with.

            The contents of the target Secret's Data field will represent the
            key-value pairs as environment variables.
      title: EnvFromSource represents the source of a set of ConfigMaps
    title: |-
      List of sources to populate environment variables in the container.
      The keys defined within a source must be a C_IDENTIFIER. All invalid keys
      will be reported as an event when the container is starting. When a key exists in multiple
      sources, the value associated with the last source will take precedence.
      Values defined by an Env with a duplicate key will take precedence.
      Cannot be updated.
      +optional
  env:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        name:
          type:
            - string
            - "null"
          description: Name of the environment variable. Must be a C_IDENTIFIER.
        value:
          type:
            - string
            - "null"
          title: |-
            Variable references $(VAR_NAME) are expanded
            using the previously defined environment variables in the container and
            any service environment variables. If a variable cannot be resolved,
            the reference in the input string will be unchanged. Double $$ are reduced
            to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
            "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
            Escaped references will never be expanded, regardless of whether the variable
            exists or not.
            Defaults to "".
            +optional
        valueFrom:
          type:
            - object
            - "null"
          properties:
            fieldRef:
              type:
                - object
                - "null"
              properties:
                apiVersion:
                  type:
                    - string
                    - "null"
                  title: |-
                    Version of the schema the FieldPath is written in terms of, defaults to "v1".
                    +optional
                fieldPath:
                  type:
                    - string
                    - "null"
                  description: Path of the field to select in the specified API version.
              title: |-
                ObjectFieldSelector selects an APIVersioned field of an object.
                +structType=atomic
            resourceFieldRef:
              type:
                - object
                - "null"
              properties:
                containerName:
                  type:
                    - string
                    - "null"
                  title: |-
                    Container name: required for volumes, optional for env vars
                    +optional
                resource:
                  type:
                    - string
                    - "null"
                  title: 'Required: resource to select'
                divisor:
                  type:
                    - object
                    - "null"
                  properties:
                    string:
                      type:
                        - string
                        - "null"
                  description: |-
                    Quantity is a fixed-point representation of a number.
                    It provides convenient marshaling/unmarshaling in JSON and YAML,
                    in addition to String() and AsInt64() accessors.

                    The serialization format is:

                    ```
                    <quantity>        ::= <signedNumber><suffix>

                    	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                    <digit>           ::= 0 | 1 | ... | 9
                    <digits>          ::= <digit> | <digit><digits>
                    <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                    <sign>            ::= "+" | "-"
                    <signedNumber>    ::= <number> | <sign><number>
                    <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                    <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                    	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                    <decimalSI>       ::= m | "" | k | M | G | T | P | E

                    	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                    <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                    ```

                    No matter which of the three exponent forms is used, no quantity may represent
                    a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                    places. Numbers larger or more precise will be capped or rounded up.
                    (E.g.: 0.1m will rounded up to 1m.)
                    This may be extended in the future if we require larger or smaller quantities.

                    When a Quantity is parsed from a string, it will remember the type of suffix
                    it had, and will use the same type again when it is serialized.

                    Before serializing, Quantity will be put in "canonical form".
                    This means that Exponent/suffix will be adjusted up or down (with a
                    corresponding increase or decrease in Mantissa) such that:

                    - No precision is lost
                    - No fractional digits will be emitted
                    - The exponent (or suffix) is as large as possible.

                    The sign will be omitted unless the number is negative.

                    Examples:

                    - 1.5 will be serialized as "1500m"
                    - 1.5Gi will be serialized as "1536Mi"

                    Note that the quantity will NEVER be internally represented by a
                    floating point number. That is the whole point of this exercise.

                    Non-canonical values will still parse as long as they are well formed,
                    but will be re-emitted in their canonical form. (So always use canonical
                    form, or don't diff.)

                    This format is intended to make it difficult to use these numbers without
                    writing some sort of special handling code in the hopes that that will
                    cause implementors to also use a fixed point implementation.

                    +protobuf=true
                    +protobuf.embed=string
                    +protobuf.options.marshal=false
                    +protobuf.options.(gogoproto.goproto_stringer)=false
                    +k8s:deepcopy-gen=true
                    +k8s:openapi-gen=true
              title: |-
                ResourceFieldSelector represents container resources (cpu, memory) and their output format
                +structType=atomic
            configMapKeyRef:
              type:
                - object
                - "null"
              properties:
                localObjectReference:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      title: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                        +optional
                  title: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                    +structType=atomic
                key:
                  type:
                    - string
                    - "null"
                  description: The key to select.
                optional:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Specify whether the ConfigMap or its key must be defined
                    +optional
              title: |-
                Selects a key from a ConfigMap.
                +structType=atomic
            secretKeyRef:
              type:
                - object
                - "null"
              properties:
                localObjectReference:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      title: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?
                        +optional
                  title: |-
                    LocalObjectReference contains enough information to let you locate the
                    referenced object inside the same namespace.
                    +structType=atomic
                key:
                  type:
                    - string
                    - "null"
                  description: The key of the secret to select from.  Must be a valid secret key.
                optional:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Specify whether the Secret or its key must be defined
                    +optional
              title: |-
                SecretKeySelector selects a key of a Secret.
                +structType=atomic
          description: EnvVarSource represents a source for the value of an EnvVar.
      description: EnvVar represents an environment variable present in a Container.
    title: |-
      List of environment variables to set in the container.
      Cannot be updated.
      +optional
      +patchMergeKey=name
      +patchStrategy=merge
  resources:
    type:
      - object
      - "null"
    properties:
      limits:
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - object
            - "null"
          properties:
            string:
              type:
                - string
                - "null"
          description: |-
            Quantity is a fixed-point representation of a number.
            It provides convenient marshaling/unmarshaling in JSON and YAML,
            in addition to String() and AsInt64() accessors.

            The serialization format is:

            ```
            <quantity>        ::= <signedNumber><suffix>

            	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

            <digit>           ::= 0 | 1 | ... | 9
            <digits>          ::= <digit> | <digit><digits>
            <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
            <sign>            ::= "+" | "-"
            <signedNumber>    ::= <number> | <sign><number>
            <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
            <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

            	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

            <decimalSI>       ::= m | "" | k | M | G | T | P | E

            	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
            ```

            No matter which of the three exponent forms is used, no quantity may represent
            a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
            places. Numbers larger or more precise will be capped or rounded up.
            (E.g.: 0.1m will rounded up to 1m.)
            This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix
            it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form".
            This means that Exponent/suffix will be adjusted up or down (with a
            corresponding increase or decrease in Mantissa) such that:

            - No precision is lost
            - No fractional digits will be emitted
            - The exponent (or suffix) is as large as possible.

            The sign will be omitted unless the number is negative.

            Examples:

            - 1.5 will be serialized as "1500m"
            - 1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a
            floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed,
            but will be re-emitted in their canonical form. (So always use canonical
            form, or don't diff.)

            This format is intended to make it difficult to use these numbers without
            writing some sort of special handling code in the hopes that that will
            cause implementors to also use a fixed point implementation.

            +protobuf=true
            +protobuf.embed=string
            +protobuf.options.marshal=false
            +protobuf.options.(gogoproto.goproto_stringer)=false
            +k8s:deepcopy-gen=true
            +k8s:openapi-gen=true
        title: |-
          Limits describes the maximum amount of compute resources allowed.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      requests:
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - object
            - "null"
          properties:
            string:
              type:
                - string
                - "null"
          description: |-
            Quantity is a fixed-point representation of a number.
            It provides convenient marshaling/unmarshaling in JSON and YAML,
            in addition to String() and AsInt64() accessors.

            The serialization format is:

            ```
            <quantity>        ::= <signedNumber><suffix>

            	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

            <digit>           ::= 0 | 1 | ... | 9
            <digits>          ::= <digit> | <digit><digits>
            <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
            <sign>            ::= "+" | "-"
            <signedNumber>    ::= <number> | <sign><number>
            <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
            <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

            	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

            <decimalSI>       ::= m | "" | k | M | G | T | P | E

            	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
            ```

            No matter which of the three exponent forms is used, no quantity may represent
            a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
            places. Numbers larger or more precise will be capped or rounded up.
            (E.g.: 0.1m will rounded up to 1m.)
            This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix
            it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form".
            This means that Exponent/suffix will be adjusted up or down (with a
            corresponding increase or decrease in Mantissa) such that:

            - No precision is lost
            - No fractional digits will be emitted
            - The exponent (or suffix) is as large as possible.

            The sign will be omitted unless the number is negative.

            Examples:

            - 1.5 will be serialized as "1500m"
            - 1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a
            floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed,
            but will be re-emitted in their canonical form. (So always use canonical
            form, or don't diff.)

            This format is intended to make it difficult to use these numbers without
            writing some sort of special handling code in the hopes that that will
            cause implementors to also use a fixed point implementation.

            +protobuf=true
            +protobuf.embed=string
            +protobuf.options.marshal=false
            +protobuf.options.(gogoproto.goproto_stringer)=false
            +k8s:deepcopy-gen=true
            +k8s:openapi-gen=true
        title: |-
          Requests describes the minimum amount of compute resources required.
          If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
          otherwise to an implementation-defined value. Requests cannot exceed Limits.
          More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
          +optional
      claims:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              description: |-
                Name must match the name of one entry in pod.spec.resourceClaims of
                the Pod where this field is used. It makes that resource available
                inside a container.
          description: ResourceClaim references one entry in PodSpec.ResourceClaims.
        description: |-
          Claims lists the names of resources, defined in spec.resourceClaims,
          that are used by this container.

          This is an alpha field and requires enabling the
          DynamicResourceAllocation feature gate.

          This field is immutable. It can only be set for containers.

          +listType=map
          +listMapKey=name
          +featureGate=DynamicResourceAllocation
          +optional
    description: ResourceRequirements describes the compute resource requirements.
  resizePolicy:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        resourceName:
          type:
            - string
            - "null"
          description: |-
            Name of the resource to which this resource resize policy applies.
            Supported values: cpu, memory.
        restartPolicy:
          type:
            - string
            - "null"
          description: |-
            Restart policy to apply when specified resource is resized.
            If not specified, it defaults to NotRequired.
      description: ContainerResizePolicy represents resource resize policy for the container.
    title: |-
      Resources resize policy for the container.
      +featureGate=InPlacePodVerticalScaling
      +optional
      +listType=atomic
  restartPolicy:
    type:
      - string
      - "null"
    title: |-
      RestartPolicy defines the restart behavior of individual containers in a pod.
      This field may only be set for init containers, and the only allowed value is "Always".
      For non-init containers or when this field is not specified,
      the restart behavior is defined by the Pod's restart policy and the container type.
      Setting the RestartPolicy as "Always" for the init container will have the following effect:
      this init container will be continually restarted on
      exit until all regular containers have terminated. Once all regular
      containers have completed, all init containers with restartPolicy "Always"
      will be shut down. This lifecycle differs from normal init containers and
      is often referred to as a "sidecar" container. Although this init
      container still starts in the init container sequence, it does not wait
      for the container to complete before proceeding to the next init
      container. Instead, the next init container starts immediately after this
      init container is started, or after any startupProbe has successfully
      completed.
      +featureGate=SidecarContainers
      +optional
  volumeMounts:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        name:
          type:
            - string
            - "null"
          description: This must match the Name of a Volume.
        readOnly:
          type:
            - boolean
            - "null"
          title: |-
            Mounted read-only if true, read-write otherwise (false or unspecified).
            Defaults to false.
            +optional
        mountPath:
          type:
            - string
            - "null"
          description: |-
            Path within the container at which the volume should be mounted.  Must
            not contain ':'.
        subPath:
          type:
            - string
            - "null"
          title: |-
            Path within the volume from which the container's volume should be mounted.
            Defaults to "" (volume's root).
            +optional
        mountPropagation:
          type:
            - string
            - "null"
          title: |-
            mountPropagation determines how mounts are propagated from the host
            to container and the other way around.
            When not set, MountPropagationNone is used.
            This field is beta in 1.10.
            +optional
        subPathExpr:
          type:
            - string
            - "null"
          title: |-
            Expanded path within the volume from which the container's volume should be mounted.
            Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
            Defaults to "" (volume's root).
            SubPathExpr and SubPath are mutually exclusive.
            +optional
      description: VolumeMount describes a mounting of a Volume within a container.
    title: |-
      Pod volumes to mount into the container's filesystem.
      Cannot be updated.
      +optional
      +patchMergeKey=mountPath
      +patchStrategy=merge
  volumeDevices:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        name:
          type:
            - string
            - "null"
          title: name must match the name of a persistentVolumeClaim in the pod
        devicePath:
          type:
            - string
            - "null"
          description: devicePath is the path inside of the container that the device will be mapped to.
      description: volumeDevice describes a mapping of a raw block device within a container.
    title: |-
      volumeDevices is the list of block devices to be used by the container.
      +patchMergeKey=devicePath
      +patchStrategy=merge
      +optional
  livenessProbe:
    type:
      - object
      - "null"
    properties:
      handler:
        type:
          - object
          - "null"
        properties:
          exec:
            type:
              - object
              - "null"
            properties:
              command:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - string
                    - "null"
                title: |-
                  Command is the command line to execute inside the container, the working directory for the
                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                  a shell, you need to explicitly call out to that shell.
                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                  +optional
            description: ExecAction describes a "run in container" action.
          httpGet:
            type:
              - object
              - "null"
            properties:
              path:
                type:
                  - string
                  - "null"
                title: |-
                  Path to access on the HTTP server.
                  +optional
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Host name to connect to, defaults to the pod IP. You probably want to set
                  "Host" in httpHeaders instead.
                  +optional
              scheme:
                type:
                  - string
                  - "null"
                title: |-
                  Scheme to use for connecting to the host.
                  Defaults to HTTP.
                  +optional
              httpHeaders:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      description: |-
                        The header field name.
                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                    value:
                      type:
                        - string
                        - "null"
                      title: The header field value
                  title: HTTPHeader describes a custom header to be used in HTTP probes
                title: |-
                  Custom headers to set in the request. HTTP allows repeated headers.
                  +optional
            description: HTTPGetAction describes an action based on HTTP Get requests.
          tcpSocket:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Optional: Host name to connect to, defaults to the pod IP.
                  +optional
            title: TCPSocketAction describes an action based on opening a socket
          grpc:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - integer
                  - "null"
                format: int32
                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
              service:
                type:
                  - string
                  - "null"
                description: |-
                  Service is the name of the service to place in the gRPC HealthCheckRequest
                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                  If this is not specified, the default behavior is defined by gRPC.
                  +optional
                  +default=""
        description: |-
          ProbeHandler defines a specific action that should be taken in a probe.
          One and only one of the fields must be specified.
      initialDelaySeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Number of seconds after the container has started before liveness probes are initiated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      timeoutSeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      periodSeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
      successThreshold:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Minimum consecutive successes for the probe to be considered successful after having failed.
          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
          +optional
      failureThreshold:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Minimum consecutive failures for the probe to be considered failed after having succeeded.
          Defaults to 3. Minimum value is 1.
          +optional
      terminationGracePeriodSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
          +optional
    description: |-
      Probe describes a health check to be performed against a container to determine whether it is
      alive or ready to receive traffic.
  readinessProbe:
    type:
      - object
      - "null"
    properties:
      handler:
        type:
          - object
          - "null"
        properties:
          exec:
            type:
              - object
              - "null"
            properties:
              command:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - string
                    - "null"
                title: |-
                  Command is the command line to execute inside the container, the working directory for the
                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                  a shell, you need to explicitly call out to that shell.
                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                  +optional
            description: ExecAction describes a "run in container" action.
          httpGet:
            type:
              - object
              - "null"
            properties:
              path:
                type:
                  - string
                  - "null"
                title: |-
                  Path to access on the HTTP server.
                  +optional
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Host name to connect to, defaults to the pod IP. You probably want to set
                  "Host" in httpHeaders instead.
                  +optional
              scheme:
                type:
                  - string
                  - "null"
                title: |-
                  Scheme to use for connecting to the host.
                  Defaults to HTTP.
                  +optional
              httpHeaders:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      description: |-
                        The header field name.
                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                    value:
                      type:
                        - string
                        - "null"
                      title: The header field value
                  title: HTTPHeader describes a custom header to be used in HTTP probes
                title: |-
                  Custom headers to set in the request. HTTP allows repeated headers.
                  +optional
            description: HTTPGetAction describes an action based on HTTP Get requests.
          tcpSocket:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Optional: Host name to connect to, defaults to the pod IP.
                  +optional
            title: TCPSocketAction describes an action based on opening a socket
          grpc:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - integer
                  - "null"
                format: int32
                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
              service:
                type:
                  - string
                  - "null"
                description: |-
                  Service is the name of the service to place in the gRPC HealthCheckRequest
                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                  If this is not specified, the default behavior is defined by gRPC.
                  +optional
                  +default=""
        description: |-
          ProbeHandler defines a specific action that should be taken in a probe.
          One and only one of the fields must be specified.
      initialDelaySeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Number of seconds after the container has started before liveness probes are initiated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      timeoutSeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      periodSeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
      successThreshold:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Minimum consecutive successes for the probe to be considered successful after having failed.
          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
          +optional
      failureThreshold:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Minimum consecutive failures for the probe to be considered failed after having succeeded.
          Defaults to 3. Minimum value is 1.
          +optional
      terminationGracePeriodSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
          +optional
    description: |-
      Probe describes a health check to be performed against a container to determine whether it is
      alive or ready to receive traffic.
  startupProbe:
    type:
      - object
      - "null"
    properties:
      handler:
        type:
          - object
          - "null"
        properties:
          exec:
            type:
              - object
              - "null"
            properties:
              command:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - string
                    - "null"
                title: |-
                  Command is the command line to execute inside the container, the working directory for the
                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                  a shell, you need to explicitly call out to that shell.
                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                  +optional
            description: ExecAction describes a "run in container" action.
          httpGet:
            type:
              - object
              - "null"
            properties:
              path:
                type:
                  - string
                  - "null"
                title: |-
                  Path to access on the HTTP server.
                  +optional
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Host name to connect to, defaults to the pod IP. You probably want to set
                  "Host" in httpHeaders instead.
                  +optional
              scheme:
                type:
                  - string
                  - "null"
                title: |-
                  Scheme to use for connecting to the host.
                  Defaults to HTTP.
                  +optional
              httpHeaders:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      description: |-
                        The header field name.
                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                    value:
                      type:
                        - string
                        - "null"
                      title: The header field value
                  title: HTTPHeader describes a custom header to be used in HTTP probes
                title: |-
                  Custom headers to set in the request. HTTP allows repeated headers.
                  +optional
            description: HTTPGetAction describes an action based on HTTP Get requests.
          tcpSocket:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Optional: Host name to connect to, defaults to the pod IP.
                  +optional
            title: TCPSocketAction describes an action based on opening a socket
          grpc:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - integer
                  - "null"
                format: int32
                description: Port number of the gRPC service. Number must be in the range 1 to 65535.
              service:
                type:
                  - string
                  - "null"
                description: |-
                  Service is the name of the service to place in the gRPC HealthCheckRequest
                  (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                  If this is not specified, the default behavior is defined by gRPC.
                  +optional
                  +default=""
        description: |-
          ProbeHandler defines a specific action that should be taken in a probe.
          One and only one of the fields must be specified.
      initialDelaySeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Number of seconds after the container has started before liveness probes are initiated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      timeoutSeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Number of seconds after which the probe times out.
          Defaults to 1 second. Minimum value is 1.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
          +optional
      periodSeconds:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          How often (in seconds) to perform the probe.
          Default to 10 seconds. Minimum value is 1.
          +optional
      successThreshold:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Minimum consecutive successes for the probe to be considered successful after having failed.
          Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
          +optional
      failureThreshold:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          Minimum consecutive failures for the probe to be considered failed after having succeeded.
          Defaults to 3. Minimum value is 1.
          +optional
      terminationGracePeriodSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
          value overrides the value provided by the pod spec.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
          Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
          +optional
    description: |-
      Probe describes a health check to be performed against a container to determine whether it is
      alive or ready to receive traffic.
  lifecycle:
    type:
      - object
      - "null"
    properties:
      postStart:
        type:
          - object
          - "null"
        properties:
          exec:
            type:
              - object
              - "null"
            properties:
              command:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - string
                    - "null"
                title: |-
                  Command is the command line to execute inside the container, the working directory for the
                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                  a shell, you need to explicitly call out to that shell.
                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                  +optional
            description: ExecAction describes a "run in container" action.
          httpGet:
            type:
              - object
              - "null"
            properties:
              path:
                type:
                  - string
                  - "null"
                title: |-
                  Path to access on the HTTP server.
                  +optional
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Host name to connect to, defaults to the pod IP. You probably want to set
                  "Host" in httpHeaders instead.
                  +optional
              scheme:
                type:
                  - string
                  - "null"
                title: |-
                  Scheme to use for connecting to the host.
                  Defaults to HTTP.
                  +optional
              httpHeaders:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      description: |-
                        The header field name.
                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                    value:
                      type:
                        - string
                        - "null"
                      title: The header field value
                  title: HTTPHeader describes a custom header to be used in HTTP probes
                title: |-
                  Custom headers to set in the request. HTTP allows repeated headers.
                  +optional
            description: HTTPGetAction describes an action based on HTTP Get requests.
          tcpSocket:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Optional: Host name to connect to, defaults to the pod IP.
                  +optional
            title: TCPSocketAction describes an action based on opening a socket
          sleep:
            type:
              - object
              - "null"
            properties:
              seconds:
                type:
                  - string
                  - "null"
                format: int64
                description: Seconds is the number of seconds to sleep.
            description: SleepAction describes a "sleep" action.
        description: |-
          LifecycleHandler defines a specific action that should be taken in a lifecycle
          hook. One and only one of the fields, except TCPSocket must be specified.
      preStop:
        type:
          - object
          - "null"
        properties:
          exec:
            type:
              - object
              - "null"
            properties:
              command:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - string
                    - "null"
                title: |-
                  Command is the command line to execute inside the container, the working directory for the
                  command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                  not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                  a shell, you need to explicitly call out to that shell.
                  Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                  +optional
            description: ExecAction describes a "run in container" action.
          httpGet:
            type:
              - object
              - "null"
            properties:
              path:
                type:
                  - string
                  - "null"
                title: |-
                  Path to access on the HTTP server.
                  +optional
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Host name to connect to, defaults to the pod IP. You probably want to set
                  "Host" in httpHeaders instead.
                  +optional
              scheme:
                type:
                  - string
                  - "null"
                title: |-
                  Scheme to use for connecting to the host.
                  Defaults to HTTP.
                  +optional
              httpHeaders:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    name:
                      type:
                        - string
                        - "null"
                      description: |-
                        The header field name.
                        This will be canonicalized upon output, so case-variant names will be understood as the same header.
                    value:
                      type:
                        - string
                        - "null"
                      title: The header field value
                  title: HTTPHeader describes a custom header to be used in HTTP probes
                title: |-
                  Custom headers to set in the request. HTTP allows repeated headers.
                  +optional
            description: HTTPGetAction describes an action based on HTTP Get requests.
          tcpSocket:
            type:
              - object
              - "null"
            properties:
              port:
                type:
                  - object
                  - "null"
                properties:
                  type:
                    type:
                      - string
                      - "null"
                    format: int64
                  intVal:
                    type:
                      - integer
                      - "null"
                    format: int32
                  strVal:
                    type:
                      - string
                      - "null"
                description: |-
                  +protobuf=true
                  +protobuf.options.(gogoproto.goproto_stringer)=false
                  +k8s:openapi-gen=true
                title: |-
                  IntOrString is a type that can hold an int32 or a string.  When used in
                  JSON or YAML marshalling and unmarshalling, it produces or consumes the
                  inner type.  This allows you to have, for example, a JSON field that can
                  accept a name or number.
                  TODO: Rename to Int32OrString
              host:
                type:
                  - string
                  - "null"
                title: |-
                  Optional: Host name to connect to, defaults to the pod IP.
                  +optional
            title: TCPSocketAction describes an action based on opening a socket
          sleep:
            type:
              - object
              - "null"
            properties:
              seconds:
                type:
                  - string
                  - "null"
                format: int64
                description: Seconds is the number of seconds to sleep.
            description: SleepAction describes a "sleep" action.
        description: |-
          LifecycleHandler defines a specific action that should be taken in a lifecycle
          hook. One and only one of the fields, except TCPSocket must be specified.
    description: |-
      Lifecycle describes actions that the management system should take in response to container lifecycle
      events. For the PostStart and PreStop lifecycle handlers, management of the container blocks
      until the action is complete, unless the container process fails, in which case the handler is aborted.
  terminationMessagePath:
    type:
      - string
      - "null"
    title: |-
      Optional: Path at which the file to which the container's termination message
      will be written is mounted into the container's filesystem.
      Message written is intended to be brief final status, such as an assertion failure message.
      Will be truncated by the node if greater than 4096 bytes. The total message length across
      all containers will be limited to 12kb.
      Defaults to /dev/termination-log.
      Cannot be updated.
      +optional
  terminationMessagePolicy:
    type:
      - string
      - "null"
    title: |-
      Indicate how the termination message should be populated. File will use the contents of
      terminationMessagePath to populate the container status message on both success and failure.
      FallbackToLogsOnError will use the last chunk of container log output if the termination
      message file is empty and the container exited with an error.
      The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
      Defaults to File.
      Cannot be updated.
      +optional
  imagePullPolicy:
    type:
      - string
      - "null"
    title: |-
      Image pull policy.
      One of Always, Never, IfNotPresent.
      Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
      Cannot be updated.
      More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
      +optional
  securityContext:
    type:
      - object
      - "null"
    properties:
      capabilities:
        type:
          - object
          - "null"
        properties:
          add:
            type:
              - array
              - "null"
            items:
              type:
                - string
                - "null"
            title: |-
              Added capabilities
              +optional
          drop:
            type:
              - array
              - "null"
            items:
              type:
                - string
                - "null"
            title: |-
              Removed capabilities
              +optional
        description: Adds and removes POSIX capabilities from running containers.
      privileged:
        type:
          - boolean
          - "null"
        title: |-
          Run container in privileged mode.
          Processes in privileged containers are essentially equivalent to root on the host.
          Defaults to false.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      seLinuxOptions:
        type:
          - object
          - "null"
        properties:
          user:
            type:
              - string
              - "null"
            title: |-
              User is a SELinux user label that applies to the container.
              +optional
          role:
            type:
              - string
              - "null"
            title: |-
              Role is a SELinux role label that applies to the container.
              +optional
          type:
            type:
              - string
              - "null"
            title: |-
              Type is a SELinux type label that applies to the container.
              +optional
          level:
            type:
              - string
              - "null"
            title: |-
              Level is SELinux level label that applies to the container.
              +optional
        title: SELinuxOptions are the labels to be applied to the container
      windowsOptions:
        type:
          - object
          - "null"
        properties:
          gmsaCredentialSpecName:
            type:
              - string
              - "null"
            title: |-
              GMSACredentialSpecName is the name of the GMSA credential spec to use.
              +optional
          gmsaCredentialSpec:
            type:
              - string
              - "null"
            title: |-
              GMSACredentialSpec is where the GMSA admission webhook
              (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
              GMSA credential spec named by the GMSACredentialSpecName field.
              +optional
          runAsUserName:
            type:
              - string
              - "null"
            title: |-
              The UserName in Windows to run the entrypoint of the container process.
              Defaults to the user specified in image metadata if unspecified.
              May also be set in PodSecurityContext. If set in both SecurityContext and
              PodSecurityContext, the value specified in SecurityContext takes precedence.
              +optional
          hostProcess:
            type:
              - boolean
              - "null"
            title: |-
              HostProcess determines if a container should be run as a 'Host Process' container.
              All of a Pod's containers must have the same effective HostProcess value
              (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
              In addition, if HostProcess is true then HostNetwork must also be set to true.
              +optional
        description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
      runAsUser:
        type:
          - string
          - "null"
        format: int64
        title: |-
          The UID to run the entrypoint of the container process.
          Defaults to user specified in image metadata if unspecified.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      runAsGroup:
        type:
          - string
          - "null"
        format: int64
        title: |-
          The GID to run the entrypoint of the container process.
          Uses runtime default if unset.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      runAsNonRoot:
        type:
          - boolean
          - "null"
        title: |-
          Indicates that the container must run as a non-root user.
          If true, the Kubelet will validate the image at runtime to ensure that it
          does not run as UID 0 (root) and fail to start the container if it does.
          If unset or false, no such validation will be performed.
          May also be set in PodSecurityContext.  If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
      readOnlyRootFilesystem:
        type:
          - boolean
          - "null"
        title: |-
          Whether this container has a read-only root filesystem.
          Default is false.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      allowPrivilegeEscalation:
        type:
          - boolean
          - "null"
        title: |-
          AllowPrivilegeEscalation controls whether a process can gain more
          privileges than its parent process. This bool directly controls if
          the no_new_privs flag will be set on the container process.
          AllowPrivilegeEscalation is true always when the container is:
          1) run as Privileged
          2) has CAP_SYS_ADMIN
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      procMount:
        type:
          - string
          - "null"
        title: |-
          procMount denotes the type of proc mount to use for the containers.
          The default is DefaultProcMount which uses the container runtime defaults for
          readonly paths and masked paths.
          This requires the ProcMountType feature flag to be enabled.
          Note that this field cannot be set when spec.os.name is windows.
          +optional
      seccompProfile:
        type:
          - object
          - "null"
        properties:
          type:
            type:
              - string
              - "null"
            description: |-
              Localhost - a profile defined in a file on the node should be used.
              RuntimeDefault - the container runtime default profile should be used.
              Unconfined - no profile should be applied.
              +unionDiscriminator
            title: |-
              type indicates which kind of seccomp profile will be applied.
              Valid options are:
          localhostProfile:
            type:
              - string
              - "null"
            title: |-
              localhostProfile indicates a profile defined in a file on the node should be used.
              The profile must be preconfigured on the node to work.
              Must be a descending path, relative to the kubelet's configured seccomp profile location.
              Must be set if type is "Localhost". Must NOT be set for any other type.
              +optional
        title: |-
          SeccompProfile defines a pod/container's seccomp profile settings.
          Only one profile source may be set.
          +union
    description: |-
      SecurityContext holds security configuration that will be applied to a container.
      Some fields are present in both SecurityContext and PodSecurityContext.  When both
      are set, the values in SecurityContext take precedence.
  stdin:
    type:
      - boolean
      - "null"
    title: |-
      Whether this container should allocate a buffer for stdin in the container runtime. If this
      is not set, reads from stdin in the container will always result in EOF.
      Default is false.
      +optional
  stdinOnce:
    type:
      - boolean
      - "null"
    title: |-
      Whether the container runtime should close the stdin channel after it has been opened by
      a single attach. When stdin is true the stdin stream will remain open across multiple attach
      sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
      first client attaches to stdin, and then remains open and accepts data until the client disconnects,
      at which time stdin is closed and remains closed until the container is restarted. If this
      flag is false, a container processes that reads from stdin will never receive an EOF.
      Default is false
      +optional
  tty:
    type:
      - boolean
      - "null"
    title: |-
      Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
      Default is false.
      +optional
description: A single application container that you want to run within a pod.
$schema: http://json-schema.org/schema#
