type: object
properties:
  seLinuxOptions:
    type:
      - object
      - "null"
    properties:
      user:
        type:
          - string
          - "null"
        title: |-
          User is a SELinux user label that applies to the container.
          +optional
      role:
        type:
          - string
          - "null"
        title: |-
          Role is a SELinux role label that applies to the container.
          +optional
      type:
        type:
          - string
          - "null"
        title: |-
          Type is a SELinux type label that applies to the container.
          +optional
      level:
        type:
          - string
          - "null"
        title: |-
          Level is SELinux level label that applies to the container.
          +optional
    title: SELinuxOptions are the labels to be applied to the container
  windowsOptions:
    type:
      - object
      - "null"
    properties:
      gmsaCredentialSpecName:
        type:
          - string
          - "null"
        title: |-
          GMSACredentialSpecName is the name of the GMSA credential spec to use.
          +optional
      gmsaCredentialSpec:
        type:
          - string
          - "null"
        title: |-
          GMSACredentialSpec is where the GMSA admission webhook
          (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
          GMSA credential spec named by the GMSACredentialSpecName field.
          +optional
      runAsUserName:
        type:
          - string
          - "null"
        title: |-
          The UserName in Windows to run the entrypoint of the container process.
          Defaults to the user specified in image metadata if unspecified.
          May also be set in PodSecurityContext. If set in both SecurityContext and
          PodSecurityContext, the value specified in SecurityContext takes precedence.
          +optional
      hostProcess:
        type:
          - boolean
          - "null"
        title: |-
          HostProcess determines if a container should be run as a 'Host Process' container.
          All of a Pod's containers must have the same effective HostProcess value
          (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
          In addition, if HostProcess is true then HostNetwork must also be set to true.
          +optional
    description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
  runAsUser:
    type:
      - string
      - "null"
    format: int64
    title: |-
      The UID to run the entrypoint of the container process.
      Defaults to user specified in image metadata if unspecified.
      May also be set in SecurityContext.  If set in both SecurityContext and
      PodSecurityContext, the value specified in SecurityContext takes precedence
      for that container.
      Note that this field cannot be set when spec.os.name is windows.
      +optional
  runAsGroup:
    type:
      - string
      - "null"
    format: int64
    title: |-
      The GID to run the entrypoint of the container process.
      Uses runtime default if unset.
      May also be set in SecurityContext.  If set in both SecurityContext and
      PodSecurityContext, the value specified in SecurityContext takes precedence
      for that container.
      Note that this field cannot be set when spec.os.name is windows.
      +optional
  runAsNonRoot:
    type:
      - boolean
      - "null"
    title: |-
      Indicates that the container must run as a non-root user.
      If true, the Kubelet will validate the image at runtime to ensure that it
      does not run as UID 0 (root) and fail to start the container if it does.
      If unset or false, no such validation will be performed.
      May also be set in SecurityContext.  If set in both SecurityContext and
      PodSecurityContext, the value specified in SecurityContext takes precedence.
      +optional
  supplementalGroups:
    type:
      - array
      - "null"
    items:
      type:
        - string
        - "null"
      format: int64
    title: |-
      A list of groups applied to the first process run in each container, in addition
      to the container's primary GID, the fsGroup (if specified), and group memberships
      defined in the container image for the uid of the container process. If unspecified,
      no additional groups are added to any container. Note that group memberships
      defined in the container image for the uid of the container process are still effective,
      even if they are not included in this list.
      Note that this field cannot be set when spec.os.name is windows.
      +optional
  fsGroup:
    type:
      - string
      - "null"
    format: int64
    description: |-
      1. The owning GID will be the FSGroup
      2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
      3. The permission bits are OR'd with rw-rw----

      If unset, the Kubelet will not modify the ownership and permissions of any volume.
      Note that this field cannot be set when spec.os.name is windows.
      +optional
    title: |-
      A special supplemental group that applies to all containers in a pod.
      Some volume types allow the Kubelet to change the ownership of that volume
      to be owned by the pod:
  sysctls:
    type:
      - array
      - "null"
    items:
      type:
        - object
        - "null"
      properties:
        name:
          type:
            - string
            - "null"
          title: Name of a property to set
        value:
          type:
            - string
            - "null"
          title: Value of a property to set
      title: Sysctl defines a kernel parameter to be set
    title: |-
      Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
      sysctls (by the container runtime) might fail to launch.
      Note that this field cannot be set when spec.os.name is windows.
      +optional
  fsGroupChangePolicy:
    type:
      - string
      - "null"
    title: |-
      fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
      before being exposed inside Pod. This field will only apply to
      volume types which support fsGroup based ownership(and permissions).
      It will have no effect on ephemeral volume types such as: secret, configmaps
      and emptydir.
      Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
      Note that this field cannot be set when spec.os.name is windows.
      +optional
  seccompProfile:
    type:
      - object
      - "null"
    properties:
      type:
        type:
          - string
          - "null"
        description: |-
          Localhost - a profile defined in a file on the node should be used.
          RuntimeDefault - the container runtime default profile should be used.
          Unconfined - no profile should be applied.
          +unionDiscriminator
        title: |-
          type indicates which kind of seccomp profile will be applied.
          Valid options are:
      localhostProfile:
        type:
          - string
          - "null"
        title: |-
          localhostProfile indicates a profile defined in a file on the node should be used.
          The profile must be preconfigured on the node to work.
          Must be a descending path, relative to the kubelet's configured seccomp profile location.
          Must be set if type is "Localhost". Must NOT be set for any other type.
          +optional
    title: |-
      SeccompProfile defines a pod/container's seccomp profile settings.
      Only one profile source may be set.
      +union
description: |-
  PodSecurityContext holds pod-level security attributes and common container settings.
  Some fields are also present in container.securityContext.  Field values of
  container.securityContext take precedence over field values of PodSecurityContext.
$schema: http://json-schema.org/schema#
