type: object
properties:
  metadata:
    type:
      - object
      - "null"
    properties:
      name:
        type:
          - string
          - "null"
        title: |-
          Name must be unique within a namespace. Is required when creating resources, although
          some resources may allow a client to request the generation of an appropriate name
          automatically. Name is primarily intended for creation idempotence and configuration
          definition.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
          +optional
      generateName:
        type:
          - string
          - "null"
        description: |-
          GenerateName is an optional prefix, used by the server, to generate a unique
          name ONLY IF the Name field has not been provided.
          If this field is used, the name returned to the client will be different
          than the name passed. This value will also be combined with a unique suffix.
          The provided value has the same validation rules as the Name field,
          and may be truncated by the length of the suffix required to make the value
          unique on the server.

          If this field is specified and the generated name exists, the server will return a 409.

          Applied only if Name is not specified.
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
          +optional
      namespace:
        type:
          - string
          - "null"
        description: |-
          Namespace defines the space within which each name must be unique. An empty namespace is
          equivalent to the "default" namespace, but "default" is the canonical representation.
          Not all objects are required to be scoped to a namespace - the value of this field for
          those objects will be empty.

          Must be a DNS_LABEL.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
          +optional
      selfLink:
        type:
          - string
          - "null"
        title: |-
          Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
          +optional
      uid:
        type:
          - string
          - "null"
        description: |-
          UID is the unique in time and space value for this object. It is typically generated by
          the server on successful creation of a resource and is not allowed to change on PUT
          operations.

          Populated by the system.
          Read-only.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
          +optional
      resourceVersion:
        type:
          - string
          - "null"
        description: |-
          An opaque value that represents the internal version of this object that can
          be used by clients to determine when objects have changed. May be used for optimistic
          concurrency, change detection, and the watch operation on a resource or set of resources.
          Clients must treat these values as opaque and passed unmodified back to the server.
          They may only be valid for a particular resource or set of resources.

          Populated by the system.
          Read-only.
          Value must be treated as opaque by clients and .
          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
          +optional
      generation:
        type:
          - string
          - "null"
        format: int64
        title: |-
          A sequence number representing a specific generation of the desired state.
          Populated by the system. Read-only.
          +optional
      creationTimestamp:
        type:
          - object
          - "null"
        properties:
          seconds:
            type:
              - string
              - "null"
            format: int64
            description: |-
              Represents seconds of UTC time since Unix epoch
              1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
              9999-12-31T23:59:59Z inclusive.
          nanos:
            type:
              - integer
              - "null"
            format: int32
            description: |-
              Non-negative fractions of a second at nanosecond resolution. Negative
              second values with fractions must still have non-negative nanos values
              that count forward in time. Must be from 0 to 999,999,999
              inclusive. This field may be limited in precision depending on context.
        description: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.

          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
      deletionTimestamp:
        type:
          - object
          - "null"
        properties:
          seconds:
            type:
              - string
              - "null"
            format: int64
            description: |-
              Represents seconds of UTC time since Unix epoch
              1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
              9999-12-31T23:59:59Z inclusive.
          nanos:
            type:
              - integer
              - "null"
            format: int32
            description: |-
              Non-negative fractions of a second at nanosecond resolution. Negative
              second values with fractions must still have non-negative nanos values
              that count forward in time. Must be from 0 to 999,999,999
              inclusive. This field may be limited in precision depending on context.
        description: |-
          Time is a wrapper around time.Time which supports correct
          marshaling to YAML and JSON.  Wrappers are provided for many
          of the factory methods that the time package offers.

          +protobuf.options.marshal=false
          +protobuf.as=Timestamp
          +protobuf.options.(gogoproto.goproto_stringer)=false
      deletionGracePeriodSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          Number of seconds allowed for this object to gracefully terminate before
          it will be removed from the system. Only set when deletionTimestamp is also set.
          May only be shortened.
          Read-only.
          +optional
      labels:
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - string
            - "null"
        title: |-
          Map of string keys and values that can be used to organize and categorize
          (scope and select) objects. May match selectors of replication controllers
          and services.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
          +optional
      annotations:
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - string
            - "null"
        title: |-
          Annotations is an unstructured key value map stored with a resource that may be
          set by external tools to store and retrieve arbitrary metadata. They are not
          queryable and should be preserved when modifying objects.
          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
          +optional
      ownerReferences:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            apiVersion:
              type:
                - string
                - "null"
              description: API version of the referent.
            kind:
              type:
                - string
                - "null"
              title: |-
                Kind of the referent.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            name:
              type:
                - string
                - "null"
              title: |-
                Name of the referent.
                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
            uid:
              type:
                - string
                - "null"
              title: |-
                UID of the referent.
                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
            controller:
              type:
                - boolean
                - "null"
              title: |-
                If true, this reference points to the managing controller.
                +optional
            blockOwnerDeletion:
              type:
                - boolean
                - "null"
              title: |-
                If true, AND if the owner has the "foregroundDeletion" finalizer, then
                the owner cannot be deleted from the key-value store until this
                reference is removed.
                See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                for how the garbage collector interacts with this field and enforces the foreground deletion.
                Defaults to false.
                To set this field, a user needs "delete" permission of the owner,
                otherwise 422 (Unprocessable Entity) will be returned.
                +optional
          title: |-
            OwnerReference contains enough information to let you identify an owning
            object. An owning object must be in the same namespace as the dependent, or
            be cluster-scoped, so there is no namespace field.
            +structType=atomic
        title: |-
          List of objects depended by this object. If ALL objects in the list have
          been deleted, this object will be garbage collected. If this object is managed by a controller,
          then an entry in this list will point to this controller, with the controller field set to true.
          There cannot be more than one managing controller.
          +optional
          +patchMergeKey=uid
          +patchStrategy=merge
      finalizers:
        type:
          - array
          - "null"
        items:
          type:
            - string
            - "null"
        title: |-
          Must be empty before the object is deleted from the registry. Each entry
          is an identifier for the responsible component that will remove the entry
          from the list. If the deletionTimestamp of the object is non-nil, entries
          in this list can only be removed.
          Finalizers may be processed and removed in any order.  Order is NOT enforced
          because it introduces significant risk of stuck finalizers.
          finalizers is a shared field, any actor with permission can reorder it.
          If the finalizer list is processed in order, then this can lead to a situation
          in which the component responsible for the first finalizer in the list is
          waiting for a signal (field value, external system, or other) produced by a
          component responsible for a finalizer later in the list, resulting in a deadlock.
          Without enforced ordering finalizers are free to order amongst themselves and
          are not vulnerable to ordering changes in the list.
          +optional
          +patchStrategy=merge
      managedFields:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            manager:
              type:
                - string
                - "null"
              description: Manager is an identifier of the workflow managing these fields.
            operation:
              type:
                - string
                - "null"
              description: |-
                Operation is the type of operation which lead to this ManagedFieldsEntry being created.
                The only valid values for this field are 'Apply' and 'Update'.
            apiVersion:
              type:
                - string
                - "null"
              description: |-
                APIVersion defines the version of this resource that this field set
                applies to. The format is "group/version" just like the top-level
                APIVersion field. It is necessary to track the version of a field
                set because it cannot be automatically converted.
            time:
              type:
                - object
                - "null"
              properties:
                seconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  description: |-
                    Represents seconds of UTC time since Unix epoch
                    1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                    9999-12-31T23:59:59Z inclusive.
                nanos:
                  type:
                    - integer
                    - "null"
                  format: int32
                  description: |-
                    Non-negative fractions of a second at nanosecond resolution. Negative
                    second values with fractions must still have non-negative nanos values
                    that count forward in time. Must be from 0 to 999,999,999
                    inclusive. This field may be limited in precision depending on context.
              description: |-
                Time is a wrapper around time.Time which supports correct
                marshaling to YAML and JSON.  Wrappers are provided for many
                of the factory methods that the time package offers.

                +protobuf.options.marshal=false
                +protobuf.as=Timestamp
                +protobuf.options.(gogoproto.goproto_stringer)=false
            fieldsType:
              type:
                - string
                - "null"
              title: |-
                FieldsType is the discriminator for the different fields format and version.
                There is currently only one possible value: "FieldsV1"
            fieldsV1:
              type:
                - object
                - "null"
              properties:
                Raw:
                  type:
                    - string
                    - "null"
                  format: byte
                  description: Raw is the underlying serialization of this object.
              description: |-
                FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

                Each key is either a '.' representing the field itself, and will always map to an empty set,
                or a string representing a sub-field or item. The string will follow one of these four formats:
                'f:<name>', where <name> is the name of a field in a struct, or key in a map
                'v:<value>', where <value> is the exact json formatted value of a list item
                'i:<index>', where <index> is position of a item in a list
                'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
                If a key maps to an empty Fields value, the field that key represents is part of the set.

                The exact format is defined in sigs.k8s.io/structured-merge-diff
                +protobuf.options.(gogoproto.goproto_stringer)=false
            subresource:
              type:
                - string
                - "null"
              description: |-
                Subresource is the name of the subresource used to update that object, or
                empty string if the object was updated through the main resource. The
                value of this field is used to distinguish between managers, even if they
                share the same name. For example, a status update will be distinct from a
                regular update using the same manager name.
                Note that the APIVersion field is not related to the Subresource field and
                it always corresponds to the version of the main resource.
          description: |-
            ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
            that the fieldset applies to.
        description: |-
          ManagedFields maps workflow-id and version to the set of fields
          that are managed by that workflow. This is mostly for internal
          housekeeping, and users typically shouldn't need to set or
          understand this field. A workflow can be the user's name, a
          controller's name, or the name of a specific apply path like
          "ci-cd". The set of fields is always in the version that the
          workflow used when modifying the object.

          +optional
    description: |-
      ObjectMeta is metadata that all persisted resources must have, which includes all objects
      users must create.
  spec:
    type:
      - object
      - "null"
    properties:
      volumes:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              title: |-
                name of the volume.
                Must be a DNS_LABEL and unique within the pod.
                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
            volumeSource:
              type:
                - object
                - "null"
              properties:
                hostPath:
                  type:
                    - object
                    - "null"
                  properties:
                    path:
                      type:
                        - string
                        - "null"
                      title: |-
                        path of the directory on the host.
                        If the path is a symlink, it will follow the link to the real path.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                    type:
                      type:
                        - string
                        - "null"
                      title: |-
                        type for HostPath Volume
                        Defaults to ""
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
                        +optional
                  description: |-
                    Represents a host path mapped into a pod.
                    Host path volumes do not support ownership management or SELinux relabeling.
                emptyDir:
                  type:
                    - object
                    - "null"
                  properties:
                    medium:
                      type:
                        - string
                        - "null"
                      title: |-
                        medium represents what type of storage medium should back this directory.
                        The default is "" which means to use the node's default medium.
                        Must be an empty string (default) or Memory.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
                        +optional
                    sizeLimit:
                      type:
                        - object
                        - "null"
                      properties:
                        string:
                          type:
                            - string
                            - "null"
                      description: |-
                        Quantity is a fixed-point representation of a number.
                        It provides convenient marshaling/unmarshaling in JSON and YAML,
                        in addition to String() and AsInt64() accessors.

                        The serialization format is:

                        ```
                        <quantity>        ::= <signedNumber><suffix>

                        	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                        <digit>           ::= 0 | 1 | ... | 9
                        <digits>          ::= <digit> | <digit><digits>
                        <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                        <sign>            ::= "+" | "-"
                        <signedNumber>    ::= <number> | <sign><number>
                        <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                        <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                        	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                        <decimalSI>       ::= m | "" | k | M | G | T | P | E

                        	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                        <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                        ```

                        No matter which of the three exponent forms is used, no quantity may represent
                        a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                        places. Numbers larger or more precise will be capped or rounded up.
                        (E.g.: 0.1m will rounded up to 1m.)
                        This may be extended in the future if we require larger or smaller quantities.

                        When a Quantity is parsed from a string, it will remember the type of suffix
                        it had, and will use the same type again when it is serialized.

                        Before serializing, Quantity will be put in "canonical form".
                        This means that Exponent/suffix will be adjusted up or down (with a
                        corresponding increase or decrease in Mantissa) such that:

                        - No precision is lost
                        - No fractional digits will be emitted
                        - The exponent (or suffix) is as large as possible.

                        The sign will be omitted unless the number is negative.

                        Examples:

                        - 1.5 will be serialized as "1500m"
                        - 1.5Gi will be serialized as "1536Mi"

                        Note that the quantity will NEVER be internally represented by a
                        floating point number. That is the whole point of this exercise.

                        Non-canonical values will still parse as long as they are well formed,
                        but will be re-emitted in their canonical form. (So always use canonical
                        form, or don't diff.)

                        This format is intended to make it difficult to use these numbers without
                        writing some sort of special handling code in the hopes that that will
                        cause implementors to also use a fixed point implementation.

                        +protobuf=true
                        +protobuf.embed=string
                        +protobuf.options.marshal=false
                        +protobuf.options.(gogoproto.goproto_stringer)=false
                        +k8s:deepcopy-gen=true
                        +k8s:openapi-gen=true
                  description: |-
                    Represents an empty directory for a pod.
                    Empty directory volumes support ownership management and SELinux relabeling.
                gcePersistentDisk:
                  type:
                    - object
                    - "null"
                  properties:
                    pdName:
                      type:
                        - string
                        - "null"
                      title: |-
                        pdName is unique name of the PD resource in GCE. Used to identify the disk in GCE.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is filesystem type of the volume that you want to mount.
                        Tip: Ensure that the filesystem type is supported by the host operating system.
                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                        TODO: how do we prevent errors in the filesystem from compromising the machine
                        +optional
                    partition:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        partition is the partition in the volume that you want to mount.
                        If omitted, the default is to mount by volume name.
                        Examples: For volume /dev/sda1, you specify the partition as "1".
                        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly here will force the ReadOnly setting in VolumeMounts.
                        Defaults to false.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
                        +optional
                  description: |-
                    Represents a Persistent Disk resource in Google Compute Engine.

                    A GCE PD must exist before mounting to a container. The disk must
                    also be in the same GCE project and zone as the kubelet. A GCE PD
                    can only be mounted as read/write once or read-only many times. GCE
                    PDs support ownership management and SELinux relabeling.
                awsElasticBlockStore:
                  type:
                    - object
                    - "null"
                  properties:
                    volumeID:
                      type:
                        - string
                        - "null"
                      title: |-
                        volumeID is unique ID of the persistent disk resource in AWS (Amazon EBS volume).
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type of the volume that you want to mount.
                        Tip: Ensure that the filesystem type is supported by the host operating system.
                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                        TODO: how do we prevent errors in the filesystem from compromising the machine
                        +optional
                    partition:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        partition is the partition in the volume that you want to mount.
                        If omitted, the default is to mount by volume name.
                        Examples: For volume /dev/sda1, you specify the partition as "1".
                        Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly value true will force the readOnly setting in VolumeMounts.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
                        +optional
                  description: |-
                    Represents a Persistent Disk resource in AWS.

                    An AWS EBS disk must exist before mounting to a container. The disk
                    must also be in the same AWS zone as the kubelet. An AWS EBS disk
                    can only be mounted as read/write once. AWS EBS volumes support
                    ownership management and SELinux relabeling.
                gitRepo:
                  type:
                    - object
                    - "null"
                  properties:
                    repository:
                      type:
                        - string
                        - "null"
                      title: repository is the URL
                    revision:
                      type:
                        - string
                        - "null"
                      title: |-
                        revision is the commit hash for the specified revision.
                        +optional
                    directory:
                      type:
                        - string
                        - "null"
                      title: |-
                        directory is the target directory name.
                        Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the
                        git repository.  Otherwise, if specified, the volume will contain the git repository in
                        the subdirectory with the given name.
                        +optional
                  description: |-
                    Represents a volume that is populated with the contents of a git repository.
                    Git repo volumes do not support ownership management.
                    Git repo volumes support SELinux relabeling.

                    DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an
                    EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir
                    into the Pod's container.
                secret:
                  type:
                    - object
                    - "null"
                  properties:
                    secretName:
                      type:
                        - string
                        - "null"
                      title: |-
                        secretName is the name of the secret in the pod's namespace to use.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
                        +optional
                    items:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - object
                          - "null"
                        properties:
                          key:
                            type:
                              - string
                              - "null"
                            description: key is the key to project.
                          path:
                            type:
                              - string
                              - "null"
                            description: |-
                              path is the relative path of the file to map the key to.
                              May not be an absolute path.
                              May not contain the path element '..'.
                              May not start with the string '..'.
                          mode:
                            type:
                              - integer
                              - "null"
                            format: int32
                            title: |-
                              mode is Optional: mode bits used to set permissions on this file.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              If not specified, the volume defaultMode will be used.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                              +optional
                        description: Maps a string key to a path within a volume.
                      title: |-
                        items If unspecified, each key-value pair in the Data field of the referenced
                        Secret will be projected into the volume as a file whose name is the
                        key and content is the value. If specified, the listed keys will be
                        projected into the specified paths, and unlisted keys will not be
                        present. If a key is specified which is not present in the Secret,
                        the volume setup will error unless it is marked optional. Paths must be
                        relative and may not contain the '..' path or start with '..'.
                        +optional
                    defaultMode:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        defaultMode is Optional: mode bits used to set permissions on created files by default.
                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                        YAML accepts both octal and decimal values, JSON requires decimal values
                        for mode bits. Defaults to 0644.
                        Directories within the path are not affected by this setting.
                        This might be in conflict with other options that affect the file
                        mode, like fsGroup, and the result can be other mode bits set.
                        +optional
                    optional:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        optional field specify whether the Secret or its keys must be defined
                        +optional
                  description: |-
                    Adapts a Secret into a volume.

                    The contents of the target Secret's Data field will be presented in a volume
                    as files using the keys in the Data field as the file names.
                    Secret volumes support ownership management and SELinux relabeling.
                nfs:
                  type:
                    - object
                    - "null"
                  properties:
                    server:
                      type:
                        - string
                        - "null"
                      title: |-
                        server is the hostname or IP address of the NFS server.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                    path:
                      type:
                        - string
                        - "null"
                      title: |-
                        path that is exported by the NFS server.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly here will force the NFS export to be mounted with read-only permissions.
                        Defaults to false.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
                        +optional
                  description: |-
                    Represents an NFS mount that lasts the lifetime of a pod.
                    NFS volumes do not support ownership management or SELinux relabeling.
                iscsi:
                  type:
                    - object
                    - "null"
                  properties:
                    targetPortal:
                      type:
                        - string
                        - "null"
                      description: |-
                        targetPortal is iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port
                        is other than default (typically TCP ports 860 and 3260).
                    iqn:
                      type:
                        - string
                        - "null"
                      description: iqn is the target iSCSI Qualified Name.
                    lun:
                      type:
                        - integer
                        - "null"
                      format: int32
                      description: lun represents iSCSI Target Lun number.
                    iscsiInterface:
                      type:
                        - string
                        - "null"
                      title: |-
                        iscsiInterface is the interface Name that uses an iSCSI transport.
                        Defaults to 'default' (tcp).
                        +optional
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type of the volume that you want to mount.
                        Tip: Ensure that the filesystem type is supported by the host operating system.
                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi
                        TODO: how do we prevent errors in the filesystem from compromising the machine
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly here will force the ReadOnly setting in VolumeMounts.
                        Defaults to false.
                        +optional
                    portals:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        portals is the iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port
                        is other than default (typically TCP ports 860 and 3260).
                        +optional
                    chapAuthDiscovery:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        chapAuthDiscovery defines whether support iSCSI Discovery CHAP authentication
                        +optional
                    chapAuthSession:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        chapAuthSession defines whether support iSCSI Session CHAP authentication
                        +optional
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                    initiatorName:
                      type:
                        - string
                        - "null"
                      title: |-
                        initiatorName is the custom iSCSI Initiator Name.
                        If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface
                        <target portal>:<volume name> will be created for the connection.
                        +optional
                  description: |-
                    Represents an ISCSI disk.
                    ISCSI volumes can only be mounted as read/write once.
                    ISCSI volumes support ownership management and SELinux relabeling.
                glusterfs:
                  type:
                    - object
                    - "null"
                  properties:
                    endpoints:
                      type:
                        - string
                        - "null"
                      title: |-
                        endpoints is the endpoint name that details Glusterfs topology.
                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                    path:
                      type:
                        - string
                        - "null"
                      title: |-
                        path is the Glusterfs volume path.
                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly here will force the Glusterfs volume to be mounted with read-only permissions.
                        Defaults to false.
                        More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
                        +optional
                  description: |-
                    Represents a Glusterfs mount that lasts the lifetime of a pod.
                    Glusterfs volumes do not support ownership management or SELinux relabeling.
                persistentVolumeClaim:
                  type:
                    - object
                    - "null"
                  properties:
                    claimName:
                      type:
                        - string
                        - "null"
                      title: |-
                        claimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume.
                        More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly Will force the ReadOnly setting in VolumeMounts.
                        Default false.
                        +optional
                  description: |-
                    PersistentVolumeClaimVolumeSource references the user's PVC in the same namespace.
                    This volume finds the bound PV and mounts that volume for the pod. A
                    PersistentVolumeClaimVolumeSource is, essentially, a wrapper around another
                    type of volume that is owned by someone else (the system).
                rbd:
                  type:
                    - object
                    - "null"
                  properties:
                    monitors:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        monitors is a collection of Ceph monitors.
                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                    image:
                      type:
                        - string
                        - "null"
                      title: |-
                        image is the rados image name.
                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type of the volume that you want to mount.
                        Tip: Ensure that the filesystem type is supported by the host operating system.
                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd
                        TODO: how do we prevent errors in the filesystem from compromising the machine
                        +optional
                    pool:
                      type:
                        - string
                        - "null"
                      title: |-
                        pool is the rados pool name.
                        Default is rbd.
                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                        +optional
                    user:
                      type:
                        - string
                        - "null"
                      title: |-
                        user is the rados user name.
                        Default is admin.
                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                        +optional
                    keyring:
                      type:
                        - string
                        - "null"
                      title: |-
                        keyring is the path to key ring for RBDUser.
                        Default is /etc/ceph/keyring.
                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                        +optional
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly here will force the ReadOnly setting in VolumeMounts.
                        Defaults to false.
                        More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
                        +optional
                  description: |-
                    Represents a Rados Block Device mount that lasts the lifetime of a pod.
                    RBD volumes support ownership management and SELinux relabeling.
                flexVolume:
                  type:
                    - object
                    - "null"
                  properties:
                    driver:
                      type:
                        - string
                        - "null"
                      description: driver is the name of the driver to use for this volume.
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
                        +optional
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly is Optional: defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                    options:
                      type:
                        - object
                        - "null"
                      additionalProperties:
                        type:
                          - string
                          - "null"
                      title: |-
                        options is Optional: this field holds extra command options if any.
                        +optional
                  description: |-
                    FlexVolume represents a generic volume resource that is
                    provisioned/attached using an exec based plugin.
                cinder:
                  type:
                    - object
                    - "null"
                  properties:
                    volumeID:
                      type:
                        - string
                        - "null"
                      title: |-
                        volumeID used to identify the volume in cinder.
                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        More info: https://examples.k8s.io/mysql-cinder-pd/README.md
                        +optional
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                  description: |-
                    Represents a cinder volume resource in Openstack.
                    A Cinder volume must exist before mounting to a container.
                    The volume must also be in the same region as the kubelet.
                    Cinder volumes support ownership management and SELinux relabeling.
                cephfs:
                  type:
                    - object
                    - "null"
                  properties:
                    monitors:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        monitors is Required: Monitors is a collection of Ceph monitors
                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                    path:
                      type:
                        - string
                        - "null"
                      title: |-
                        path is Optional: Used as the mounted root, rather than the full Ceph tree, default is /
                        +optional
                    user:
                      type:
                        - string
                        - "null"
                      title: |-
                        user is optional: User is the rados user name, default is admin
                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                        +optional
                    secretFile:
                      type:
                        - string
                        - "null"
                      title: |-
                        secretFile is Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret
                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                        +optional
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
                        +optional
                  description: |-
                    Represents a Ceph Filesystem mount that lasts the lifetime of a pod
                    Cephfs volumes do not support ownership management or SELinux relabeling.
                flocker:
                  type:
                    - object
                    - "null"
                  properties:
                    datasetName:
                      type:
                        - string
                        - "null"
                      title: |-
                        datasetName is Name of the dataset stored as metadata -> name on the dataset for Flocker
                        should be considered as deprecated
                        +optional
                    datasetUUID:
                      type:
                        - string
                        - "null"
                      title: |-
                        datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
                        +optional
                  description: |-
                    Represents a Flocker volume mounted by the Flocker agent.
                    One and only one of datasetName and datasetUUID should be set.
                    Flocker volumes do not support ownership management or SELinux relabeling.
                downwardAPI:
                  type:
                    - object
                    - "null"
                  properties:
                    items:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - object
                          - "null"
                        properties:
                          path:
                            type:
                              - string
                              - "null"
                            title: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                          fieldRef:
                            type:
                              - object
                              - "null"
                            properties:
                              apiVersion:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  +optional
                              fieldPath:
                                type:
                                  - string
                                  - "null"
                                description: Path of the field to select in the specified API version.
                            title: |-
                              ObjectFieldSelector selects an APIVersioned field of an object.
                              +structType=atomic
                          resourceFieldRef:
                            type:
                              - object
                              - "null"
                            properties:
                              containerName:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Container name: required for volumes, optional for env vars
                                  +optional
                              resource:
                                type:
                                  - string
                                  - "null"
                                title: 'Required: resource to select'
                              divisor:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  string:
                                    type:
                                      - string
                                      - "null"
                                description: |-
                                  Quantity is a fixed-point representation of a number.
                                  It provides convenient marshaling/unmarshaling in JSON and YAML,
                                  in addition to String() and AsInt64() accessors.

                                  The serialization format is:

                                  ```
                                  <quantity>        ::= <signedNumber><suffix>

                                  	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                                  <digit>           ::= 0 | 1 | ... | 9
                                  <digits>          ::= <digit> | <digit><digits>
                                  <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                                  <sign>            ::= "+" | "-"
                                  <signedNumber>    ::= <number> | <sign><number>
                                  <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                                  <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                                  	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                                  <decimalSI>       ::= m | "" | k | M | G | T | P | E

                                  	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                                  <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                                  ```

                                  No matter which of the three exponent forms is used, no quantity may represent
                                  a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                                  places. Numbers larger or more precise will be capped or rounded up.
                                  (E.g.: 0.1m will rounded up to 1m.)
                                  This may be extended in the future if we require larger or smaller quantities.

                                  When a Quantity is parsed from a string, it will remember the type of suffix
                                  it had, and will use the same type again when it is serialized.

                                  Before serializing, Quantity will be put in "canonical form".
                                  This means that Exponent/suffix will be adjusted up or down (with a
                                  corresponding increase or decrease in Mantissa) such that:

                                  - No precision is lost
                                  - No fractional digits will be emitted
                                  - The exponent (or suffix) is as large as possible.

                                  The sign will be omitted unless the number is negative.

                                  Examples:

                                  - 1.5 will be serialized as "1500m"
                                  - 1.5Gi will be serialized as "1536Mi"

                                  Note that the quantity will NEVER be internally represented by a
                                  floating point number. That is the whole point of this exercise.

                                  Non-canonical values will still parse as long as they are well formed,
                                  but will be re-emitted in their canonical form. (So always use canonical
                                  form, or don't diff.)

                                  This format is intended to make it difficult to use these numbers without
                                  writing some sort of special handling code in the hopes that that will
                                  cause implementors to also use a fixed point implementation.

                                  +protobuf=true
                                  +protobuf.embed=string
                                  +protobuf.options.marshal=false
                                  +protobuf.options.(gogoproto.goproto_stringer)=false
                                  +k8s:deepcopy-gen=true
                                  +k8s:openapi-gen=true
                            title: |-
                              ResourceFieldSelector represents container resources (cpu, memory) and their output format
                              +structType=atomic
                          mode:
                            type:
                              - integer
                              - "null"
                            format: int32
                            title: |-
                              Optional: mode bits used to set permissions on this file, must be an octal value
                              between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              If not specified, the volume defaultMode will be used.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                              +optional
                        title: DownwardAPIVolumeFile represents information to create the file containing the pod field
                      title: |-
                        Items is a list of downward API volume file
                        +optional
                    defaultMode:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Optional: mode bits to use on created files by default. Must be a
                        Optional: mode bits used to set permissions on created files by default.
                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                        Defaults to 0644.
                        Directories within the path are not affected by this setting.
                        This might be in conflict with other options that affect the file
                        mode, like fsGroup, and the result can be other mode bits set.
                        +optional
                  description: |-
                    DownwardAPIVolumeSource represents a volume containing downward API info.
                    Downward API volumes support ownership management and SELinux relabeling.
                fc:
                  type:
                    - object
                    - "null"
                  properties:
                    targetWWNs:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        targetWWNs is Optional: FC target worldwide names (WWNs)
                        +optional
                    lun:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        lun is Optional: FC target lun number
                        +optional
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        TODO: how do we prevent errors in the filesystem from compromising the machine
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly is Optional: Defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                    wwids:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        wwids Optional: FC volume world wide identifiers (wwids)
                        Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
                        +optional
                  description: |-
                    Represents a Fibre Channel volume.
                    Fibre Channel volumes can only be mounted as read/write once.
                    Fibre Channel volumes support ownership management and SELinux relabeling.
                azureFile:
                  type:
                    - object
                    - "null"
                  properties:
                    secretName:
                      type:
                        - string
                        - "null"
                      title: secretName is the  name of secret that contains Azure Storage Account Name and Key
                    shareName:
                      type:
                        - string
                        - "null"
                      title: shareName is the azure share Name
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                  description: AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
                configMap:
                  type:
                    - object
                    - "null"
                  properties:
                    localObjectReference:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                    items:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - object
                          - "null"
                        properties:
                          key:
                            type:
                              - string
                              - "null"
                            description: key is the key to project.
                          path:
                            type:
                              - string
                              - "null"
                            description: |-
                              path is the relative path of the file to map the key to.
                              May not be an absolute path.
                              May not contain the path element '..'.
                              May not start with the string '..'.
                          mode:
                            type:
                              - integer
                              - "null"
                            format: int32
                            title: |-
                              mode is Optional: mode bits used to set permissions on this file.
                              Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                              YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                              If not specified, the volume defaultMode will be used.
                              This might be in conflict with other options that affect the file
                              mode, like fsGroup, and the result can be other mode bits set.
                              +optional
                        description: Maps a string key to a path within a volume.
                      title: |-
                        items if unspecified, each key-value pair in the Data field of the referenced
                        ConfigMap will be projected into the volume as a file whose name is the
                        key and content is the value. If specified, the listed keys will be
                        projected into the specified paths, and unlisted keys will not be
                        present. If a key is specified which is not present in the ConfigMap,
                        the volume setup will error unless it is marked optional. Paths must be
                        relative and may not contain the '..' path or start with '..'.
                        +optional
                    defaultMode:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        defaultMode is optional: mode bits used to set permissions on created files by default.
                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                        Defaults to 0644.
                        Directories within the path are not affected by this setting.
                        This might be in conflict with other options that affect the file
                        mode, like fsGroup, and the result can be other mode bits set.
                        +optional
                    optional:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        optional specify whether the ConfigMap or its keys must be defined
                        +optional
                  description: |-
                    Adapts a ConfigMap into a volume.

                    The contents of the target ConfigMap's Data field will be presented in a
                    volume as files using the keys in the Data field as the file names, unless
                    the items element is populated with specific mappings of keys to paths.
                    ConfigMap volumes support ownership management and SELinux relabeling.
                vsphereVolume:
                  type:
                    - object
                    - "null"
                  properties:
                    volumePath:
                      type:
                        - string
                        - "null"
                      title: volumePath is the path that identifies vSphere volume vmdk
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        +optional
                    storagePolicyName:
                      type:
                        - string
                        - "null"
                      title: |-
                        storagePolicyName is the storage Policy Based Management (SPBM) profile name.
                        +optional
                    storagePolicyID:
                      type:
                        - string
                        - "null"
                      title: |-
                        storagePolicyID is the storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
                        +optional
                  description: Represents a vSphere volume resource.
                quobyte:
                  type:
                    - object
                    - "null"
                  properties:
                    registry:
                      type:
                        - string
                        - "null"
                      title: |-
                        registry represents a single or multiple Quobyte Registry services
                        specified as a string as host:port pair (multiple entries are separated with commas)
                        which acts as the central registry for volumes
                    volume:
                      type:
                        - string
                        - "null"
                      description: volume is a string that references an already created Quobyte volume by name.
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly here will force the Quobyte volume to be mounted with read-only permissions.
                        Defaults to false.
                        +optional
                    user:
                      type:
                        - string
                        - "null"
                      title: |-
                        user to map volume access to
                        Defaults to serivceaccount user
                        +optional
                    group:
                      type:
                        - string
                        - "null"
                      title: |-
                        group to map volume access to
                        Default is no group
                        +optional
                    tenant:
                      type:
                        - string
                        - "null"
                      title: |-
                        tenant owning the given Quobyte volume in the Backend
                        Used with dynamically provisioned Quobyte volumes, value is set by the plugin
                        +optional
                  description: |-
                    Represents a Quobyte mount that lasts the lifetime of a pod.
                    Quobyte volumes do not support ownership management or SELinux relabeling.
                azureDisk:
                  type:
                    - object
                    - "null"
                  properties:
                    diskName:
                      type:
                        - string
                        - "null"
                      title: diskName is the Name of the data disk in the blob storage
                    diskURI:
                      type:
                        - string
                        - "null"
                      title: diskURI is the URI of data disk in the blob storage
                    cachingMode:
                      type:
                        - string
                        - "null"
                      title: |-
                        cachingMode is the Host Caching mode: None, Read Only, Read Write.
                        +optional
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is Filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly Defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                    kind:
                      type:
                        - string
                        - "null"
                      title: 'kind expected values are Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared'
                  description: AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
                photonPersistentDisk:
                  type:
                    - object
                    - "null"
                  properties:
                    pdID:
                      type:
                        - string
                        - "null"
                      title: pdID is the ID that identifies Photon Controller persistent disk
                    fsType:
                      type:
                        - string
                        - "null"
                      description: |-
                        fsType is the filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                  description: Represents a Photon Controller persistent disk resource.
                projected:
                  type:
                    - object
                    - "null"
                  properties:
                    sources:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - object
                          - "null"
                        properties:
                          secret:
                            type:
                              - object
                              - "null"
                            properties:
                              localObjectReference:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                      +optional
                                title: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                  +structType=atomic
                              items:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - object
                                    - "null"
                                  properties:
                                    key:
                                      type:
                                        - string
                                        - "null"
                                      description: key is the key to project.
                                    path:
                                      type:
                                        - string
                                        - "null"
                                      description: |-
                                        path is the relative path of the file to map the key to.
                                        May not be an absolute path.
                                        May not contain the path element '..'.
                                        May not start with the string '..'.
                                    mode:
                                      type:
                                        - integer
                                        - "null"
                                      format: int32
                                      title: |-
                                        mode is Optional: mode bits used to set permissions on this file.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        If not specified, the volume defaultMode will be used.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                        +optional
                                  description: Maps a string key to a path within a volume.
                                title: |-
                                  items if unspecified, each key-value pair in the Data field of the referenced
                                  Secret will be projected into the volume as a file whose name is the
                                  key and content is the value. If specified, the listed keys will be
                                  projected into the specified paths, and unlisted keys will not be
                                  present. If a key is specified which is not present in the Secret,
                                  the volume setup will error unless it is marked optional. Paths must be
                                  relative and may not contain the '..' path or start with '..'.
                                  +optional
                              optional:
                                type:
                                  - boolean
                                  - "null"
                                title: |-
                                  optional field specify whether the Secret or its key must be defined
                                  +optional
                            description: |-
                              Adapts a secret into a projected volume.

                              The contents of the target Secret's Data field will be presented in a
                              projected volume as files using the keys in the Data field as the file names.
                              Note that this is identical to a secret volume source without the default
                              mode.
                          downwardAPI:
                            type:
                              - object
                              - "null"
                            properties:
                              items:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - object
                                    - "null"
                                  properties:
                                    path:
                                      type:
                                        - string
                                        - "null"
                                      title: 'Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the ''..'' path. Must be utf-8 encoded. The first item of the relative path must not start with ''..'''
                                    fieldRef:
                                      type:
                                        - object
                                        - "null"
                                      properties:
                                        apiVersion:
                                          type:
                                            - string
                                            - "null"
                                          title: |-
                                            Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                            +optional
                                        fieldPath:
                                          type:
                                            - string
                                            - "null"
                                          description: Path of the field to select in the specified API version.
                                      title: |-
                                        ObjectFieldSelector selects an APIVersioned field of an object.
                                        +structType=atomic
                                    resourceFieldRef:
                                      type:
                                        - object
                                        - "null"
                                      properties:
                                        containerName:
                                          type:
                                            - string
                                            - "null"
                                          title: |-
                                            Container name: required for volumes, optional for env vars
                                            +optional
                                        resource:
                                          type:
                                            - string
                                            - "null"
                                          title: 'Required: resource to select'
                                        divisor:
                                          type:
                                            - object
                                            - "null"
                                          properties:
                                            string:
                                              type:
                                                - string
                                                - "null"
                                          description: |-
                                            Quantity is a fixed-point representation of a number.
                                            It provides convenient marshaling/unmarshaling in JSON and YAML,
                                            in addition to String() and AsInt64() accessors.

                                            The serialization format is:

                                            ```
                                            <quantity>        ::= <signedNumber><suffix>

                                            	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                                            <digit>           ::= 0 | 1 | ... | 9
                                            <digits>          ::= <digit> | <digit><digits>
                                            <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                                            <sign>            ::= "+" | "-"
                                            <signedNumber>    ::= <number> | <sign><number>
                                            <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                                            <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                                            	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                                            <decimalSI>       ::= m | "" | k | M | G | T | P | E

                                            	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                                            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                                            ```

                                            No matter which of the three exponent forms is used, no quantity may represent
                                            a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                                            places. Numbers larger or more precise will be capped or rounded up.
                                            (E.g.: 0.1m will rounded up to 1m.)
                                            This may be extended in the future if we require larger or smaller quantities.

                                            When a Quantity is parsed from a string, it will remember the type of suffix
                                            it had, and will use the same type again when it is serialized.

                                            Before serializing, Quantity will be put in "canonical form".
                                            This means that Exponent/suffix will be adjusted up or down (with a
                                            corresponding increase or decrease in Mantissa) such that:

                                            - No precision is lost
                                            - No fractional digits will be emitted
                                            - The exponent (or suffix) is as large as possible.

                                            The sign will be omitted unless the number is negative.

                                            Examples:

                                            - 1.5 will be serialized as "1500m"
                                            - 1.5Gi will be serialized as "1536Mi"

                                            Note that the quantity will NEVER be internally represented by a
                                            floating point number. That is the whole point of this exercise.

                                            Non-canonical values will still parse as long as they are well formed,
                                            but will be re-emitted in their canonical form. (So always use canonical
                                            form, or don't diff.)

                                            This format is intended to make it difficult to use these numbers without
                                            writing some sort of special handling code in the hopes that that will
                                            cause implementors to also use a fixed point implementation.

                                            +protobuf=true
                                            +protobuf.embed=string
                                            +protobuf.options.marshal=false
                                            +protobuf.options.(gogoproto.goproto_stringer)=false
                                            +k8s:deepcopy-gen=true
                                            +k8s:openapi-gen=true
                                      title: |-
                                        ResourceFieldSelector represents container resources (cpu, memory) and their output format
                                        +structType=atomic
                                    mode:
                                      type:
                                        - integer
                                        - "null"
                                      format: int32
                                      title: |-
                                        Optional: mode bits used to set permissions on this file, must be an octal value
                                        between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        If not specified, the volume defaultMode will be used.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                        +optional
                                  title: DownwardAPIVolumeFile represents information to create the file containing the pod field
                                title: |-
                                  Items is a list of DownwardAPIVolume file
                                  +optional
                            description: |-
                              Represents downward API info for projecting into a projected volume.
                              Note that this is identical to a downwardAPI volume source without the default
                              mode.
                          configMap:
                            type:
                              - object
                              - "null"
                            properties:
                              localObjectReference:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                      +optional
                                title: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                  +structType=atomic
                              items:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - object
                                    - "null"
                                  properties:
                                    key:
                                      type:
                                        - string
                                        - "null"
                                      description: key is the key to project.
                                    path:
                                      type:
                                        - string
                                        - "null"
                                      description: |-
                                        path is the relative path of the file to map the key to.
                                        May not be an absolute path.
                                        May not contain the path element '..'.
                                        May not start with the string '..'.
                                    mode:
                                      type:
                                        - integer
                                        - "null"
                                      format: int32
                                      title: |-
                                        mode is Optional: mode bits used to set permissions on this file.
                                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                                        If not specified, the volume defaultMode will be used.
                                        This might be in conflict with other options that affect the file
                                        mode, like fsGroup, and the result can be other mode bits set.
                                        +optional
                                  description: Maps a string key to a path within a volume.
                                title: |-
                                  items if unspecified, each key-value pair in the Data field of the referenced
                                  ConfigMap will be projected into the volume as a file whose name is the
                                  key and content is the value. If specified, the listed keys will be
                                  projected into the specified paths, and unlisted keys will not be
                                  present. If a key is specified which is not present in the ConfigMap,
                                  the volume setup will error unless it is marked optional. Paths must be
                                  relative and may not contain the '..' path or start with '..'.
                                  +optional
                              optional:
                                type:
                                  - boolean
                                  - "null"
                                title: |-
                                  optional specify whether the ConfigMap or its keys must be defined
                                  +optional
                            description: |-
                              Adapts a ConfigMap into a projected volume.

                              The contents of the target ConfigMap's Data field will be presented in a
                              projected volume as files using the keys in the Data field as the file names,
                              unless the items element is populated with specific mappings of keys to paths.
                              Note that this is identical to a configmap volume source without the default
                              mode.
                          serviceAccountToken:
                            type:
                              - object
                              - "null"
                            properties:
                              audience:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  audience is the intended audience of the token. A recipient of a token
                                  must identify itself with an identifier specified in the audience of the
                                  token, and otherwise should reject the token. The audience defaults to the
                                  identifier of the apiserver.
                                  +optional
                              expirationSeconds:
                                type:
                                  - string
                                  - "null"
                                format: int64
                                title: |-
                                  expirationSeconds is the requested duration of validity of the service
                                  account token. As the token approaches expiration, the kubelet volume
                                  plugin will proactively rotate the service account token. The kubelet will
                                  start trying to rotate the token if the token is older than 80 percent of
                                  its time to live or if the token is older than 24 hours.Defaults to 1 hour
                                  and must be at least 10 minutes.
                                  +optional
                              path:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  path is the path relative to the mount point of the file to project the
                                  token into.
                            description: |-
                              ServiceAccountTokenProjection represents a projected service account token
                              volume. This projection can be used to insert a service account token into
                              the pods runtime filesystem for use against APIs (Kubernetes API Server or
                              otherwise).
                          clusterTrustBundle:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Select a single ClusterTrustBundle by object name.  Mutually-exclusive
                                  with signerName and labelSelector.
                                  +optional
                              signerName:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Select all ClusterTrustBundles that match this signer name.
                                  Mutually-exclusive with name.  The contents of all selected
                                  ClusterTrustBundles will be unified and deduplicated.
                                  +optional
                              labelSelector:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  matchLabels:
                                    type:
                                      - object
                                      - "null"
                                    additionalProperties:
                                      type:
                                        - string
                                        - "null"
                                    title: |-
                                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                                      +optional
                                  matchExpressions:
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      type:
                                        - object
                                        - "null"
                                      properties:
                                        key:
                                          type:
                                            - string
                                            - "null"
                                          description: key is the label key that the selector applies to.
                                        operator:
                                          type:
                                            - string
                                            - "null"
                                          description: |-
                                            operator represents a key's relationship to a set of values.
                                            Valid operators are In, NotIn, Exists and DoesNotExist.
                                        values:
                                          type:
                                            - array
                                            - "null"
                                          items:
                                            type:
                                              - string
                                              - "null"
                                          title: |-
                                            values is an array of string values. If the operator is In or NotIn,
                                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                            the values array must be empty. This array is replaced during a strategic
                                            merge patch.
                                            +optional
                                      description: |-
                                        A label selector requirement is a selector that contains values, a key, and an operator that
                                        relates the key and values.
                                    title: |-
                                      matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                      +optional
                                title: |-
                                  A label selector is a label query over a set of resources. The result of matchLabels and
                                  matchExpressions are ANDed. An empty label selector matches all objects. A null
                                  label selector matches no objects.
                                  +structType=atomic
                              optional:
                                type:
                                  - boolean
                                  - "null"
                                title: |-
                                  If true, don't block pod startup if the referenced ClusterTrustBundle(s)
                                  aren't available.  If using name, then the named ClusterTrustBundle is
                                  allowed not to exist.  If using signerName, then the combination of
                                  signerName and labelSelector is allowed to match zero
                                  ClusterTrustBundles.
                                  +optional
                              path:
                                type:
                                  - string
                                  - "null"
                                description: Relative path from the volume root to write the bundle.
                            description: |-
                              ClusterTrustBundleProjection describes how to select a set of
                              ClusterTrustBundle objects and project their contents into the pod
                              filesystem.
                        title: Projection that may be projected along with other supported volume types
                      title: |-
                        sources is the list of volume projections
                        +optional
                    defaultMode:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        defaultMode are the mode bits used to set permissions on created files by default.
                        Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511.
                        YAML accepts both octal and decimal values, JSON requires decimal values for mode bits.
                        Directories within the path are not affected by this setting.
                        This might be in conflict with other options that affect the file
                        mode, like fsGroup, and the result can be other mode bits set.
                        +optional
                  title: Represents a projected volume source
                portworxVolume:
                  type:
                    - object
                    - "null"
                  properties:
                    volumeID:
                      type:
                        - string
                        - "null"
                      title: volumeID uniquely identifies a Portworx volume
                    fsType:
                      type:
                        - string
                        - "null"
                      description: |-
                        fSType represents the filesystem type to mount
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                  description: PortworxVolumeSource represents a Portworx volume resource.
                scaleIO:
                  type:
                    - object
                    - "null"
                  properties:
                    gateway:
                      type:
                        - string
                        - "null"
                      description: gateway is the host address of the ScaleIO API Gateway.
                    system:
                      type:
                        - string
                        - "null"
                      description: system is the name of the storage system as configured in ScaleIO.
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                    sslEnabled:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        sslEnabled Flag enable/disable SSL communication with Gateway, default false
                        +optional
                    protectionDomain:
                      type:
                        - string
                        - "null"
                      title: |-
                        protectionDomain is the name of the ScaleIO Protection Domain for the configured storage.
                        +optional
                    storagePool:
                      type:
                        - string
                        - "null"
                      title: |-
                        storagePool is the ScaleIO Storage Pool associated with the protection domain.
                        +optional
                    storageMode:
                      type:
                        - string
                        - "null"
                      title: |-
                        storageMode indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned.
                        Default is ThinProvisioned.
                        +optional
                    volumeName:
                      type:
                        - string
                        - "null"
                      description: |-
                        volumeName is the name of a volume already created in the ScaleIO system
                        that is associated with this volume source.
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs".
                        Default is "xfs".
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly Defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                  title: ScaleIOVolumeSource represents a persistent ScaleIO volume
                storageos:
                  type:
                    - object
                    - "null"
                  properties:
                    volumeName:
                      type:
                        - string
                        - "null"
                      description: |-
                        volumeName is the human-readable name of the StorageOS volume.  Volume
                        names are only unique within a namespace.
                    volumeNamespace:
                      type:
                        - string
                        - "null"
                      title: |-
                        volumeNamespace specifies the scope of the volume within StorageOS.  If no
                        namespace is specified then the Pod's namespace will be used.  This allows the
                        Kubernetes name scoping to be mirrored within StorageOS for tighter integration.
                        Set VolumeName to any name to override the default behaviour.
                        Set to "default" if you are not using namespaces within StorageOS.
                        Namespaces that do not pre-exist within StorageOS will be created.
                        +optional
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType is the filesystem type to mount.
                        Must be a filesystem type supported by the host operating system.
                        Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
                        +optional
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly defaults to false (read/write). ReadOnly here will force
                        the ReadOnly setting in VolumeMounts.
                        +optional
                    secretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                  description: Represents a StorageOS persistent volume resource.
                csi:
                  type:
                    - object
                    - "null"
                  properties:
                    driver:
                      type:
                        - string
                        - "null"
                      description: |-
                        driver is the name of the CSI driver that handles this volume.
                        Consult with your admin for the correct name as registered in the cluster.
                    readOnly:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        readOnly specifies a read-only configuration for the volume.
                        Defaults to false (read/write).
                        +optional
                    fsType:
                      type:
                        - string
                        - "null"
                      title: |-
                        fsType to mount. Ex. "ext4", "xfs", "ntfs".
                        If not provided, the empty value is passed to the associated CSI driver
                        which will determine the default filesystem to apply.
                        +optional
                    volumeAttributes:
                      type:
                        - object
                        - "null"
                      additionalProperties:
                        type:
                          - string
                          - "null"
                      title: |-
                        volumeAttributes stores driver-specific properties that are passed to the CSI
                        driver. Consult your driver's documentation for supported values.
                        +optional
                    nodePublishSecretRef:
                      type:
                        - object
                        - "null"
                      properties:
                        name:
                          type:
                            - string
                            - "null"
                          title: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?
                            +optional
                      title: |-
                        LocalObjectReference contains enough information to let you locate the
                        referenced object inside the same namespace.
                        +structType=atomic
                  title: Represents a source location of a volume to mount, managed by an external CSI driver
                ephemeral:
                  type:
                    - object
                    - "null"
                  properties:
                    volumeClaimTemplate:
                      type:
                        - object
                        - "null"
                      properties:
                        metadata:
                          type:
                            - object
                            - "null"
                          properties:
                            name:
                              type:
                                - string
                                - "null"
                              title: |-
                                Name must be unique within a namespace. Is required when creating resources, although
                                some resources may allow a client to request the generation of an appropriate name
                                automatically. Name is primarily intended for creation idempotence and configuration
                                definition.
                                Cannot be updated.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                +optional
                            generateName:
                              type:
                                - string
                                - "null"
                              description: |-
                                GenerateName is an optional prefix, used by the server, to generate a unique
                                name ONLY IF the Name field has not been provided.
                                If this field is used, the name returned to the client will be different
                                than the name passed. This value will also be combined with a unique suffix.
                                The provided value has the same validation rules as the Name field,
                                and may be truncated by the length of the suffix required to make the value
                                unique on the server.

                                If this field is specified and the generated name exists, the server will return a 409.

                                Applied only if Name is not specified.
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
                                +optional
                            namespace:
                              type:
                                - string
                                - "null"
                              description: |-
                                Namespace defines the space within which each name must be unique. An empty namespace is
                                equivalent to the "default" namespace, but "default" is the canonical representation.
                                Not all objects are required to be scoped to a namespace - the value of this field for
                                those objects will be empty.

                                Must be a DNS_LABEL.
                                Cannot be updated.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces
                                +optional
                            selfLink:
                              type:
                                - string
                                - "null"
                              title: |-
                                Deprecated: selfLink is a legacy read-only field that is no longer populated by the system.
                                +optional
                            uid:
                              type:
                                - string
                                - "null"
                              description: |-
                                UID is the unique in time and space value for this object. It is typically generated by
                                the server on successful creation of a resource and is not allowed to change on PUT
                                operations.

                                Populated by the system.
                                Read-only.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                +optional
                            resourceVersion:
                              type:
                                - string
                                - "null"
                              description: |-
                                An opaque value that represents the internal version of this object that can
                                be used by clients to determine when objects have changed. May be used for optimistic
                                concurrency, change detection, and the watch operation on a resource or set of resources.
                                Clients must treat these values as opaque and passed unmodified back to the server.
                                They may only be valid for a particular resource or set of resources.

                                Populated by the system.
                                Read-only.
                                Value must be treated as opaque by clients and .
                                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                +optional
                            generation:
                              type:
                                - string
                                - "null"
                              format: int64
                              title: |-
                                A sequence number representing a specific generation of the desired state.
                                Populated by the system. Read-only.
                                +optional
                            creationTimestamp:
                              type:
                                - object
                                - "null"
                              properties:
                                seconds:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                  description: |-
                                    Represents seconds of UTC time since Unix epoch
                                    1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                                    9999-12-31T23:59:59Z inclusive.
                                nanos:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                  description: |-
                                    Non-negative fractions of a second at nanosecond resolution. Negative
                                    second values with fractions must still have non-negative nanos values
                                    that count forward in time. Must be from 0 to 999,999,999
                                    inclusive. This field may be limited in precision depending on context.
                              description: |-
                                Time is a wrapper around time.Time which supports correct
                                marshaling to YAML and JSON.  Wrappers are provided for many
                                of the factory methods that the time package offers.

                                +protobuf.options.marshal=false
                                +protobuf.as=Timestamp
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                            deletionTimestamp:
                              type:
                                - object
                                - "null"
                              properties:
                                seconds:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                  description: |-
                                    Represents seconds of UTC time since Unix epoch
                                    1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                                    9999-12-31T23:59:59Z inclusive.
                                nanos:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                  description: |-
                                    Non-negative fractions of a second at nanosecond resolution. Negative
                                    second values with fractions must still have non-negative nanos values
                                    that count forward in time. Must be from 0 to 999,999,999
                                    inclusive. This field may be limited in precision depending on context.
                              description: |-
                                Time is a wrapper around time.Time which supports correct
                                marshaling to YAML and JSON.  Wrappers are provided for many
                                of the factory methods that the time package offers.

                                +protobuf.options.marshal=false
                                +protobuf.as=Timestamp
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                            deletionGracePeriodSeconds:
                              type:
                                - string
                                - "null"
                              format: int64
                              title: |-
                                Number of seconds allowed for this object to gracefully terminate before
                                it will be removed from the system. Only set when deletionTimestamp is also set.
                                May only be shortened.
                                Read-only.
                                +optional
                            labels:
                              type:
                                - object
                                - "null"
                              additionalProperties:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Map of string keys and values that can be used to organize and categorize
                                (scope and select) objects. May match selectors of replication controllers
                                and services.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels
                                +optional
                            annotations:
                              type:
                                - object
                                - "null"
                              additionalProperties:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Annotations is an unstructured key value map stored with a resource that may be
                                set by external tools to store and retrieve arbitrary metadata. They are not
                                queryable and should be preserved when modifying objects.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations
                                +optional
                            ownerReferences:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  apiVersion:
                                    type:
                                      - string
                                      - "null"
                                    description: API version of the referent.
                                  kind:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      Kind of the referent.
                                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names
                                  uid:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      UID of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids
                                  controller:
                                    type:
                                      - boolean
                                      - "null"
                                    title: |-
                                      If true, this reference points to the managing controller.
                                      +optional
                                  blockOwnerDeletion:
                                    type:
                                      - boolean
                                      - "null"
                                    title: |-
                                      If true, AND if the owner has the "foregroundDeletion" finalizer, then
                                      the owner cannot be deleted from the key-value store until this
                                      reference is removed.
                                      See https://kubernetes.io/docs/concepts/architecture/garbage-collection/#foreground-deletion
                                      for how the garbage collector interacts with this field and enforces the foreground deletion.
                                      Defaults to false.
                                      To set this field, a user needs "delete" permission of the owner,
                                      otherwise 422 (Unprocessable Entity) will be returned.
                                      +optional
                                title: |-
                                  OwnerReference contains enough information to let you identify an owning
                                  object. An owning object must be in the same namespace as the dependent, or
                                  be cluster-scoped, so there is no namespace field.
                                  +structType=atomic
                              title: |-
                                List of objects depended by this object. If ALL objects in the list have
                                been deleted, this object will be garbage collected. If this object is managed by a controller,
                                then an entry in this list will point to this controller, with the controller field set to true.
                                There cannot be more than one managing controller.
                                +optional
                                +patchMergeKey=uid
                                +patchStrategy=merge
                            finalizers:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Must be empty before the object is deleted from the registry. Each entry
                                is an identifier for the responsible component that will remove the entry
                                from the list. If the deletionTimestamp of the object is non-nil, entries
                                in this list can only be removed.
                                Finalizers may be processed and removed in any order.  Order is NOT enforced
                                because it introduces significant risk of stuck finalizers.
                                finalizers is a shared field, any actor with permission can reorder it.
                                If the finalizer list is processed in order, then this can lead to a situation
                                in which the component responsible for the first finalizer in the list is
                                waiting for a signal (field value, external system, or other) produced by a
                                component responsible for a finalizer later in the list, resulting in a deadlock.
                                Without enforced ordering finalizers are free to order amongst themselves and
                                are not vulnerable to ordering changes in the list.
                                +optional
                                +patchStrategy=merge
                            managedFields:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  manager:
                                    type:
                                      - string
                                      - "null"
                                    description: Manager is an identifier of the workflow managing these fields.
                                  operation:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      Operation is the type of operation which lead to this ManagedFieldsEntry being created.
                                      The only valid values for this field are 'Apply' and 'Update'.
                                  apiVersion:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      APIVersion defines the version of this resource that this field set
                                      applies to. The format is "group/version" just like the top-level
                                      APIVersion field. It is necessary to track the version of a field
                                      set because it cannot be automatically converted.
                                  time:
                                    type:
                                      - object
                                      - "null"
                                    properties:
                                      seconds:
                                        type:
                                          - string
                                          - "null"
                                        format: int64
                                        description: |-
                                          Represents seconds of UTC time since Unix epoch
                                          1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
                                          9999-12-31T23:59:59Z inclusive.
                                      nanos:
                                        type:
                                          - integer
                                          - "null"
                                        format: int32
                                        description: |-
                                          Non-negative fractions of a second at nanosecond resolution. Negative
                                          second values with fractions must still have non-negative nanos values
                                          that count forward in time. Must be from 0 to 999,999,999
                                          inclusive. This field may be limited in precision depending on context.
                                    description: |-
                                      Time is a wrapper around time.Time which supports correct
                                      marshaling to YAML and JSON.  Wrappers are provided for many
                                      of the factory methods that the time package offers.

                                      +protobuf.options.marshal=false
                                      +protobuf.as=Timestamp
                                      +protobuf.options.(gogoproto.goproto_stringer)=false
                                  fieldsType:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      FieldsType is the discriminator for the different fields format and version.
                                      There is currently only one possible value: "FieldsV1"
                                  fieldsV1:
                                    type:
                                      - object
                                      - "null"
                                    properties:
                                      Raw:
                                        type:
                                          - string
                                          - "null"
                                        format: byte
                                        description: Raw is the underlying serialization of this object.
                                    description: |-
                                      FieldsV1 stores a set of fields in a data structure like a Trie, in JSON format.

                                      Each key is either a '.' representing the field itself, and will always map to an empty set,
                                      or a string representing a sub-field or item. The string will follow one of these four formats:
                                      'f:<name>', where <name> is the name of a field in a struct, or key in a map
                                      'v:<value>', where <value> is the exact json formatted value of a list item
                                      'i:<index>', where <index> is position of a item in a list
                                      'k:<keys>', where <keys> is a map of  a list item's key fields to their unique values
                                      If a key maps to an empty Fields value, the field that key represents is part of the set.

                                      The exact format is defined in sigs.k8s.io/structured-merge-diff
                                      +protobuf.options.(gogoproto.goproto_stringer)=false
                                  subresource:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      Subresource is the name of the subresource used to update that object, or
                                      empty string if the object was updated through the main resource. The
                                      value of this field is used to distinguish between managers, even if they
                                      share the same name. For example, a status update will be distinct from a
                                      regular update using the same manager name.
                                      Note that the APIVersion field is not related to the Subresource field and
                                      it always corresponds to the version of the main resource.
                                description: |-
                                  ManagedFieldsEntry is a workflow-id, a FieldSet and the group version of the resource
                                  that the fieldset applies to.
                              description: |-
                                ManagedFields maps workflow-id and version to the set of fields
                                that are managed by that workflow. This is mostly for internal
                                housekeeping, and users typically shouldn't need to set or
                                understand this field. A workflow can be the user's name, a
                                controller's name, or the name of a specific apply path like
                                "ci-cd". The set of fields is always in the version that the
                                workflow used when modifying the object.

                                +optional
                          description: |-
                            ObjectMeta is metadata that all persisted resources must have, which includes all objects
                            users must create.
                        spec:
                          type:
                            - object
                            - "null"
                          properties:
                            accessModes:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                accessModes contains the desired access modes the volume should have.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
                                +optional
                            selector:
                              type:
                                - object
                                - "null"
                              properties:
                                matchLabels:
                                  type:
                                    - object
                                    - "null"
                                  additionalProperties:
                                    type:
                                      - string
                                      - "null"
                                  title: |-
                                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                                    +optional
                                matchExpressions:
                                  type:
                                    - array
                                    - "null"
                                  items:
                                    type:
                                      - object
                                      - "null"
                                    properties:
                                      key:
                                        type:
                                          - string
                                          - "null"
                                        description: key is the label key that the selector applies to.
                                      operator:
                                        type:
                                          - string
                                          - "null"
                                        description: |-
                                          operator represents a key's relationship to a set of values.
                                          Valid operators are In, NotIn, Exists and DoesNotExist.
                                      values:
                                        type:
                                          - array
                                          - "null"
                                        items:
                                          type:
                                            - string
                                            - "null"
                                        title: |-
                                          values is an array of string values. If the operator is In or NotIn,
                                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                          the values array must be empty. This array is replaced during a strategic
                                          merge patch.
                                          +optional
                                    description: |-
                                      A label selector requirement is a selector that contains values, a key, and an operator that
                                      relates the key and values.
                                  title: |-
                                    matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                    +optional
                              title: |-
                                A label selector is a label query over a set of resources. The result of matchLabels and
                                matchExpressions are ANDed. An empty label selector matches all objects. A null
                                label selector matches no objects.
                                +structType=atomic
                            resources:
                              type:
                                - object
                                - "null"
                              properties:
                                limits:
                                  type:
                                    - object
                                    - "null"
                                  additionalProperties:
                                    type:
                                      - object
                                      - "null"
                                    properties:
                                      string:
                                        type:
                                          - string
                                          - "null"
                                    description: |-
                                      Quantity is a fixed-point representation of a number.
                                      It provides convenient marshaling/unmarshaling in JSON and YAML,
                                      in addition to String() and AsInt64() accessors.

                                      The serialization format is:

                                      ```
                                      <quantity>        ::= <signedNumber><suffix>

                                      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                                      <digit>           ::= 0 | 1 | ... | 9
                                      <digits>          ::= <digit> | <digit><digits>
                                      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                                      <sign>            ::= "+" | "-"
                                      <signedNumber>    ::= <number> | <sign><number>
                                      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                                      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                                      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                                      <decimalSI>       ::= m | "" | k | M | G | T | P | E

                                      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                                      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                                      ```

                                      No matter which of the three exponent forms is used, no quantity may represent
                                      a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                                      places. Numbers larger or more precise will be capped or rounded up.
                                      (E.g.: 0.1m will rounded up to 1m.)
                                      This may be extended in the future if we require larger or smaller quantities.

                                      When a Quantity is parsed from a string, it will remember the type of suffix
                                      it had, and will use the same type again when it is serialized.

                                      Before serializing, Quantity will be put in "canonical form".
                                      This means that Exponent/suffix will be adjusted up or down (with a
                                      corresponding increase or decrease in Mantissa) such that:

                                      - No precision is lost
                                      - No fractional digits will be emitted
                                      - The exponent (or suffix) is as large as possible.

                                      The sign will be omitted unless the number is negative.

                                      Examples:

                                      - 1.5 will be serialized as "1500m"
                                      - 1.5Gi will be serialized as "1536Mi"

                                      Note that the quantity will NEVER be internally represented by a
                                      floating point number. That is the whole point of this exercise.

                                      Non-canonical values will still parse as long as they are well formed,
                                      but will be re-emitted in their canonical form. (So always use canonical
                                      form, or don't diff.)

                                      This format is intended to make it difficult to use these numbers without
                                      writing some sort of special handling code in the hopes that that will
                                      cause implementors to also use a fixed point implementation.

                                      +protobuf=true
                                      +protobuf.embed=string
                                      +protobuf.options.marshal=false
                                      +protobuf.options.(gogoproto.goproto_stringer)=false
                                      +k8s:deepcopy-gen=true
                                      +k8s:openapi-gen=true
                                  title: |-
                                    Limits describes the maximum amount of compute resources allowed.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    +optional
                                requests:
                                  type:
                                    - object
                                    - "null"
                                  additionalProperties:
                                    type:
                                      - object
                                      - "null"
                                    properties:
                                      string:
                                        type:
                                          - string
                                          - "null"
                                    description: |-
                                      Quantity is a fixed-point representation of a number.
                                      It provides convenient marshaling/unmarshaling in JSON and YAML,
                                      in addition to String() and AsInt64() accessors.

                                      The serialization format is:

                                      ```
                                      <quantity>        ::= <signedNumber><suffix>

                                      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                                      <digit>           ::= 0 | 1 | ... | 9
                                      <digits>          ::= <digit> | <digit><digits>
                                      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                                      <sign>            ::= "+" | "-"
                                      <signedNumber>    ::= <number> | <sign><number>
                                      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                                      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                                      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                                      <decimalSI>       ::= m | "" | k | M | G | T | P | E

                                      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                                      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                                      ```

                                      No matter which of the three exponent forms is used, no quantity may represent
                                      a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                                      places. Numbers larger or more precise will be capped or rounded up.
                                      (E.g.: 0.1m will rounded up to 1m.)
                                      This may be extended in the future if we require larger or smaller quantities.

                                      When a Quantity is parsed from a string, it will remember the type of suffix
                                      it had, and will use the same type again when it is serialized.

                                      Before serializing, Quantity will be put in "canonical form".
                                      This means that Exponent/suffix will be adjusted up or down (with a
                                      corresponding increase or decrease in Mantissa) such that:

                                      - No precision is lost
                                      - No fractional digits will be emitted
                                      - The exponent (or suffix) is as large as possible.

                                      The sign will be omitted unless the number is negative.

                                      Examples:

                                      - 1.5 will be serialized as "1500m"
                                      - 1.5Gi will be serialized as "1536Mi"

                                      Note that the quantity will NEVER be internally represented by a
                                      floating point number. That is the whole point of this exercise.

                                      Non-canonical values will still parse as long as they are well formed,
                                      but will be re-emitted in their canonical form. (So always use canonical
                                      form, or don't diff.)

                                      This format is intended to make it difficult to use these numbers without
                                      writing some sort of special handling code in the hopes that that will
                                      cause implementors to also use a fixed point implementation.

                                      +protobuf=true
                                      +protobuf.embed=string
                                      +protobuf.options.marshal=false
                                      +protobuf.options.(gogoproto.goproto_stringer)=false
                                      +k8s:deepcopy-gen=true
                                      +k8s:openapi-gen=true
                                  title: |-
                                    Requests describes the minimum amount of compute resources required.
                                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                                    +optional
                              description: VolumeResourceRequirements describes the storage resource requirements for a volume.
                            volumeName:
                              type:
                                - string
                                - "null"
                              title: |-
                                volumeName is the binding reference to the PersistentVolume backing this claim.
                                +optional
                            storageClassName:
                              type:
                                - string
                                - "null"
                              title: |-
                                storageClassName is the name of the StorageClass required by the claim.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
                                +optional
                            volumeMode:
                              type:
                                - string
                                - "null"
                              title: |-
                                volumeMode defines what type of volume is required by the claim.
                                Value of Filesystem is implied when not included in claim spec.
                                +optional
                            dataSource:
                              type:
                                - object
                                - "null"
                              properties:
                                apiGroup:
                                  type:
                                    - string
                                    - "null"
                                  title: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                    +optional
                                kind:
                                  type:
                                    - string
                                    - "null"
                                  title: Kind is the type of resource being referenced
                                name:
                                  type:
                                    - string
                                    - "null"
                                  title: Name is the name of resource being referenced
                              title: |-
                                TypedLocalObjectReference contains enough information to let you locate the
                                typed referenced object inside the same namespace.
                                +structType=atomic
                            dataSourceRef:
                              type:
                                - object
                                - "null"
                              properties:
                                apiGroup:
                                  type:
                                    - string
                                    - "null"
                                  title: |-
                                    APIGroup is the group for the resource being referenced.
                                    If APIGroup is not specified, the specified Kind must be in the core API group.
                                    For any other third-party types, APIGroup is required.
                                    +optional
                                kind:
                                  type:
                                    - string
                                    - "null"
                                  title: Kind is the type of resource being referenced
                                name:
                                  type:
                                    - string
                                    - "null"
                                  title: Name is the name of resource being referenced
                                namespace:
                                  type:
                                    - string
                                    - "null"
                                  title: |-
                                    Namespace is the namespace of resource being referenced
                                    Note that when a namespace is specified, a gateway.networking.k8s.io/ReferenceGrant object is required in the referent namespace to allow that namespace's owner to accept the reference. See the ReferenceGrant documentation for details.
                                    (Alpha) This field requires the CrossNamespaceVolumeDataSource feature gate to be enabled.
                                    +featureGate=CrossNamespaceVolumeDataSource
                                    +optional
                            volumeAttributesClassName:
                              type:
                                - string
                                - "null"
                              title: |-
                                volumeAttributesClassName may be used to set the VolumeAttributesClass used by this claim.
                                If specified, the CSI driver will create or update the volume with the attributes defined
                                in the corresponding VolumeAttributesClass. This has a different purpose than storageClassName,
                                it can be changed after the claim is created. An empty string value means that no VolumeAttributesClass
                                will be applied to the claim but it's not allowed to reset this field to empty string once it is set.
                                If unspecified and the PersistentVolumeClaim is unbound, the default VolumeAttributesClass
                                will be set by the persistentvolume controller if it exists.
                                If the resource referred to by volumeAttributesClass does not exist, this PersistentVolumeClaim will be
                                set to a Pending state, as reflected by the modifyVolumeStatus field, until such as a resource
                                exists.
                                More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#volumeattributesclass
                                (Alpha) Using this field requires the VolumeAttributesClass feature gate to be enabled.
                                +featureGate=VolumeAttributesClass
                                +optional
                          title: |-
                            PersistentVolumeClaimSpec describes the common attributes of storage devices
                            and allows a Source for provider-specific attributes
                      description: |-
                        PersistentVolumeClaimTemplate is used to produce
                        PersistentVolumeClaim objects as part of an EphemeralVolumeSource.
                  description: Represents an ephemeral volume that is handled by a normal storage driver.
              description: |-
                Represents the source of a volume to mount.
                Only one of its members may be specified.
          description: Volume represents a named volume in a pod that may be accessed by any container in the pod.
        title: |-
          List of volumes that can be mounted by containers belonging to the pod.
          More info: https://kubernetes.io/docs/concepts/storage/volumes
          +optional
          +patchMergeKey=name
          +patchStrategy=merge,retainKeys
      initContainers:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              description: |-
                Name of the container specified as a DNS_LABEL.
                Each container in a pod must have a unique name (DNS_LABEL).
                Cannot be updated.
            image:
              type:
                - string
                - "null"
              title: |-
                Container image name.
                More info: https://kubernetes.io/docs/concepts/containers/images
                This field is optional to allow higher level config management to default or override
                container images in workload controllers like Deployments and StatefulSets.
                +optional
            command:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              title: |-
                Entrypoint array. Not executed within a shell.
                The container image's ENTRYPOINT is used if this is not provided.
                Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                of whether the variable exists or not. Cannot be updated.
                More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                +optional
            args:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              title: |-
                Arguments to the entrypoint.
                The container image's CMD is used if this is not provided.
                Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                of whether the variable exists or not. Cannot be updated.
                More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                +optional
            workingDir:
              type:
                - string
                - "null"
              title: |-
                Container's working directory.
                If not specified, the container runtime's default will be used, which
                might be configured in the container image.
                Cannot be updated.
                +optional
            ports:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    title: |-
                      If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                      named port in a pod must have a unique name. Name for the port that can be
                      referred to by services.
                      +optional
                  hostPort:
                    type:
                      - integer
                      - "null"
                    format: int32
                    title: |-
                      Number of port to expose on the host.
                      If specified, this must be a valid port number, 0 < x < 65536.
                      If HostNetwork is specified, this must match ContainerPort.
                      Most containers do not need this.
                      +optional
                  containerPort:
                    type:
                      - integer
                      - "null"
                    format: int32
                    description: |-
                      Number of port to expose on the pod's IP address.
                      This must be a valid port number, 0 < x < 65536.
                  protocol:
                    type:
                      - string
                      - "null"
                    title: |-
                      Protocol for port. Must be UDP, TCP, or SCTP.
                      Defaults to "TCP".
                      +optional
                      +default="TCP"
                  hostIP:
                    type:
                      - string
                      - "null"
                    title: |-
                      What host IP to bind the external port to.
                      +optional
                description: ContainerPort represents a network port in a single container.
              title: |-
                List of ports to expose from the container. Not specifying a port here
                DOES NOT prevent that port from being exposed. Any port which is
                listening on the default "0.0.0.0" address inside a container will be
                accessible from the network.
                Modifying this array with strategic merge patch may corrupt the data.
                For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                Cannot be updated.
                +optional
                +patchMergeKey=containerPort
                +patchStrategy=merge
                +listType=map
                +listMapKey=containerPort
                +listMapKey=protocol
            envFrom:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  prefix:
                    type:
                      - string
                      - "null"
                    title: |-
                      An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                      +optional
                  configMapRef:
                    type:
                      - object
                      - "null"
                    properties:
                      localObjectReference:
                        type:
                          - object
                          - "null"
                        properties:
                          name:
                            type:
                              - string
                              - "null"
                            title: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                              +optional
                        title: |-
                          LocalObjectReference contains enough information to let you locate the
                          referenced object inside the same namespace.
                          +structType=atomic
                      optional:
                        type:
                          - boolean
                          - "null"
                        title: |-
                          Specify whether the ConfigMap must be defined
                          +optional
                    description: |-
                      ConfigMapEnvSource selects a ConfigMap to populate the environment
                      variables with.

                      The contents of the target ConfigMap's Data field will represent the
                      key-value pairs as environment variables.
                  secretRef:
                    type:
                      - object
                      - "null"
                    properties:
                      localObjectReference:
                        type:
                          - object
                          - "null"
                        properties:
                          name:
                            type:
                              - string
                              - "null"
                            title: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                              +optional
                        title: |-
                          LocalObjectReference contains enough information to let you locate the
                          referenced object inside the same namespace.
                          +structType=atomic
                      optional:
                        type:
                          - boolean
                          - "null"
                        title: |-
                          Specify whether the Secret must be defined
                          +optional
                    description: |-
                      SecretEnvSource selects a Secret to populate the environment
                      variables with.

                      The contents of the target Secret's Data field will represent the
                      key-value pairs as environment variables.
                title: EnvFromSource represents the source of a set of ConfigMaps
              title: |-
                List of sources to populate environment variables in the container.
                The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                will be reported as an event when the container is starting. When a key exists in multiple
                sources, the value associated with the last source will take precedence.
                Values defined by an Env with a duplicate key will take precedence.
                Cannot be updated.
                +optional
            env:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                  value:
                    type:
                      - string
                      - "null"
                    title: |-
                      Variable references $(VAR_NAME) are expanded
                      using the previously defined environment variables in the container and
                      any service environment variables. If a variable cannot be resolved,
                      the reference in the input string will be unchanged. Double $$ are reduced
                      to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                      "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                      Escaped references will never be expanded, regardless of whether the variable
                      exists or not.
                      Defaults to "".
                      +optional
                  valueFrom:
                    type:
                      - object
                      - "null"
                    properties:
                      fieldRef:
                        type:
                          - object
                          - "null"
                        properties:
                          apiVersion:
                            type:
                              - string
                              - "null"
                            title: |-
                              Version of the schema the FieldPath is written in terms of, defaults to "v1".
                              +optional
                          fieldPath:
                            type:
                              - string
                              - "null"
                            description: Path of the field to select in the specified API version.
                        title: |-
                          ObjectFieldSelector selects an APIVersioned field of an object.
                          +structType=atomic
                      resourceFieldRef:
                        type:
                          - object
                          - "null"
                        properties:
                          containerName:
                            type:
                              - string
                              - "null"
                            title: |-
                              Container name: required for volumes, optional for env vars
                              +optional
                          resource:
                            type:
                              - string
                              - "null"
                            title: 'Required: resource to select'
                          divisor:
                            type:
                              - object
                              - "null"
                            properties:
                              string:
                                type:
                                  - string
                                  - "null"
                            description: |-
                              Quantity is a fixed-point representation of a number.
                              It provides convenient marshaling/unmarshaling in JSON and YAML,
                              in addition to String() and AsInt64() accessors.

                              The serialization format is:

                              ```
                              <quantity>        ::= <signedNumber><suffix>

                              	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                              <digit>           ::= 0 | 1 | ... | 9
                              <digits>          ::= <digit> | <digit><digits>
                              <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                              <sign>            ::= "+" | "-"
                              <signedNumber>    ::= <number> | <sign><number>
                              <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                              <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                              	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                              <decimalSI>       ::= m | "" | k | M | G | T | P | E

                              	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                              <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                              ```

                              No matter which of the three exponent forms is used, no quantity may represent
                              a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                              places. Numbers larger or more precise will be capped or rounded up.
                              (E.g.: 0.1m will rounded up to 1m.)
                              This may be extended in the future if we require larger or smaller quantities.

                              When a Quantity is parsed from a string, it will remember the type of suffix
                              it had, and will use the same type again when it is serialized.

                              Before serializing, Quantity will be put in "canonical form".
                              This means that Exponent/suffix will be adjusted up or down (with a
                              corresponding increase or decrease in Mantissa) such that:

                              - No precision is lost
                              - No fractional digits will be emitted
                              - The exponent (or suffix) is as large as possible.

                              The sign will be omitted unless the number is negative.

                              Examples:

                              - 1.5 will be serialized as "1500m"
                              - 1.5Gi will be serialized as "1536Mi"

                              Note that the quantity will NEVER be internally represented by a
                              floating point number. That is the whole point of this exercise.

                              Non-canonical values will still parse as long as they are well formed,
                              but will be re-emitted in their canonical form. (So always use canonical
                              form, or don't diff.)

                              This format is intended to make it difficult to use these numbers without
                              writing some sort of special handling code in the hopes that that will
                              cause implementors to also use a fixed point implementation.

                              +protobuf=true
                              +protobuf.embed=string
                              +protobuf.options.marshal=false
                              +protobuf.options.(gogoproto.goproto_stringer)=false
                              +k8s:deepcopy-gen=true
                              +k8s:openapi-gen=true
                        title: |-
                          ResourceFieldSelector represents container resources (cpu, memory) and their output format
                          +structType=atomic
                      configMapKeyRef:
                        type:
                          - object
                          - "null"
                        properties:
                          localObjectReference:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                            title: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                          key:
                            type:
                              - string
                              - "null"
                            description: The key to select.
                          optional:
                            type:
                              - boolean
                              - "null"
                            title: |-
                              Specify whether the ConfigMap or its key must be defined
                              +optional
                        title: |-
                          Selects a key from a ConfigMap.
                          +structType=atomic
                      secretKeyRef:
                        type:
                          - object
                          - "null"
                        properties:
                          localObjectReference:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                            title: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                          key:
                            type:
                              - string
                              - "null"
                            description: The key of the secret to select from.  Must be a valid secret key.
                          optional:
                            type:
                              - boolean
                              - "null"
                            title: |-
                              Specify whether the Secret or its key must be defined
                              +optional
                        title: |-
                          SecretKeySelector selects a key of a Secret.
                          +structType=atomic
                    description: EnvVarSource represents a source for the value of an EnvVar.
                description: EnvVar represents an environment variable present in a Container.
              title: |-
                List of environment variables to set in the container.
                Cannot be updated.
                +optional
                +patchMergeKey=name
                +patchStrategy=merge
            resources:
              type:
                - object
                - "null"
              properties:
                limits:
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    type:
                      - object
                      - "null"
                    properties:
                      string:
                        type:
                          - string
                          - "null"
                    description: |-
                      Quantity is a fixed-point representation of a number.
                      It provides convenient marshaling/unmarshaling in JSON and YAML,
                      in addition to String() and AsInt64() accessors.

                      The serialization format is:

                      ```
                      <quantity>        ::= <signedNumber><suffix>

                      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                      <digit>           ::= 0 | 1 | ... | 9
                      <digits>          ::= <digit> | <digit><digits>
                      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                      <sign>            ::= "+" | "-"
                      <signedNumber>    ::= <number> | <sign><number>
                      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                      <decimalSI>       ::= m | "" | k | M | G | T | P | E

                      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                      ```

                      No matter which of the three exponent forms is used, no quantity may represent
                      a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                      places. Numbers larger or more precise will be capped or rounded up.
                      (E.g.: 0.1m will rounded up to 1m.)
                      This may be extended in the future if we require larger or smaller quantities.

                      When a Quantity is parsed from a string, it will remember the type of suffix
                      it had, and will use the same type again when it is serialized.

                      Before serializing, Quantity will be put in "canonical form".
                      This means that Exponent/suffix will be adjusted up or down (with a
                      corresponding increase or decrease in Mantissa) such that:

                      - No precision is lost
                      - No fractional digits will be emitted
                      - The exponent (or suffix) is as large as possible.

                      The sign will be omitted unless the number is negative.

                      Examples:

                      - 1.5 will be serialized as "1500m"
                      - 1.5Gi will be serialized as "1536Mi"

                      Note that the quantity will NEVER be internally represented by a
                      floating point number. That is the whole point of this exercise.

                      Non-canonical values will still parse as long as they are well formed,
                      but will be re-emitted in their canonical form. (So always use canonical
                      form, or don't diff.)

                      This format is intended to make it difficult to use these numbers without
                      writing some sort of special handling code in the hopes that that will
                      cause implementors to also use a fixed point implementation.

                      +protobuf=true
                      +protobuf.embed=string
                      +protobuf.options.marshal=false
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                      +k8s:deepcopy-gen=true
                      +k8s:openapi-gen=true
                  title: |-
                    Limits describes the maximum amount of compute resources allowed.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    +optional
                requests:
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    type:
                      - object
                      - "null"
                    properties:
                      string:
                        type:
                          - string
                          - "null"
                    description: |-
                      Quantity is a fixed-point representation of a number.
                      It provides convenient marshaling/unmarshaling in JSON and YAML,
                      in addition to String() and AsInt64() accessors.

                      The serialization format is:

                      ```
                      <quantity>        ::= <signedNumber><suffix>

                      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                      <digit>           ::= 0 | 1 | ... | 9
                      <digits>          ::= <digit> | <digit><digits>
                      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                      <sign>            ::= "+" | "-"
                      <signedNumber>    ::= <number> | <sign><number>
                      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                      <decimalSI>       ::= m | "" | k | M | G | T | P | E

                      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                      ```

                      No matter which of the three exponent forms is used, no quantity may represent
                      a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                      places. Numbers larger or more precise will be capped or rounded up.
                      (E.g.: 0.1m will rounded up to 1m.)
                      This may be extended in the future if we require larger or smaller quantities.

                      When a Quantity is parsed from a string, it will remember the type of suffix
                      it had, and will use the same type again when it is serialized.

                      Before serializing, Quantity will be put in "canonical form".
                      This means that Exponent/suffix will be adjusted up or down (with a
                      corresponding increase or decrease in Mantissa) such that:

                      - No precision is lost
                      - No fractional digits will be emitted
                      - The exponent (or suffix) is as large as possible.

                      The sign will be omitted unless the number is negative.

                      Examples:

                      - 1.5 will be serialized as "1500m"
                      - 1.5Gi will be serialized as "1536Mi"

                      Note that the quantity will NEVER be internally represented by a
                      floating point number. That is the whole point of this exercise.

                      Non-canonical values will still parse as long as they are well formed,
                      but will be re-emitted in their canonical form. (So always use canonical
                      form, or don't diff.)

                      This format is intended to make it difficult to use these numbers without
                      writing some sort of special handling code in the hopes that that will
                      cause implementors to also use a fixed point implementation.

                      +protobuf=true
                      +protobuf.embed=string
                      +protobuf.options.marshal=false
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                      +k8s:deepcopy-gen=true
                      +k8s:openapi-gen=true
                  title: |-
                    Requests describes the minimum amount of compute resources required.
                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    +optional
                claims:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      name:
                        type:
                          - string
                          - "null"
                        description: |-
                          Name must match the name of one entry in pod.spec.resourceClaims of
                          the Pod where this field is used. It makes that resource available
                          inside a container.
                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                  description: |-
                    Claims lists the names of resources, defined in spec.resourceClaims,
                    that are used by this container.

                    This is an alpha field and requires enabling the
                    DynamicResourceAllocation feature gate.

                    This field is immutable. It can only be set for containers.

                    +listType=map
                    +listMapKey=name
                    +featureGate=DynamicResourceAllocation
                    +optional
              description: ResourceRequirements describes the compute resource requirements.
            resizePolicy:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  resourceName:
                    type:
                      - string
                      - "null"
                    description: |-
                      Name of the resource to which this resource resize policy applies.
                      Supported values: cpu, memory.
                  restartPolicy:
                    type:
                      - string
                      - "null"
                    description: |-
                      Restart policy to apply when specified resource is resized.
                      If not specified, it defaults to NotRequired.
                description: ContainerResizePolicy represents resource resize policy for the container.
              title: |-
                Resources resize policy for the container.
                +featureGate=InPlacePodVerticalScaling
                +optional
                +listType=atomic
            restartPolicy:
              type:
                - string
                - "null"
              title: |-
                RestartPolicy defines the restart behavior of individual containers in a pod.
                This field may only be set for init containers, and the only allowed value is "Always".
                For non-init containers or when this field is not specified,
                the restart behavior is defined by the Pod's restart policy and the container type.
                Setting the RestartPolicy as "Always" for the init container will have the following effect:
                this init container will be continually restarted on
                exit until all regular containers have terminated. Once all regular
                containers have completed, all init containers with restartPolicy "Always"
                will be shut down. This lifecycle differs from normal init containers and
                is often referred to as a "sidecar" container. Although this init
                container still starts in the init container sequence, it does not wait
                for the container to complete before proceeding to the next init
                container. Instead, the next init container starts immediately after this
                init container is started, or after any startupProbe has successfully
                completed.
                +featureGate=SidecarContainers
                +optional
            volumeMounts:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    description: This must match the Name of a Volume.
                  readOnly:
                    type:
                      - boolean
                      - "null"
                    title: |-
                      Mounted read-only if true, read-write otherwise (false or unspecified).
                      Defaults to false.
                      +optional
                  mountPath:
                    type:
                      - string
                      - "null"
                    description: |-
                      Path within the container at which the volume should be mounted.  Must
                      not contain ':'.
                  subPath:
                    type:
                      - string
                      - "null"
                    title: |-
                      Path within the volume from which the container's volume should be mounted.
                      Defaults to "" (volume's root).
                      +optional
                  mountPropagation:
                    type:
                      - string
                      - "null"
                    title: |-
                      mountPropagation determines how mounts are propagated from the host
                      to container and the other way around.
                      When not set, MountPropagationNone is used.
                      This field is beta in 1.10.
                      +optional
                  subPathExpr:
                    type:
                      - string
                      - "null"
                    title: |-
                      Expanded path within the volume from which the container's volume should be mounted.
                      Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                      Defaults to "" (volume's root).
                      SubPathExpr and SubPath are mutually exclusive.
                      +optional
                description: VolumeMount describes a mounting of a Volume within a container.
              title: |-
                Pod volumes to mount into the container's filesystem.
                Cannot be updated.
                +optional
                +patchMergeKey=mountPath
                +patchStrategy=merge
            volumeDevices:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    title: name must match the name of a persistentVolumeClaim in the pod
                  devicePath:
                    type:
                      - string
                      - "null"
                    description: devicePath is the path inside of the container that the device will be mapped to.
                description: volumeDevice describes a mapping of a raw block device within a container.
              title: |-
                volumeDevices is the list of block devices to be used by the container.
                +patchMergeKey=devicePath
                +patchStrategy=merge
                +optional
            livenessProbe:
              type:
                - object
                - "null"
              properties:
                handler:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    grpc:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - integer
                            - "null"
                          format: int32
                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                        service:
                          type:
                            - string
                            - "null"
                          description: |-
                            Service is the name of the service to place in the gRPC HealthCheckRequest
                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                            If this is not specified, the default behavior is defined by gRPC.
                            +optional
                            +default=""
                  description: |-
                    ProbeHandler defines a specific action that should be taken in a probe.
                    One and only one of the fields must be specified.
                initialDelaySeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after the container has started before liveness probes are initiated.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                timeoutSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                periodSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    How often (in seconds) to perform the probe.
                    Default to 10 seconds. Minimum value is 1.
                    +optional
                successThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive successes for the probe to be considered successful after having failed.
                    Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    +optional
                failureThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                    +optional
                terminationGracePeriodSeconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                    The grace period is the duration in seconds after the processes running in the pod are sent
                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                    Set this value longer than the expected cleanup time for your process.
                    If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                    value overrides the value provided by the pod spec.
                    Value must be non-negative integer. The value zero indicates stop immediately via
                    the kill signal (no opportunity to shut down).
                    This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                    Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    +optional
              description: |-
                Probe describes a health check to be performed against a container to determine whether it is
                alive or ready to receive traffic.
            readinessProbe:
              type:
                - object
                - "null"
              properties:
                handler:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    grpc:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - integer
                            - "null"
                          format: int32
                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                        service:
                          type:
                            - string
                            - "null"
                          description: |-
                            Service is the name of the service to place in the gRPC HealthCheckRequest
                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                            If this is not specified, the default behavior is defined by gRPC.
                            +optional
                            +default=""
                  description: |-
                    ProbeHandler defines a specific action that should be taken in a probe.
                    One and only one of the fields must be specified.
                initialDelaySeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after the container has started before liveness probes are initiated.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                timeoutSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                periodSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    How often (in seconds) to perform the probe.
                    Default to 10 seconds. Minimum value is 1.
                    +optional
                successThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive successes for the probe to be considered successful after having failed.
                    Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    +optional
                failureThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                    +optional
                terminationGracePeriodSeconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                    The grace period is the duration in seconds after the processes running in the pod are sent
                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                    Set this value longer than the expected cleanup time for your process.
                    If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                    value overrides the value provided by the pod spec.
                    Value must be non-negative integer. The value zero indicates stop immediately via
                    the kill signal (no opportunity to shut down).
                    This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                    Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    +optional
              description: |-
                Probe describes a health check to be performed against a container to determine whether it is
                alive or ready to receive traffic.
            startupProbe:
              type:
                - object
                - "null"
              properties:
                handler:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    grpc:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - integer
                            - "null"
                          format: int32
                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                        service:
                          type:
                            - string
                            - "null"
                          description: |-
                            Service is the name of the service to place in the gRPC HealthCheckRequest
                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                            If this is not specified, the default behavior is defined by gRPC.
                            +optional
                            +default=""
                  description: |-
                    ProbeHandler defines a specific action that should be taken in a probe.
                    One and only one of the fields must be specified.
                initialDelaySeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after the container has started before liveness probes are initiated.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                timeoutSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                periodSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    How often (in seconds) to perform the probe.
                    Default to 10 seconds. Minimum value is 1.
                    +optional
                successThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive successes for the probe to be considered successful after having failed.
                    Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    +optional
                failureThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                    +optional
                terminationGracePeriodSeconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                    The grace period is the duration in seconds after the processes running in the pod are sent
                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                    Set this value longer than the expected cleanup time for your process.
                    If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                    value overrides the value provided by the pod spec.
                    Value must be non-negative integer. The value zero indicates stop immediately via
                    the kill signal (no opportunity to shut down).
                    This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                    Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    +optional
              description: |-
                Probe describes a health check to be performed against a container to determine whether it is
                alive or ready to receive traffic.
            lifecycle:
              type:
                - object
                - "null"
              properties:
                postStart:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    sleep:
                      type:
                        - object
                        - "null"
                      properties:
                        seconds:
                          type:
                            - string
                            - "null"
                          format: int64
                          description: Seconds is the number of seconds to sleep.
                      description: SleepAction describes a "sleep" action.
                  description: |-
                    LifecycleHandler defines a specific action that should be taken in a lifecycle
                    hook. One and only one of the fields, except TCPSocket must be specified.
                preStop:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    sleep:
                      type:
                        - object
                        - "null"
                      properties:
                        seconds:
                          type:
                            - string
                            - "null"
                          format: int64
                          description: Seconds is the number of seconds to sleep.
                      description: SleepAction describes a "sleep" action.
                  description: |-
                    LifecycleHandler defines a specific action that should be taken in a lifecycle
                    hook. One and only one of the fields, except TCPSocket must be specified.
              description: |-
                Lifecycle describes actions that the management system should take in response to container lifecycle
                events. For the PostStart and PreStop lifecycle handlers, management of the container blocks
                until the action is complete, unless the container process fails, in which case the handler is aborted.
            terminationMessagePath:
              type:
                - string
                - "null"
              title: |-
                Optional: Path at which the file to which the container's termination message
                will be written is mounted into the container's filesystem.
                Message written is intended to be brief final status, such as an assertion failure message.
                Will be truncated by the node if greater than 4096 bytes. The total message length across
                all containers will be limited to 12kb.
                Defaults to /dev/termination-log.
                Cannot be updated.
                +optional
            terminationMessagePolicy:
              type:
                - string
                - "null"
              title: |-
                Indicate how the termination message should be populated. File will use the contents of
                terminationMessagePath to populate the container status message on both success and failure.
                FallbackToLogsOnError will use the last chunk of container log output if the termination
                message file is empty and the container exited with an error.
                The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                Defaults to File.
                Cannot be updated.
                +optional
            imagePullPolicy:
              type:
                - string
                - "null"
              title: |-
                Image pull policy.
                One of Always, Never, IfNotPresent.
                Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                Cannot be updated.
                More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                +optional
            securityContext:
              type:
                - object
                - "null"
              properties:
                capabilities:
                  type:
                    - object
                    - "null"
                  properties:
                    add:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        Added capabilities
                        +optional
                    drop:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        Removed capabilities
                        +optional
                  description: Adds and removes POSIX capabilities from running containers.
                privileged:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Run container in privileged mode.
                    Processes in privileged containers are essentially equivalent to root on the host.
                    Defaults to false.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                seLinuxOptions:
                  type:
                    - object
                    - "null"
                  properties:
                    user:
                      type:
                        - string
                        - "null"
                      title: |-
                        User is a SELinux user label that applies to the container.
                        +optional
                    role:
                      type:
                        - string
                        - "null"
                      title: |-
                        Role is a SELinux role label that applies to the container.
                        +optional
                    type:
                      type:
                        - string
                        - "null"
                      title: |-
                        Type is a SELinux type label that applies to the container.
                        +optional
                    level:
                      type:
                        - string
                        - "null"
                      title: |-
                        Level is SELinux level label that applies to the container.
                        +optional
                  title: SELinuxOptions are the labels to be applied to the container
                windowsOptions:
                  type:
                    - object
                    - "null"
                  properties:
                    gmsaCredentialSpecName:
                      type:
                        - string
                        - "null"
                      title: |-
                        GMSACredentialSpecName is the name of the GMSA credential spec to use.
                        +optional
                    gmsaCredentialSpec:
                      type:
                        - string
                        - "null"
                      title: |-
                        GMSACredentialSpec is where the GMSA admission webhook
                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                        GMSA credential spec named by the GMSACredentialSpecName field.
                        +optional
                    runAsUserName:
                      type:
                        - string
                        - "null"
                      title: |-
                        The UserName in Windows to run the entrypoint of the container process.
                        Defaults to the user specified in image metadata if unspecified.
                        May also be set in PodSecurityContext. If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        +optional
                    hostProcess:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        HostProcess determines if a container should be run as a 'Host Process' container.
                        All of a Pod's containers must have the same effective HostProcess value
                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                        +optional
                  description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                runAsUser:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified.
                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                runAsGroup:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    The GID to run the entrypoint of the container process.
                    Uses runtime default if unset.
                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                runAsNonRoot:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Indicates that the container must run as a non-root user.
                    If true, the Kubelet will validate the image at runtime to ensure that it
                    does not run as UID 0 (root) and fail to start the container if it does.
                    If unset or false, no such validation will be performed.
                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                    +optional
                readOnlyRootFilesystem:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Whether this container has a read-only root filesystem.
                    Default is false.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                allowPrivilegeEscalation:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    AllowPrivilegeEscalation controls whether a process can gain more
                    privileges than its parent process. This bool directly controls if
                    the no_new_privs flag will be set on the container process.
                    AllowPrivilegeEscalation is true always when the container is:
                    1) run as Privileged
                    2) has CAP_SYS_ADMIN
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                procMount:
                  type:
                    - string
                    - "null"
                  title: |-
                    procMount denotes the type of proc mount to use for the containers.
                    The default is DefaultProcMount which uses the container runtime defaults for
                    readonly paths and masked paths.
                    This requires the ProcMountType feature flag to be enabled.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                seccompProfile:
                  type:
                    - object
                    - "null"
                  properties:
                    type:
                      type:
                        - string
                        - "null"
                      description: |-
                        Localhost - a profile defined in a file on the node should be used.
                        RuntimeDefault - the container runtime default profile should be used.
                        Unconfined - no profile should be applied.
                        +unionDiscriminator
                      title: |-
                        type indicates which kind of seccomp profile will be applied.
                        Valid options are:
                    localhostProfile:
                      type:
                        - string
                        - "null"
                      title: |-
                        localhostProfile indicates a profile defined in a file on the node should be used.
                        The profile must be preconfigured on the node to work.
                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                        Must be set if type is "Localhost". Must NOT be set for any other type.
                        +optional
                  title: |-
                    SeccompProfile defines a pod/container's seccomp profile settings.
                    Only one profile source may be set.
                    +union
              description: |-
                SecurityContext holds security configuration that will be applied to a container.
                Some fields are present in both SecurityContext and PodSecurityContext.  When both
                are set, the values in SecurityContext take precedence.
            stdin:
              type:
                - boolean
                - "null"
              title: |-
                Whether this container should allocate a buffer for stdin in the container runtime. If this
                is not set, reads from stdin in the container will always result in EOF.
                Default is false.
                +optional
            stdinOnce:
              type:
                - boolean
                - "null"
              title: |-
                Whether the container runtime should close the stdin channel after it has been opened by
                a single attach. When stdin is true the stdin stream will remain open across multiple attach
                sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                at which time stdin is closed and remains closed until the container is restarted. If this
                flag is false, a container processes that reads from stdin will never receive an EOF.
                Default is false
                +optional
            tty:
              type:
                - boolean
                - "null"
              title: |-
                Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                Default is false.
                +optional
          description: A single application container that you want to run within a pod.
        title: |-
          List of initialization containers belonging to the pod.
          Init containers are executed in order prior to containers being started. If any
          init container fails, the pod is considered to have failed and is handled according
          to its restartPolicy. The name for an init container or normal container must be
          unique among all containers.
          Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes.
          The resourceRequirements of an init container are taken into account during scheduling
          by finding the highest request/limit for each resource type, and then using the max of
          of that value or the sum of the normal containers. Limits are applied to init containers
          in a similar fashion.
          Init containers cannot currently be added or removed.
          Cannot be updated.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
          +patchMergeKey=name
          +patchStrategy=merge
      containers:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              description: |-
                Name of the container specified as a DNS_LABEL.
                Each container in a pod must have a unique name (DNS_LABEL).
                Cannot be updated.
            image:
              type:
                - string
                - "null"
              title: |-
                Container image name.
                More info: https://kubernetes.io/docs/concepts/containers/images
                This field is optional to allow higher level config management to default or override
                container images in workload controllers like Deployments and StatefulSets.
                +optional
            command:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              title: |-
                Entrypoint array. Not executed within a shell.
                The container image's ENTRYPOINT is used if this is not provided.
                Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                of whether the variable exists or not. Cannot be updated.
                More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                +optional
            args:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              title: |-
                Arguments to the entrypoint.
                The container image's CMD is used if this is not provided.
                Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                of whether the variable exists or not. Cannot be updated.
                More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                +optional
            workingDir:
              type:
                - string
                - "null"
              title: |-
                Container's working directory.
                If not specified, the container runtime's default will be used, which
                might be configured in the container image.
                Cannot be updated.
                +optional
            ports:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    title: |-
                      If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                      named port in a pod must have a unique name. Name for the port that can be
                      referred to by services.
                      +optional
                  hostPort:
                    type:
                      - integer
                      - "null"
                    format: int32
                    title: |-
                      Number of port to expose on the host.
                      If specified, this must be a valid port number, 0 < x < 65536.
                      If HostNetwork is specified, this must match ContainerPort.
                      Most containers do not need this.
                      +optional
                  containerPort:
                    type:
                      - integer
                      - "null"
                    format: int32
                    description: |-
                      Number of port to expose on the pod's IP address.
                      This must be a valid port number, 0 < x < 65536.
                  protocol:
                    type:
                      - string
                      - "null"
                    title: |-
                      Protocol for port. Must be UDP, TCP, or SCTP.
                      Defaults to "TCP".
                      +optional
                      +default="TCP"
                  hostIP:
                    type:
                      - string
                      - "null"
                    title: |-
                      What host IP to bind the external port to.
                      +optional
                description: ContainerPort represents a network port in a single container.
              title: |-
                List of ports to expose from the container. Not specifying a port here
                DOES NOT prevent that port from being exposed. Any port which is
                listening on the default "0.0.0.0" address inside a container will be
                accessible from the network.
                Modifying this array with strategic merge patch may corrupt the data.
                For more information See https://github.com/kubernetes/kubernetes/issues/108255.
                Cannot be updated.
                +optional
                +patchMergeKey=containerPort
                +patchStrategy=merge
                +listType=map
                +listMapKey=containerPort
                +listMapKey=protocol
            envFrom:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  prefix:
                    type:
                      - string
                      - "null"
                    title: |-
                      An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                      +optional
                  configMapRef:
                    type:
                      - object
                      - "null"
                    properties:
                      localObjectReference:
                        type:
                          - object
                          - "null"
                        properties:
                          name:
                            type:
                              - string
                              - "null"
                            title: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                              +optional
                        title: |-
                          LocalObjectReference contains enough information to let you locate the
                          referenced object inside the same namespace.
                          +structType=atomic
                      optional:
                        type:
                          - boolean
                          - "null"
                        title: |-
                          Specify whether the ConfigMap must be defined
                          +optional
                    description: |-
                      ConfigMapEnvSource selects a ConfigMap to populate the environment
                      variables with.

                      The contents of the target ConfigMap's Data field will represent the
                      key-value pairs as environment variables.
                  secretRef:
                    type:
                      - object
                      - "null"
                    properties:
                      localObjectReference:
                        type:
                          - object
                          - "null"
                        properties:
                          name:
                            type:
                              - string
                              - "null"
                            title: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              TODO: Add other useful fields. apiVersion, kind, uid?
                              +optional
                        title: |-
                          LocalObjectReference contains enough information to let you locate the
                          referenced object inside the same namespace.
                          +structType=atomic
                      optional:
                        type:
                          - boolean
                          - "null"
                        title: |-
                          Specify whether the Secret must be defined
                          +optional
                    description: |-
                      SecretEnvSource selects a Secret to populate the environment
                      variables with.

                      The contents of the target Secret's Data field will represent the
                      key-value pairs as environment variables.
                title: EnvFromSource represents the source of a set of ConfigMaps
              title: |-
                List of sources to populate environment variables in the container.
                The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                will be reported as an event when the container is starting. When a key exists in multiple
                sources, the value associated with the last source will take precedence.
                Values defined by an Env with a duplicate key will take precedence.
                Cannot be updated.
                +optional
            env:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    description: Name of the environment variable. Must be a C_IDENTIFIER.
                  value:
                    type:
                      - string
                      - "null"
                    title: |-
                      Variable references $(VAR_NAME) are expanded
                      using the previously defined environment variables in the container and
                      any service environment variables. If a variable cannot be resolved,
                      the reference in the input string will be unchanged. Double $$ are reduced
                      to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                      "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                      Escaped references will never be expanded, regardless of whether the variable
                      exists or not.
                      Defaults to "".
                      +optional
                  valueFrom:
                    type:
                      - object
                      - "null"
                    properties:
                      fieldRef:
                        type:
                          - object
                          - "null"
                        properties:
                          apiVersion:
                            type:
                              - string
                              - "null"
                            title: |-
                              Version of the schema the FieldPath is written in terms of, defaults to "v1".
                              +optional
                          fieldPath:
                            type:
                              - string
                              - "null"
                            description: Path of the field to select in the specified API version.
                        title: |-
                          ObjectFieldSelector selects an APIVersioned field of an object.
                          +structType=atomic
                      resourceFieldRef:
                        type:
                          - object
                          - "null"
                        properties:
                          containerName:
                            type:
                              - string
                              - "null"
                            title: |-
                              Container name: required for volumes, optional for env vars
                              +optional
                          resource:
                            type:
                              - string
                              - "null"
                            title: 'Required: resource to select'
                          divisor:
                            type:
                              - object
                              - "null"
                            properties:
                              string:
                                type:
                                  - string
                                  - "null"
                            description: |-
                              Quantity is a fixed-point representation of a number.
                              It provides convenient marshaling/unmarshaling in JSON and YAML,
                              in addition to String() and AsInt64() accessors.

                              The serialization format is:

                              ```
                              <quantity>        ::= <signedNumber><suffix>

                              	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                              <digit>           ::= 0 | 1 | ... | 9
                              <digits>          ::= <digit> | <digit><digits>
                              <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                              <sign>            ::= "+" | "-"
                              <signedNumber>    ::= <number> | <sign><number>
                              <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                              <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                              	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                              <decimalSI>       ::= m | "" | k | M | G | T | P | E

                              	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                              <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                              ```

                              No matter which of the three exponent forms is used, no quantity may represent
                              a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                              places. Numbers larger or more precise will be capped or rounded up.
                              (E.g.: 0.1m will rounded up to 1m.)
                              This may be extended in the future if we require larger or smaller quantities.

                              When a Quantity is parsed from a string, it will remember the type of suffix
                              it had, and will use the same type again when it is serialized.

                              Before serializing, Quantity will be put in "canonical form".
                              This means that Exponent/suffix will be adjusted up or down (with a
                              corresponding increase or decrease in Mantissa) such that:

                              - No precision is lost
                              - No fractional digits will be emitted
                              - The exponent (or suffix) is as large as possible.

                              The sign will be omitted unless the number is negative.

                              Examples:

                              - 1.5 will be serialized as "1500m"
                              - 1.5Gi will be serialized as "1536Mi"

                              Note that the quantity will NEVER be internally represented by a
                              floating point number. That is the whole point of this exercise.

                              Non-canonical values will still parse as long as they are well formed,
                              but will be re-emitted in their canonical form. (So always use canonical
                              form, or don't diff.)

                              This format is intended to make it difficult to use these numbers without
                              writing some sort of special handling code in the hopes that that will
                              cause implementors to also use a fixed point implementation.

                              +protobuf=true
                              +protobuf.embed=string
                              +protobuf.options.marshal=false
                              +protobuf.options.(gogoproto.goproto_stringer)=false
                              +k8s:deepcopy-gen=true
                              +k8s:openapi-gen=true
                        title: |-
                          ResourceFieldSelector represents container resources (cpu, memory) and their output format
                          +structType=atomic
                      configMapKeyRef:
                        type:
                          - object
                          - "null"
                        properties:
                          localObjectReference:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                            title: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                          key:
                            type:
                              - string
                              - "null"
                            description: The key to select.
                          optional:
                            type:
                              - boolean
                              - "null"
                            title: |-
                              Specify whether the ConfigMap or its key must be defined
                              +optional
                        title: |-
                          Selects a key from a ConfigMap.
                          +structType=atomic
                      secretKeyRef:
                        type:
                          - object
                          - "null"
                        properties:
                          localObjectReference:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                            title: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                          key:
                            type:
                              - string
                              - "null"
                            description: The key of the secret to select from.  Must be a valid secret key.
                          optional:
                            type:
                              - boolean
                              - "null"
                            title: |-
                              Specify whether the Secret or its key must be defined
                              +optional
                        title: |-
                          SecretKeySelector selects a key of a Secret.
                          +structType=atomic
                    description: EnvVarSource represents a source for the value of an EnvVar.
                description: EnvVar represents an environment variable present in a Container.
              title: |-
                List of environment variables to set in the container.
                Cannot be updated.
                +optional
                +patchMergeKey=name
                +patchStrategy=merge
            resources:
              type:
                - object
                - "null"
              properties:
                limits:
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    type:
                      - object
                      - "null"
                    properties:
                      string:
                        type:
                          - string
                          - "null"
                    description: |-
                      Quantity is a fixed-point representation of a number.
                      It provides convenient marshaling/unmarshaling in JSON and YAML,
                      in addition to String() and AsInt64() accessors.

                      The serialization format is:

                      ```
                      <quantity>        ::= <signedNumber><suffix>

                      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                      <digit>           ::= 0 | 1 | ... | 9
                      <digits>          ::= <digit> | <digit><digits>
                      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                      <sign>            ::= "+" | "-"
                      <signedNumber>    ::= <number> | <sign><number>
                      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                      <decimalSI>       ::= m | "" | k | M | G | T | P | E

                      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                      ```

                      No matter which of the three exponent forms is used, no quantity may represent
                      a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                      places. Numbers larger or more precise will be capped or rounded up.
                      (E.g.: 0.1m will rounded up to 1m.)
                      This may be extended in the future if we require larger or smaller quantities.

                      When a Quantity is parsed from a string, it will remember the type of suffix
                      it had, and will use the same type again when it is serialized.

                      Before serializing, Quantity will be put in "canonical form".
                      This means that Exponent/suffix will be adjusted up or down (with a
                      corresponding increase or decrease in Mantissa) such that:

                      - No precision is lost
                      - No fractional digits will be emitted
                      - The exponent (or suffix) is as large as possible.

                      The sign will be omitted unless the number is negative.

                      Examples:

                      - 1.5 will be serialized as "1500m"
                      - 1.5Gi will be serialized as "1536Mi"

                      Note that the quantity will NEVER be internally represented by a
                      floating point number. That is the whole point of this exercise.

                      Non-canonical values will still parse as long as they are well formed,
                      but will be re-emitted in their canonical form. (So always use canonical
                      form, or don't diff.)

                      This format is intended to make it difficult to use these numbers without
                      writing some sort of special handling code in the hopes that that will
                      cause implementors to also use a fixed point implementation.

                      +protobuf=true
                      +protobuf.embed=string
                      +protobuf.options.marshal=false
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                      +k8s:deepcopy-gen=true
                      +k8s:openapi-gen=true
                  title: |-
                    Limits describes the maximum amount of compute resources allowed.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    +optional
                requests:
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    type:
                      - object
                      - "null"
                    properties:
                      string:
                        type:
                          - string
                          - "null"
                    description: |-
                      Quantity is a fixed-point representation of a number.
                      It provides convenient marshaling/unmarshaling in JSON and YAML,
                      in addition to String() and AsInt64() accessors.

                      The serialization format is:

                      ```
                      <quantity>        ::= <signedNumber><suffix>

                      	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                      <digit>           ::= 0 | 1 | ... | 9
                      <digits>          ::= <digit> | <digit><digits>
                      <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                      <sign>            ::= "+" | "-"
                      <signedNumber>    ::= <number> | <sign><number>
                      <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                      <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                      	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                      <decimalSI>       ::= m | "" | k | M | G | T | P | E

                      	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                      <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                      ```

                      No matter which of the three exponent forms is used, no quantity may represent
                      a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                      places. Numbers larger or more precise will be capped or rounded up.
                      (E.g.: 0.1m will rounded up to 1m.)
                      This may be extended in the future if we require larger or smaller quantities.

                      When a Quantity is parsed from a string, it will remember the type of suffix
                      it had, and will use the same type again when it is serialized.

                      Before serializing, Quantity will be put in "canonical form".
                      This means that Exponent/suffix will be adjusted up or down (with a
                      corresponding increase or decrease in Mantissa) such that:

                      - No precision is lost
                      - No fractional digits will be emitted
                      - The exponent (or suffix) is as large as possible.

                      The sign will be omitted unless the number is negative.

                      Examples:

                      - 1.5 will be serialized as "1500m"
                      - 1.5Gi will be serialized as "1536Mi"

                      Note that the quantity will NEVER be internally represented by a
                      floating point number. That is the whole point of this exercise.

                      Non-canonical values will still parse as long as they are well formed,
                      but will be re-emitted in their canonical form. (So always use canonical
                      form, or don't diff.)

                      This format is intended to make it difficult to use these numbers without
                      writing some sort of special handling code in the hopes that that will
                      cause implementors to also use a fixed point implementation.

                      +protobuf=true
                      +protobuf.embed=string
                      +protobuf.options.marshal=false
                      +protobuf.options.(gogoproto.goproto_stringer)=false
                      +k8s:deepcopy-gen=true
                      +k8s:openapi-gen=true
                  title: |-
                    Requests describes the minimum amount of compute resources required.
                    If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                    otherwise to an implementation-defined value. Requests cannot exceed Limits.
                    More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                    +optional
                claims:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      name:
                        type:
                          - string
                          - "null"
                        description: |-
                          Name must match the name of one entry in pod.spec.resourceClaims of
                          the Pod where this field is used. It makes that resource available
                          inside a container.
                    description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                  description: |-
                    Claims lists the names of resources, defined in spec.resourceClaims,
                    that are used by this container.

                    This is an alpha field and requires enabling the
                    DynamicResourceAllocation feature gate.

                    This field is immutable. It can only be set for containers.

                    +listType=map
                    +listMapKey=name
                    +featureGate=DynamicResourceAllocation
                    +optional
              description: ResourceRequirements describes the compute resource requirements.
            resizePolicy:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  resourceName:
                    type:
                      - string
                      - "null"
                    description: |-
                      Name of the resource to which this resource resize policy applies.
                      Supported values: cpu, memory.
                  restartPolicy:
                    type:
                      - string
                      - "null"
                    description: |-
                      Restart policy to apply when specified resource is resized.
                      If not specified, it defaults to NotRequired.
                description: ContainerResizePolicy represents resource resize policy for the container.
              title: |-
                Resources resize policy for the container.
                +featureGate=InPlacePodVerticalScaling
                +optional
                +listType=atomic
            restartPolicy:
              type:
                - string
                - "null"
              title: |-
                RestartPolicy defines the restart behavior of individual containers in a pod.
                This field may only be set for init containers, and the only allowed value is "Always".
                For non-init containers or when this field is not specified,
                the restart behavior is defined by the Pod's restart policy and the container type.
                Setting the RestartPolicy as "Always" for the init container will have the following effect:
                this init container will be continually restarted on
                exit until all regular containers have terminated. Once all regular
                containers have completed, all init containers with restartPolicy "Always"
                will be shut down. This lifecycle differs from normal init containers and
                is often referred to as a "sidecar" container. Although this init
                container still starts in the init container sequence, it does not wait
                for the container to complete before proceeding to the next init
                container. Instead, the next init container starts immediately after this
                init container is started, or after any startupProbe has successfully
                completed.
                +featureGate=SidecarContainers
                +optional
            volumeMounts:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    description: This must match the Name of a Volume.
                  readOnly:
                    type:
                      - boolean
                      - "null"
                    title: |-
                      Mounted read-only if true, read-write otherwise (false or unspecified).
                      Defaults to false.
                      +optional
                  mountPath:
                    type:
                      - string
                      - "null"
                    description: |-
                      Path within the container at which the volume should be mounted.  Must
                      not contain ':'.
                  subPath:
                    type:
                      - string
                      - "null"
                    title: |-
                      Path within the volume from which the container's volume should be mounted.
                      Defaults to "" (volume's root).
                      +optional
                  mountPropagation:
                    type:
                      - string
                      - "null"
                    title: |-
                      mountPropagation determines how mounts are propagated from the host
                      to container and the other way around.
                      When not set, MountPropagationNone is used.
                      This field is beta in 1.10.
                      +optional
                  subPathExpr:
                    type:
                      - string
                      - "null"
                    title: |-
                      Expanded path within the volume from which the container's volume should be mounted.
                      Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                      Defaults to "" (volume's root).
                      SubPathExpr and SubPath are mutually exclusive.
                      +optional
                description: VolumeMount describes a mounting of a Volume within a container.
              title: |-
                Pod volumes to mount into the container's filesystem.
                Cannot be updated.
                +optional
                +patchMergeKey=mountPath
                +patchStrategy=merge
            volumeDevices:
              type:
                - array
                - "null"
              items:
                type:
                  - object
                  - "null"
                properties:
                  name:
                    type:
                      - string
                      - "null"
                    title: name must match the name of a persistentVolumeClaim in the pod
                  devicePath:
                    type:
                      - string
                      - "null"
                    description: devicePath is the path inside of the container that the device will be mapped to.
                description: volumeDevice describes a mapping of a raw block device within a container.
              title: |-
                volumeDevices is the list of block devices to be used by the container.
                +patchMergeKey=devicePath
                +patchStrategy=merge
                +optional
            livenessProbe:
              type:
                - object
                - "null"
              properties:
                handler:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    grpc:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - integer
                            - "null"
                          format: int32
                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                        service:
                          type:
                            - string
                            - "null"
                          description: |-
                            Service is the name of the service to place in the gRPC HealthCheckRequest
                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                            If this is not specified, the default behavior is defined by gRPC.
                            +optional
                            +default=""
                  description: |-
                    ProbeHandler defines a specific action that should be taken in a probe.
                    One and only one of the fields must be specified.
                initialDelaySeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after the container has started before liveness probes are initiated.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                timeoutSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                periodSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    How often (in seconds) to perform the probe.
                    Default to 10 seconds. Minimum value is 1.
                    +optional
                successThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive successes for the probe to be considered successful after having failed.
                    Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    +optional
                failureThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                    +optional
                terminationGracePeriodSeconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                    The grace period is the duration in seconds after the processes running in the pod are sent
                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                    Set this value longer than the expected cleanup time for your process.
                    If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                    value overrides the value provided by the pod spec.
                    Value must be non-negative integer. The value zero indicates stop immediately via
                    the kill signal (no opportunity to shut down).
                    This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                    Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    +optional
              description: |-
                Probe describes a health check to be performed against a container to determine whether it is
                alive or ready to receive traffic.
            readinessProbe:
              type:
                - object
                - "null"
              properties:
                handler:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    grpc:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - integer
                            - "null"
                          format: int32
                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                        service:
                          type:
                            - string
                            - "null"
                          description: |-
                            Service is the name of the service to place in the gRPC HealthCheckRequest
                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                            If this is not specified, the default behavior is defined by gRPC.
                            +optional
                            +default=""
                  description: |-
                    ProbeHandler defines a specific action that should be taken in a probe.
                    One and only one of the fields must be specified.
                initialDelaySeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after the container has started before liveness probes are initiated.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                timeoutSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                periodSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    How often (in seconds) to perform the probe.
                    Default to 10 seconds. Minimum value is 1.
                    +optional
                successThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive successes for the probe to be considered successful after having failed.
                    Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    +optional
                failureThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                    +optional
                terminationGracePeriodSeconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                    The grace period is the duration in seconds after the processes running in the pod are sent
                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                    Set this value longer than the expected cleanup time for your process.
                    If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                    value overrides the value provided by the pod spec.
                    Value must be non-negative integer. The value zero indicates stop immediately via
                    the kill signal (no opportunity to shut down).
                    This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                    Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    +optional
              description: |-
                Probe describes a health check to be performed against a container to determine whether it is
                alive or ready to receive traffic.
            startupProbe:
              type:
                - object
                - "null"
              properties:
                handler:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    grpc:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - integer
                            - "null"
                          format: int32
                          description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                        service:
                          type:
                            - string
                            - "null"
                          description: |-
                            Service is the name of the service to place in the gRPC HealthCheckRequest
                            (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                            If this is not specified, the default behavior is defined by gRPC.
                            +optional
                            +default=""
                  description: |-
                    ProbeHandler defines a specific action that should be taken in a probe.
                    One and only one of the fields must be specified.
                initialDelaySeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after the container has started before liveness probes are initiated.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                timeoutSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Number of seconds after which the probe times out.
                    Defaults to 1 second. Minimum value is 1.
                    More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                    +optional
                periodSeconds:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    How often (in seconds) to perform the probe.
                    Default to 10 seconds. Minimum value is 1.
                    +optional
                successThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive successes for the probe to be considered successful after having failed.
                    Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                    +optional
                failureThreshold:
                  type:
                    - integer
                    - "null"
                  format: int32
                  title: |-
                    Minimum consecutive failures for the probe to be considered failed after having succeeded.
                    Defaults to 3. Minimum value is 1.
                    +optional
                terminationGracePeriodSeconds:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                    The grace period is the duration in seconds after the processes running in the pod are sent
                    a termination signal and the time when the processes are forcibly halted with a kill signal.
                    Set this value longer than the expected cleanup time for your process.
                    If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                    value overrides the value provided by the pod spec.
                    Value must be non-negative integer. The value zero indicates stop immediately via
                    the kill signal (no opportunity to shut down).
                    This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                    Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                    +optional
              description: |-
                Probe describes a health check to be performed against a container to determine whether it is
                alive or ready to receive traffic.
            lifecycle:
              type:
                - object
                - "null"
              properties:
                postStart:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    sleep:
                      type:
                        - object
                        - "null"
                      properties:
                        seconds:
                          type:
                            - string
                            - "null"
                          format: int64
                          description: Seconds is the number of seconds to sleep.
                      description: SleepAction describes a "sleep" action.
                  description: |-
                    LifecycleHandler defines a specific action that should be taken in a lifecycle
                    hook. One and only one of the fields, except TCPSocket must be specified.
                preStop:
                  type:
                    - object
                    - "null"
                  properties:
                    exec:
                      type:
                        - object
                        - "null"
                      properties:
                        command:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Command is the command line to execute inside the container, the working directory for the
                            command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                            not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                            a shell, you need to explicitly call out to that shell.
                            Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                            +optional
                      description: ExecAction describes a "run in container" action.
                    httpGet:
                      type:
                        - object
                        - "null"
                      properties:
                        path:
                          type:
                            - string
                            - "null"
                          title: |-
                            Path to access on the HTTP server.
                            +optional
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Host name to connect to, defaults to the pod IP. You probably want to set
                            "Host" in httpHeaders instead.
                            +optional
                        scheme:
                          type:
                            - string
                            - "null"
                          title: |-
                            Scheme to use for connecting to the host.
                            Defaults to HTTP.
                            +optional
                        httpHeaders:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  The header field name.
                                  This will be canonicalized upon output, so case-variant names will be understood as the same header.
                              value:
                                type:
                                  - string
                                  - "null"
                                title: The header field value
                            title: HTTPHeader describes a custom header to be used in HTTP probes
                          title: |-
                            Custom headers to set in the request. HTTP allows repeated headers.
                            +optional
                      description: HTTPGetAction describes an action based on HTTP Get requests.
                    tcpSocket:
                      type:
                        - object
                        - "null"
                      properties:
                        port:
                          type:
                            - object
                            - "null"
                          properties:
                            type:
                              type:
                                - string
                                - "null"
                              format: int64
                            intVal:
                              type:
                                - integer
                                - "null"
                              format: int32
                            strVal:
                              type:
                                - string
                                - "null"
                          description: |-
                            +protobuf=true
                            +protobuf.options.(gogoproto.goproto_stringer)=false
                            +k8s:openapi-gen=true
                          title: |-
                            IntOrString is a type that can hold an int32 or a string.  When used in
                            JSON or YAML marshalling and unmarshalling, it produces or consumes the
                            inner type.  This allows you to have, for example, a JSON field that can
                            accept a name or number.
                            TODO: Rename to Int32OrString
                        host:
                          type:
                            - string
                            - "null"
                          title: |-
                            Optional: Host name to connect to, defaults to the pod IP.
                            +optional
                      title: TCPSocketAction describes an action based on opening a socket
                    sleep:
                      type:
                        - object
                        - "null"
                      properties:
                        seconds:
                          type:
                            - string
                            - "null"
                          format: int64
                          description: Seconds is the number of seconds to sleep.
                      description: SleepAction describes a "sleep" action.
                  description: |-
                    LifecycleHandler defines a specific action that should be taken in a lifecycle
                    hook. One and only one of the fields, except TCPSocket must be specified.
              description: |-
                Lifecycle describes actions that the management system should take in response to container lifecycle
                events. For the PostStart and PreStop lifecycle handlers, management of the container blocks
                until the action is complete, unless the container process fails, in which case the handler is aborted.
            terminationMessagePath:
              type:
                - string
                - "null"
              title: |-
                Optional: Path at which the file to which the container's termination message
                will be written is mounted into the container's filesystem.
                Message written is intended to be brief final status, such as an assertion failure message.
                Will be truncated by the node if greater than 4096 bytes. The total message length across
                all containers will be limited to 12kb.
                Defaults to /dev/termination-log.
                Cannot be updated.
                +optional
            terminationMessagePolicy:
              type:
                - string
                - "null"
              title: |-
                Indicate how the termination message should be populated. File will use the contents of
                terminationMessagePath to populate the container status message on both success and failure.
                FallbackToLogsOnError will use the last chunk of container log output if the termination
                message file is empty and the container exited with an error.
                The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                Defaults to File.
                Cannot be updated.
                +optional
            imagePullPolicy:
              type:
                - string
                - "null"
              title: |-
                Image pull policy.
                One of Always, Never, IfNotPresent.
                Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                Cannot be updated.
                More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                +optional
            securityContext:
              type:
                - object
                - "null"
              properties:
                capabilities:
                  type:
                    - object
                    - "null"
                  properties:
                    add:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        Added capabilities
                        +optional
                    drop:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        Removed capabilities
                        +optional
                  description: Adds and removes POSIX capabilities from running containers.
                privileged:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Run container in privileged mode.
                    Processes in privileged containers are essentially equivalent to root on the host.
                    Defaults to false.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                seLinuxOptions:
                  type:
                    - object
                    - "null"
                  properties:
                    user:
                      type:
                        - string
                        - "null"
                      title: |-
                        User is a SELinux user label that applies to the container.
                        +optional
                    role:
                      type:
                        - string
                        - "null"
                      title: |-
                        Role is a SELinux role label that applies to the container.
                        +optional
                    type:
                      type:
                        - string
                        - "null"
                      title: |-
                        Type is a SELinux type label that applies to the container.
                        +optional
                    level:
                      type:
                        - string
                        - "null"
                      title: |-
                        Level is SELinux level label that applies to the container.
                        +optional
                  title: SELinuxOptions are the labels to be applied to the container
                windowsOptions:
                  type:
                    - object
                    - "null"
                  properties:
                    gmsaCredentialSpecName:
                      type:
                        - string
                        - "null"
                      title: |-
                        GMSACredentialSpecName is the name of the GMSA credential spec to use.
                        +optional
                    gmsaCredentialSpec:
                      type:
                        - string
                        - "null"
                      title: |-
                        GMSACredentialSpec is where the GMSA admission webhook
                        (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                        GMSA credential spec named by the GMSACredentialSpecName field.
                        +optional
                    runAsUserName:
                      type:
                        - string
                        - "null"
                      title: |-
                        The UserName in Windows to run the entrypoint of the container process.
                        Defaults to the user specified in image metadata if unspecified.
                        May also be set in PodSecurityContext. If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        +optional
                    hostProcess:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        HostProcess determines if a container should be run as a 'Host Process' container.
                        All of a Pod's containers must have the same effective HostProcess value
                        (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                        In addition, if HostProcess is true then HostNetwork must also be set to true.
                        +optional
                  description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                runAsUser:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    The UID to run the entrypoint of the container process.
                    Defaults to user specified in image metadata if unspecified.
                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                runAsGroup:
                  type:
                    - string
                    - "null"
                  format: int64
                  title: |-
                    The GID to run the entrypoint of the container process.
                    Uses runtime default if unset.
                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                runAsNonRoot:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Indicates that the container must run as a non-root user.
                    If true, the Kubelet will validate the image at runtime to ensure that it
                    does not run as UID 0 (root) and fail to start the container if it does.
                    If unset or false, no such validation will be performed.
                    May also be set in PodSecurityContext.  If set in both SecurityContext and
                    PodSecurityContext, the value specified in SecurityContext takes precedence.
                    +optional
                readOnlyRootFilesystem:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Whether this container has a read-only root filesystem.
                    Default is false.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                allowPrivilegeEscalation:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    AllowPrivilegeEscalation controls whether a process can gain more
                    privileges than its parent process. This bool directly controls if
                    the no_new_privs flag will be set on the container process.
                    AllowPrivilegeEscalation is true always when the container is:
                    1) run as Privileged
                    2) has CAP_SYS_ADMIN
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                procMount:
                  type:
                    - string
                    - "null"
                  title: |-
                    procMount denotes the type of proc mount to use for the containers.
                    The default is DefaultProcMount which uses the container runtime defaults for
                    readonly paths and masked paths.
                    This requires the ProcMountType feature flag to be enabled.
                    Note that this field cannot be set when spec.os.name is windows.
                    +optional
                seccompProfile:
                  type:
                    - object
                    - "null"
                  properties:
                    type:
                      type:
                        - string
                        - "null"
                      description: |-
                        Localhost - a profile defined in a file on the node should be used.
                        RuntimeDefault - the container runtime default profile should be used.
                        Unconfined - no profile should be applied.
                        +unionDiscriminator
                      title: |-
                        type indicates which kind of seccomp profile will be applied.
                        Valid options are:
                    localhostProfile:
                      type:
                        - string
                        - "null"
                      title: |-
                        localhostProfile indicates a profile defined in a file on the node should be used.
                        The profile must be preconfigured on the node to work.
                        Must be a descending path, relative to the kubelet's configured seccomp profile location.
                        Must be set if type is "Localhost". Must NOT be set for any other type.
                        +optional
                  title: |-
                    SeccompProfile defines a pod/container's seccomp profile settings.
                    Only one profile source may be set.
                    +union
              description: |-
                SecurityContext holds security configuration that will be applied to a container.
                Some fields are present in both SecurityContext and PodSecurityContext.  When both
                are set, the values in SecurityContext take precedence.
            stdin:
              type:
                - boolean
                - "null"
              title: |-
                Whether this container should allocate a buffer for stdin in the container runtime. If this
                is not set, reads from stdin in the container will always result in EOF.
                Default is false.
                +optional
            stdinOnce:
              type:
                - boolean
                - "null"
              title: |-
                Whether the container runtime should close the stdin channel after it has been opened by
                a single attach. When stdin is true the stdin stream will remain open across multiple attach
                sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                at which time stdin is closed and remains closed until the container is restarted. If this
                flag is false, a container processes that reads from stdin will never receive an EOF.
                Default is false
                +optional
            tty:
              type:
                - boolean
                - "null"
              title: |-
                Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                Default is false.
                +optional
          description: A single application container that you want to run within a pod.
        title: |-
          List of containers belonging to the pod.
          Containers cannot currently be added or removed.
          There must be at least one container in a Pod.
          Cannot be updated.
          +patchMergeKey=name
          +patchStrategy=merge
      ephemeralContainers:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            ephemeralContainerCommon:
              type:
                - object
                - "null"
              properties:
                name:
                  type:
                    - string
                    - "null"
                  description: |-
                    Name of the ephemeral container specified as a DNS_LABEL.
                    This name must be unique among all containers, init containers and ephemeral containers.
                image:
                  type:
                    - string
                    - "null"
                  title: |-
                    Container image name.
                    More info: https://kubernetes.io/docs/concepts/containers/images
                command:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - string
                      - "null"
                  title: |-
                    Entrypoint array. Not executed within a shell.
                    The image's ENTRYPOINT is used if this is not provided.
                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                    of whether the variable exists or not. Cannot be updated.
                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                    +optional
                args:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - string
                      - "null"
                  title: |-
                    Arguments to the entrypoint.
                    The image's CMD is used if this is not provided.
                    Variable references $(VAR_NAME) are expanded using the container's environment. If a variable
                    cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced
                    to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will
                    produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless
                    of whether the variable exists or not. Cannot be updated.
                    More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
                    +optional
                workingDir:
                  type:
                    - string
                    - "null"
                  title: |-
                    Container's working directory.
                    If not specified, the container runtime's default will be used, which
                    might be configured in the container image.
                    Cannot be updated.
                    +optional
                ports:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      name:
                        type:
                          - string
                          - "null"
                        title: |-
                          If specified, this must be an IANA_SVC_NAME and unique within the pod. Each
                          named port in a pod must have a unique name. Name for the port that can be
                          referred to by services.
                          +optional
                      hostPort:
                        type:
                          - integer
                          - "null"
                        format: int32
                        title: |-
                          Number of port to expose on the host.
                          If specified, this must be a valid port number, 0 < x < 65536.
                          If HostNetwork is specified, this must match ContainerPort.
                          Most containers do not need this.
                          +optional
                      containerPort:
                        type:
                          - integer
                          - "null"
                        format: int32
                        description: |-
                          Number of port to expose on the pod's IP address.
                          This must be a valid port number, 0 < x < 65536.
                      protocol:
                        type:
                          - string
                          - "null"
                        title: |-
                          Protocol for port. Must be UDP, TCP, or SCTP.
                          Defaults to "TCP".
                          +optional
                          +default="TCP"
                      hostIP:
                        type:
                          - string
                          - "null"
                        title: |-
                          What host IP to bind the external port to.
                          +optional
                    description: ContainerPort represents a network port in a single container.
                  title: |-
                    Ports are not allowed for ephemeral containers.
                    +optional
                    +patchMergeKey=containerPort
                    +patchStrategy=merge
                    +listType=map
                    +listMapKey=containerPort
                    +listMapKey=protocol
                envFrom:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      prefix:
                        type:
                          - string
                          - "null"
                        title: |-
                          An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
                          +optional
                      configMapRef:
                        type:
                          - object
                          - "null"
                        properties:
                          localObjectReference:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                            title: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                          optional:
                            type:
                              - boolean
                              - "null"
                            title: |-
                              Specify whether the ConfigMap must be defined
                              +optional
                        description: |-
                          ConfigMapEnvSource selects a ConfigMap to populate the environment
                          variables with.

                          The contents of the target ConfigMap's Data field will represent the
                          key-value pairs as environment variables.
                      secretRef:
                        type:
                          - object
                          - "null"
                        properties:
                          localObjectReference:
                            type:
                              - object
                              - "null"
                            properties:
                              name:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  TODO: Add other useful fields. apiVersion, kind, uid?
                                  +optional
                            title: |-
                              LocalObjectReference contains enough information to let you locate the
                              referenced object inside the same namespace.
                              +structType=atomic
                          optional:
                            type:
                              - boolean
                              - "null"
                            title: |-
                              Specify whether the Secret must be defined
                              +optional
                        description: |-
                          SecretEnvSource selects a Secret to populate the environment
                          variables with.

                          The contents of the target Secret's Data field will represent the
                          key-value pairs as environment variables.
                    title: EnvFromSource represents the source of a set of ConfigMaps
                  title: |-
                    List of sources to populate environment variables in the container.
                    The keys defined within a source must be a C_IDENTIFIER. All invalid keys
                    will be reported as an event when the container is starting. When a key exists in multiple
                    sources, the value associated with the last source will take precedence.
                    Values defined by an Env with a duplicate key will take precedence.
                    Cannot be updated.
                    +optional
                env:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      name:
                        type:
                          - string
                          - "null"
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                      value:
                        type:
                          - string
                          - "null"
                        title: |-
                          Variable references $(VAR_NAME) are expanded
                          using the previously defined environment variables in the container and
                          any service environment variables. If a variable cannot be resolved,
                          the reference in the input string will be unchanged. Double $$ are reduced
                          to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                          "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                          Escaped references will never be expanded, regardless of whether the variable
                          exists or not.
                          Defaults to "".
                          +optional
                      valueFrom:
                        type:
                          - object
                          - "null"
                        properties:
                          fieldRef:
                            type:
                              - object
                              - "null"
                            properties:
                              apiVersion:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                  +optional
                              fieldPath:
                                type:
                                  - string
                                  - "null"
                                description: Path of the field to select in the specified API version.
                            title: |-
                              ObjectFieldSelector selects an APIVersioned field of an object.
                              +structType=atomic
                          resourceFieldRef:
                            type:
                              - object
                              - "null"
                            properties:
                              containerName:
                                type:
                                  - string
                                  - "null"
                                title: |-
                                  Container name: required for volumes, optional for env vars
                                  +optional
                              resource:
                                type:
                                  - string
                                  - "null"
                                title: 'Required: resource to select'
                              divisor:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  string:
                                    type:
                                      - string
                                      - "null"
                                description: |-
                                  Quantity is a fixed-point representation of a number.
                                  It provides convenient marshaling/unmarshaling in JSON and YAML,
                                  in addition to String() and AsInt64() accessors.

                                  The serialization format is:

                                  ```
                                  <quantity>        ::= <signedNumber><suffix>

                                  	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                                  <digit>           ::= 0 | 1 | ... | 9
                                  <digits>          ::= <digit> | <digit><digits>
                                  <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                                  <sign>            ::= "+" | "-"
                                  <signedNumber>    ::= <number> | <sign><number>
                                  <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                                  <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                                  	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                                  <decimalSI>       ::= m | "" | k | M | G | T | P | E

                                  	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                                  <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                                  ```

                                  No matter which of the three exponent forms is used, no quantity may represent
                                  a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                                  places. Numbers larger or more precise will be capped or rounded up.
                                  (E.g.: 0.1m will rounded up to 1m.)
                                  This may be extended in the future if we require larger or smaller quantities.

                                  When a Quantity is parsed from a string, it will remember the type of suffix
                                  it had, and will use the same type again when it is serialized.

                                  Before serializing, Quantity will be put in "canonical form".
                                  This means that Exponent/suffix will be adjusted up or down (with a
                                  corresponding increase or decrease in Mantissa) such that:

                                  - No precision is lost
                                  - No fractional digits will be emitted
                                  - The exponent (or suffix) is as large as possible.

                                  The sign will be omitted unless the number is negative.

                                  Examples:

                                  - 1.5 will be serialized as "1500m"
                                  - 1.5Gi will be serialized as "1536Mi"

                                  Note that the quantity will NEVER be internally represented by a
                                  floating point number. That is the whole point of this exercise.

                                  Non-canonical values will still parse as long as they are well formed,
                                  but will be re-emitted in their canonical form. (So always use canonical
                                  form, or don't diff.)

                                  This format is intended to make it difficult to use these numbers without
                                  writing some sort of special handling code in the hopes that that will
                                  cause implementors to also use a fixed point implementation.

                                  +protobuf=true
                                  +protobuf.embed=string
                                  +protobuf.options.marshal=false
                                  +protobuf.options.(gogoproto.goproto_stringer)=false
                                  +k8s:deepcopy-gen=true
                                  +k8s:openapi-gen=true
                            title: |-
                              ResourceFieldSelector represents container resources (cpu, memory) and their output format
                              +structType=atomic
                          configMapKeyRef:
                            type:
                              - object
                              - "null"
                            properties:
                              localObjectReference:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                      +optional
                                title: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                  +structType=atomic
                              key:
                                type:
                                  - string
                                  - "null"
                                description: The key to select.
                              optional:
                                type:
                                  - boolean
                                  - "null"
                                title: |-
                                  Specify whether the ConfigMap or its key must be defined
                                  +optional
                            title: |-
                              Selects a key from a ConfigMap.
                              +structType=atomic
                          secretKeyRef:
                            type:
                              - object
                              - "null"
                            properties:
                              localObjectReference:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    title: |-
                                      Name of the referent.
                                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind, uid?
                                      +optional
                                title: |-
                                  LocalObjectReference contains enough information to let you locate the
                                  referenced object inside the same namespace.
                                  +structType=atomic
                              key:
                                type:
                                  - string
                                  - "null"
                                description: The key of the secret to select from.  Must be a valid secret key.
                              optional:
                                type:
                                  - boolean
                                  - "null"
                                title: |-
                                  Specify whether the Secret or its key must be defined
                                  +optional
                            title: |-
                              SecretKeySelector selects a key of a Secret.
                              +structType=atomic
                        description: EnvVarSource represents a source for the value of an EnvVar.
                    description: EnvVar represents an environment variable present in a Container.
                  title: |-
                    List of environment variables to set in the container.
                    Cannot be updated.
                    +optional
                    +patchMergeKey=name
                    +patchStrategy=merge
                resources:
                  type:
                    - object
                    - "null"
                  properties:
                    limits:
                      type:
                        - object
                        - "null"
                      additionalProperties:
                        type:
                          - object
                          - "null"
                        properties:
                          string:
                            type:
                              - string
                              - "null"
                        description: |-
                          Quantity is a fixed-point representation of a number.
                          It provides convenient marshaling/unmarshaling in JSON and YAML,
                          in addition to String() and AsInt64() accessors.

                          The serialization format is:

                          ```
                          <quantity>        ::= <signedNumber><suffix>

                          	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                          <digit>           ::= 0 | 1 | ... | 9
                          <digits>          ::= <digit> | <digit><digits>
                          <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                          <sign>            ::= "+" | "-"
                          <signedNumber>    ::= <number> | <sign><number>
                          <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                          <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                          	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                          <decimalSI>       ::= m | "" | k | M | G | T | P | E

                          	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                          ```

                          No matter which of the three exponent forms is used, no quantity may represent
                          a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                          places. Numbers larger or more precise will be capped or rounded up.
                          (E.g.: 0.1m will rounded up to 1m.)
                          This may be extended in the future if we require larger or smaller quantities.

                          When a Quantity is parsed from a string, it will remember the type of suffix
                          it had, and will use the same type again when it is serialized.

                          Before serializing, Quantity will be put in "canonical form".
                          This means that Exponent/suffix will be adjusted up or down (with a
                          corresponding increase or decrease in Mantissa) such that:

                          - No precision is lost
                          - No fractional digits will be emitted
                          - The exponent (or suffix) is as large as possible.

                          The sign will be omitted unless the number is negative.

                          Examples:

                          - 1.5 will be serialized as "1500m"
                          - 1.5Gi will be serialized as "1536Mi"

                          Note that the quantity will NEVER be internally represented by a
                          floating point number. That is the whole point of this exercise.

                          Non-canonical values will still parse as long as they are well formed,
                          but will be re-emitted in their canonical form. (So always use canonical
                          form, or don't diff.)

                          This format is intended to make it difficult to use these numbers without
                          writing some sort of special handling code in the hopes that that will
                          cause implementors to also use a fixed point implementation.

                          +protobuf=true
                          +protobuf.embed=string
                          +protobuf.options.marshal=false
                          +protobuf.options.(gogoproto.goproto_stringer)=false
                          +k8s:deepcopy-gen=true
                          +k8s:openapi-gen=true
                      title: |-
                        Limits describes the maximum amount of compute resources allowed.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        +optional
                    requests:
                      type:
                        - object
                        - "null"
                      additionalProperties:
                        type:
                          - object
                          - "null"
                        properties:
                          string:
                            type:
                              - string
                              - "null"
                        description: |-
                          Quantity is a fixed-point representation of a number.
                          It provides convenient marshaling/unmarshaling in JSON and YAML,
                          in addition to String() and AsInt64() accessors.

                          The serialization format is:

                          ```
                          <quantity>        ::= <signedNumber><suffix>

                          	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

                          <digit>           ::= 0 | 1 | ... | 9
                          <digits>          ::= <digit> | <digit><digits>
                          <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
                          <sign>            ::= "+" | "-"
                          <signedNumber>    ::= <number> | <sign><number>
                          <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
                          <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

                          	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

                          <decimalSI>       ::= m | "" | k | M | G | T | P | E

                          	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

                          <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
                          ```

                          No matter which of the three exponent forms is used, no quantity may represent
                          a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
                          places. Numbers larger or more precise will be capped or rounded up.
                          (E.g.: 0.1m will rounded up to 1m.)
                          This may be extended in the future if we require larger or smaller quantities.

                          When a Quantity is parsed from a string, it will remember the type of suffix
                          it had, and will use the same type again when it is serialized.

                          Before serializing, Quantity will be put in "canonical form".
                          This means that Exponent/suffix will be adjusted up or down (with a
                          corresponding increase or decrease in Mantissa) such that:

                          - No precision is lost
                          - No fractional digits will be emitted
                          - The exponent (or suffix) is as large as possible.

                          The sign will be omitted unless the number is negative.

                          Examples:

                          - 1.5 will be serialized as "1500m"
                          - 1.5Gi will be serialized as "1536Mi"

                          Note that the quantity will NEVER be internally represented by a
                          floating point number. That is the whole point of this exercise.

                          Non-canonical values will still parse as long as they are well formed,
                          but will be re-emitted in their canonical form. (So always use canonical
                          form, or don't diff.)

                          This format is intended to make it difficult to use these numbers without
                          writing some sort of special handling code in the hopes that that will
                          cause implementors to also use a fixed point implementation.

                          +protobuf=true
                          +protobuf.embed=string
                          +protobuf.options.marshal=false
                          +protobuf.options.(gogoproto.goproto_stringer)=false
                          +k8s:deepcopy-gen=true
                          +k8s:openapi-gen=true
                      title: |-
                        Requests describes the minimum amount of compute resources required.
                        If Requests is omitted for a container, it defaults to Limits if that is explicitly specified,
                        otherwise to an implementation-defined value. Requests cannot exceed Limits.
                        More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
                        +optional
                    claims:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - object
                          - "null"
                        properties:
                          name:
                            type:
                              - string
                              - "null"
                            description: |-
                              Name must match the name of one entry in pod.spec.resourceClaims of
                              the Pod where this field is used. It makes that resource available
                              inside a container.
                        description: ResourceClaim references one entry in PodSpec.ResourceClaims.
                      description: |-
                        Claims lists the names of resources, defined in spec.resourceClaims,
                        that are used by this container.

                        This is an alpha field and requires enabling the
                        DynamicResourceAllocation feature gate.

                        This field is immutable. It can only be set for containers.

                        +listType=map
                        +listMapKey=name
                        +featureGate=DynamicResourceAllocation
                        +optional
                  description: ResourceRequirements describes the compute resource requirements.
                resizePolicy:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      resourceName:
                        type:
                          - string
                          - "null"
                        description: |-
                          Name of the resource to which this resource resize policy applies.
                          Supported values: cpu, memory.
                      restartPolicy:
                        type:
                          - string
                          - "null"
                        description: |-
                          Restart policy to apply when specified resource is resized.
                          If not specified, it defaults to NotRequired.
                    description: ContainerResizePolicy represents resource resize policy for the container.
                  title: |-
                    Resources resize policy for the container.
                    +featureGate=InPlacePodVerticalScaling
                    +optional
                    +listType=atomic
                restartPolicy:
                  type:
                    - string
                    - "null"
                  title: |-
                    Restart policy for the container to manage the restart behavior of each
                    container within a pod.
                    This may only be set for init containers. You cannot set this field on
                    ephemeral containers.
                    +featureGate=SidecarContainers
                    +optional
                volumeMounts:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      name:
                        type:
                          - string
                          - "null"
                        description: This must match the Name of a Volume.
                      readOnly:
                        type:
                          - boolean
                          - "null"
                        title: |-
                          Mounted read-only if true, read-write otherwise (false or unspecified).
                          Defaults to false.
                          +optional
                      mountPath:
                        type:
                          - string
                          - "null"
                        description: |-
                          Path within the container at which the volume should be mounted.  Must
                          not contain ':'.
                      subPath:
                        type:
                          - string
                          - "null"
                        title: |-
                          Path within the volume from which the container's volume should be mounted.
                          Defaults to "" (volume's root).
                          +optional
                      mountPropagation:
                        type:
                          - string
                          - "null"
                        title: |-
                          mountPropagation determines how mounts are propagated from the host
                          to container and the other way around.
                          When not set, MountPropagationNone is used.
                          This field is beta in 1.10.
                          +optional
                      subPathExpr:
                        type:
                          - string
                          - "null"
                        title: |-
                          Expanded path within the volume from which the container's volume should be mounted.
                          Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment.
                          Defaults to "" (volume's root).
                          SubPathExpr and SubPath are mutually exclusive.
                          +optional
                    description: VolumeMount describes a mounting of a Volume within a container.
                  title: |-
                    Pod volumes to mount into the container's filesystem. Subpath mounts are not allowed for ephemeral containers.
                    Cannot be updated.
                    +optional
                    +patchMergeKey=mountPath
                    +patchStrategy=merge
                volumeDevices:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      name:
                        type:
                          - string
                          - "null"
                        title: name must match the name of a persistentVolumeClaim in the pod
                      devicePath:
                        type:
                          - string
                          - "null"
                        description: devicePath is the path inside of the container that the device will be mapped to.
                    description: volumeDevice describes a mapping of a raw block device within a container.
                  title: |-
                    volumeDevices is the list of block devices to be used by the container.
                    +patchMergeKey=devicePath
                    +patchStrategy=merge
                    +optional
                livenessProbe:
                  type:
                    - object
                    - "null"
                  properties:
                    handler:
                      type:
                        - object
                        - "null"
                      properties:
                        exec:
                          type:
                            - object
                            - "null"
                          properties:
                            command:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                +optional
                          description: ExecAction describes a "run in container" action.
                        httpGet:
                          type:
                            - object
                            - "null"
                          properties:
                            path:
                              type:
                                - string
                                - "null"
                              title: |-
                                Path to access on the HTTP server.
                                +optional
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                                +optional
                            scheme:
                              type:
                                - string
                                - "null"
                              title: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                                +optional
                            httpHeaders:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  value:
                                    type:
                                      - string
                                      - "null"
                                    title: The header field value
                                title: HTTPHeader describes a custom header to be used in HTTP probes
                              title: |-
                                Custom headers to set in the request. HTTP allows repeated headers.
                                +optional
                          description: HTTPGetAction describes an action based on HTTP Get requests.
                        tcpSocket:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Optional: Host name to connect to, defaults to the pod IP.
                                +optional
                          title: TCPSocketAction describes an action based on opening a socket
                        grpc:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - integer
                                - "null"
                              format: int32
                              description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                            service:
                              type:
                                - string
                                - "null"
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                                +optional
                                +default=""
                      description: |-
                        ProbeHandler defines a specific action that should be taken in a probe.
                        One and only one of the fields must be specified.
                    initialDelaySeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Number of seconds after the container has started before liveness probes are initiated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        +optional
                    timeoutSeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Number of seconds after which the probe times out.
                        Defaults to 1 second. Minimum value is 1.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        +optional
                    periodSeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        How often (in seconds) to perform the probe.
                        Default to 10 seconds. Minimum value is 1.
                        +optional
                    successThreshold:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Minimum consecutive successes for the probe to be considered successful after having failed.
                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                        +optional
                    failureThreshold:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                        Defaults to 3. Minimum value is 1.
                        +optional
                    terminationGracePeriodSeconds:
                      type:
                        - string
                        - "null"
                      format: int64
                      title: |-
                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                        The grace period is the duration in seconds after the processes running in the pod are sent
                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                        Set this value longer than the expected cleanup time for your process.
                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                        value overrides the value provided by the pod spec.
                        Value must be non-negative integer. The value zero indicates stop immediately via
                        the kill signal (no opportunity to shut down).
                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                        +optional
                  description: |-
                    Probe describes a health check to be performed against a container to determine whether it is
                    alive or ready to receive traffic.
                readinessProbe:
                  type:
                    - object
                    - "null"
                  properties:
                    handler:
                      type:
                        - object
                        - "null"
                      properties:
                        exec:
                          type:
                            - object
                            - "null"
                          properties:
                            command:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                +optional
                          description: ExecAction describes a "run in container" action.
                        httpGet:
                          type:
                            - object
                            - "null"
                          properties:
                            path:
                              type:
                                - string
                                - "null"
                              title: |-
                                Path to access on the HTTP server.
                                +optional
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                                +optional
                            scheme:
                              type:
                                - string
                                - "null"
                              title: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                                +optional
                            httpHeaders:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  value:
                                    type:
                                      - string
                                      - "null"
                                    title: The header field value
                                title: HTTPHeader describes a custom header to be used in HTTP probes
                              title: |-
                                Custom headers to set in the request. HTTP allows repeated headers.
                                +optional
                          description: HTTPGetAction describes an action based on HTTP Get requests.
                        tcpSocket:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Optional: Host name to connect to, defaults to the pod IP.
                                +optional
                          title: TCPSocketAction describes an action based on opening a socket
                        grpc:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - integer
                                - "null"
                              format: int32
                              description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                            service:
                              type:
                                - string
                                - "null"
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                                +optional
                                +default=""
                      description: |-
                        ProbeHandler defines a specific action that should be taken in a probe.
                        One and only one of the fields must be specified.
                    initialDelaySeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Number of seconds after the container has started before liveness probes are initiated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        +optional
                    timeoutSeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Number of seconds after which the probe times out.
                        Defaults to 1 second. Minimum value is 1.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        +optional
                    periodSeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        How often (in seconds) to perform the probe.
                        Default to 10 seconds. Minimum value is 1.
                        +optional
                    successThreshold:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Minimum consecutive successes for the probe to be considered successful after having failed.
                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                        +optional
                    failureThreshold:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                        Defaults to 3. Minimum value is 1.
                        +optional
                    terminationGracePeriodSeconds:
                      type:
                        - string
                        - "null"
                      format: int64
                      title: |-
                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                        The grace period is the duration in seconds after the processes running in the pod are sent
                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                        Set this value longer than the expected cleanup time for your process.
                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                        value overrides the value provided by the pod spec.
                        Value must be non-negative integer. The value zero indicates stop immediately via
                        the kill signal (no opportunity to shut down).
                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                        +optional
                  description: |-
                    Probe describes a health check to be performed against a container to determine whether it is
                    alive or ready to receive traffic.
                startupProbe:
                  type:
                    - object
                    - "null"
                  properties:
                    handler:
                      type:
                        - object
                        - "null"
                      properties:
                        exec:
                          type:
                            - object
                            - "null"
                          properties:
                            command:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                +optional
                          description: ExecAction describes a "run in container" action.
                        httpGet:
                          type:
                            - object
                            - "null"
                          properties:
                            path:
                              type:
                                - string
                                - "null"
                              title: |-
                                Path to access on the HTTP server.
                                +optional
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                                +optional
                            scheme:
                              type:
                                - string
                                - "null"
                              title: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                                +optional
                            httpHeaders:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  value:
                                    type:
                                      - string
                                      - "null"
                                    title: The header field value
                                title: HTTPHeader describes a custom header to be used in HTTP probes
                              title: |-
                                Custom headers to set in the request. HTTP allows repeated headers.
                                +optional
                          description: HTTPGetAction describes an action based on HTTP Get requests.
                        tcpSocket:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Optional: Host name to connect to, defaults to the pod IP.
                                +optional
                          title: TCPSocketAction describes an action based on opening a socket
                        grpc:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - integer
                                - "null"
                              format: int32
                              description: Port number of the gRPC service. Number must be in the range 1 to 65535.
                            service:
                              type:
                                - string
                                - "null"
                              description: |-
                                Service is the name of the service to place in the gRPC HealthCheckRequest
                                (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).

                                If this is not specified, the default behavior is defined by gRPC.
                                +optional
                                +default=""
                      description: |-
                        ProbeHandler defines a specific action that should be taken in a probe.
                        One and only one of the fields must be specified.
                    initialDelaySeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Number of seconds after the container has started before liveness probes are initiated.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        +optional
                    timeoutSeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Number of seconds after which the probe times out.
                        Defaults to 1 second. Minimum value is 1.
                        More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
                        +optional
                    periodSeconds:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        How often (in seconds) to perform the probe.
                        Default to 10 seconds. Minimum value is 1.
                        +optional
                    successThreshold:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Minimum consecutive successes for the probe to be considered successful after having failed.
                        Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
                        +optional
                    failureThreshold:
                      type:
                        - integer
                        - "null"
                      format: int32
                      title: |-
                        Minimum consecutive failures for the probe to be considered failed after having succeeded.
                        Defaults to 3. Minimum value is 1.
                        +optional
                    terminationGracePeriodSeconds:
                      type:
                        - string
                        - "null"
                      format: int64
                      title: |-
                        Optional duration in seconds the pod needs to terminate gracefully upon probe failure.
                        The grace period is the duration in seconds after the processes running in the pod are sent
                        a termination signal and the time when the processes are forcibly halted with a kill signal.
                        Set this value longer than the expected cleanup time for your process.
                        If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this
                        value overrides the value provided by the pod spec.
                        Value must be non-negative integer. The value zero indicates stop immediately via
                        the kill signal (no opportunity to shut down).
                        This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate.
                        Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.
                        +optional
                  description: |-
                    Probe describes a health check to be performed against a container to determine whether it is
                    alive or ready to receive traffic.
                lifecycle:
                  type:
                    - object
                    - "null"
                  properties:
                    postStart:
                      type:
                        - object
                        - "null"
                      properties:
                        exec:
                          type:
                            - object
                            - "null"
                          properties:
                            command:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                +optional
                          description: ExecAction describes a "run in container" action.
                        httpGet:
                          type:
                            - object
                            - "null"
                          properties:
                            path:
                              type:
                                - string
                                - "null"
                              title: |-
                                Path to access on the HTTP server.
                                +optional
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                                +optional
                            scheme:
                              type:
                                - string
                                - "null"
                              title: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                                +optional
                            httpHeaders:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  value:
                                    type:
                                      - string
                                      - "null"
                                    title: The header field value
                                title: HTTPHeader describes a custom header to be used in HTTP probes
                              title: |-
                                Custom headers to set in the request. HTTP allows repeated headers.
                                +optional
                          description: HTTPGetAction describes an action based on HTTP Get requests.
                        tcpSocket:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Optional: Host name to connect to, defaults to the pod IP.
                                +optional
                          title: TCPSocketAction describes an action based on opening a socket
                        sleep:
                          type:
                            - object
                            - "null"
                          properties:
                            seconds:
                              type:
                                - string
                                - "null"
                              format: int64
                              description: Seconds is the number of seconds to sleep.
                          description: SleepAction describes a "sleep" action.
                      description: |-
                        LifecycleHandler defines a specific action that should be taken in a lifecycle
                        hook. One and only one of the fields, except TCPSocket must be specified.
                    preStop:
                      type:
                        - object
                        - "null"
                      properties:
                        exec:
                          type:
                            - object
                            - "null"
                          properties:
                            command:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                Command is the command line to execute inside the container, the working directory for the
                                command  is root ('/') in the container's filesystem. The command is simply exec'd, it is
                                not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use
                                a shell, you need to explicitly call out to that shell.
                                Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
                                +optional
                          description: ExecAction describes a "run in container" action.
                        httpGet:
                          type:
                            - object
                            - "null"
                          properties:
                            path:
                              type:
                                - string
                                - "null"
                              title: |-
                                Path to access on the HTTP server.
                                +optional
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Host name to connect to, defaults to the pod IP. You probably want to set
                                "Host" in httpHeaders instead.
                                +optional
                            scheme:
                              type:
                                - string
                                - "null"
                              title: |-
                                Scheme to use for connecting to the host.
                                Defaults to HTTP.
                                +optional
                            httpHeaders:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  name:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      The header field name.
                                      This will be canonicalized upon output, so case-variant names will be understood as the same header.
                                  value:
                                    type:
                                      - string
                                      - "null"
                                    title: The header field value
                                title: HTTPHeader describes a custom header to be used in HTTP probes
                              title: |-
                                Custom headers to set in the request. HTTP allows repeated headers.
                                +optional
                          description: HTTPGetAction describes an action based on HTTP Get requests.
                        tcpSocket:
                          type:
                            - object
                            - "null"
                          properties:
                            port:
                              type:
                                - object
                                - "null"
                              properties:
                                type:
                                  type:
                                    - string
                                    - "null"
                                  format: int64
                                intVal:
                                  type:
                                    - integer
                                    - "null"
                                  format: int32
                                strVal:
                                  type:
                                    - string
                                    - "null"
                              description: |-
                                +protobuf=true
                                +protobuf.options.(gogoproto.goproto_stringer)=false
                                +k8s:openapi-gen=true
                              title: |-
                                IntOrString is a type that can hold an int32 or a string.  When used in
                                JSON or YAML marshalling and unmarshalling, it produces or consumes the
                                inner type.  This allows you to have, for example, a JSON field that can
                                accept a name or number.
                                TODO: Rename to Int32OrString
                            host:
                              type:
                                - string
                                - "null"
                              title: |-
                                Optional: Host name to connect to, defaults to the pod IP.
                                +optional
                          title: TCPSocketAction describes an action based on opening a socket
                        sleep:
                          type:
                            - object
                            - "null"
                          properties:
                            seconds:
                              type:
                                - string
                                - "null"
                              format: int64
                              description: Seconds is the number of seconds to sleep.
                          description: SleepAction describes a "sleep" action.
                      description: |-
                        LifecycleHandler defines a specific action that should be taken in a lifecycle
                        hook. One and only one of the fields, except TCPSocket must be specified.
                  description: |-
                    Lifecycle describes actions that the management system should take in response to container lifecycle
                    events. For the PostStart and PreStop lifecycle handlers, management of the container blocks
                    until the action is complete, unless the container process fails, in which case the handler is aborted.
                terminationMessagePath:
                  type:
                    - string
                    - "null"
                  title: |-
                    Optional: Path at which the file to which the container's termination message
                    will be written is mounted into the container's filesystem.
                    Message written is intended to be brief final status, such as an assertion failure message.
                    Will be truncated by the node if greater than 4096 bytes. The total message length across
                    all containers will be limited to 12kb.
                    Defaults to /dev/termination-log.
                    Cannot be updated.
                    +optional
                terminationMessagePolicy:
                  type:
                    - string
                    - "null"
                  title: |-
                    Indicate how the termination message should be populated. File will use the contents of
                    terminationMessagePath to populate the container status message on both success and failure.
                    FallbackToLogsOnError will use the last chunk of container log output if the termination
                    message file is empty and the container exited with an error.
                    The log output is limited to 2048 bytes or 80 lines, whichever is smaller.
                    Defaults to File.
                    Cannot be updated.
                    +optional
                imagePullPolicy:
                  type:
                    - string
                    - "null"
                  title: |-
                    Image pull policy.
                    One of Always, Never, IfNotPresent.
                    Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
                    Cannot be updated.
                    More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
                    +optional
                securityContext:
                  type:
                    - object
                    - "null"
                  properties:
                    capabilities:
                      type:
                        - object
                        - "null"
                      properties:
                        add:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Added capabilities
                            +optional
                        drop:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            Removed capabilities
                            +optional
                      description: Adds and removes POSIX capabilities from running containers.
                    privileged:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        Run container in privileged mode.
                        Processes in privileged containers are essentially equivalent to root on the host.
                        Defaults to false.
                        Note that this field cannot be set when spec.os.name is windows.
                        +optional
                    seLinuxOptions:
                      type:
                        - object
                        - "null"
                      properties:
                        user:
                          type:
                            - string
                            - "null"
                          title: |-
                            User is a SELinux user label that applies to the container.
                            +optional
                        role:
                          type:
                            - string
                            - "null"
                          title: |-
                            Role is a SELinux role label that applies to the container.
                            +optional
                        type:
                          type:
                            - string
                            - "null"
                          title: |-
                            Type is a SELinux type label that applies to the container.
                            +optional
                        level:
                          type:
                            - string
                            - "null"
                          title: |-
                            Level is SELinux level label that applies to the container.
                            +optional
                      title: SELinuxOptions are the labels to be applied to the container
                    windowsOptions:
                      type:
                        - object
                        - "null"
                      properties:
                        gmsaCredentialSpecName:
                          type:
                            - string
                            - "null"
                          title: |-
                            GMSACredentialSpecName is the name of the GMSA credential spec to use.
                            +optional
                        gmsaCredentialSpec:
                          type:
                            - string
                            - "null"
                          title: |-
                            GMSACredentialSpec is where the GMSA admission webhook
                            (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                            GMSA credential spec named by the GMSACredentialSpecName field.
                            +optional
                        runAsUserName:
                          type:
                            - string
                            - "null"
                          title: |-
                            The UserName in Windows to run the entrypoint of the container process.
                            Defaults to the user specified in image metadata if unspecified.
                            May also be set in PodSecurityContext. If set in both SecurityContext and
                            PodSecurityContext, the value specified in SecurityContext takes precedence.
                            +optional
                        hostProcess:
                          type:
                            - boolean
                            - "null"
                          title: |-
                            HostProcess determines if a container should be run as a 'Host Process' container.
                            All of a Pod's containers must have the same effective HostProcess value
                            (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                            In addition, if HostProcess is true then HostNetwork must also be set to true.
                            +optional
                      description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
                    runAsUser:
                      type:
                        - string
                        - "null"
                      format: int64
                      title: |-
                        The UID to run the entrypoint of the container process.
                        Defaults to user specified in image metadata if unspecified.
                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is windows.
                        +optional
                    runAsGroup:
                      type:
                        - string
                        - "null"
                      format: int64
                      title: |-
                        The GID to run the entrypoint of the container process.
                        Uses runtime default if unset.
                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        Note that this field cannot be set when spec.os.name is windows.
                        +optional
                    runAsNonRoot:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        Indicates that the container must run as a non-root user.
                        If true, the Kubelet will validate the image at runtime to ensure that it
                        does not run as UID 0 (root) and fail to start the container if it does.
                        If unset or false, no such validation will be performed.
                        May also be set in PodSecurityContext.  If set in both SecurityContext and
                        PodSecurityContext, the value specified in SecurityContext takes precedence.
                        +optional
                    readOnlyRootFilesystem:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        Whether this container has a read-only root filesystem.
                        Default is false.
                        Note that this field cannot be set when spec.os.name is windows.
                        +optional
                    allowPrivilegeEscalation:
                      type:
                        - boolean
                        - "null"
                      title: |-
                        AllowPrivilegeEscalation controls whether a process can gain more
                        privileges than its parent process. This bool directly controls if
                        the no_new_privs flag will be set on the container process.
                        AllowPrivilegeEscalation is true always when the container is:
                        1) run as Privileged
                        2) has CAP_SYS_ADMIN
                        Note that this field cannot be set when spec.os.name is windows.
                        +optional
                    procMount:
                      type:
                        - string
                        - "null"
                      title: |-
                        procMount denotes the type of proc mount to use for the containers.
                        The default is DefaultProcMount which uses the container runtime defaults for
                        readonly paths and masked paths.
                        This requires the ProcMountType feature flag to be enabled.
                        Note that this field cannot be set when spec.os.name is windows.
                        +optional
                    seccompProfile:
                      type:
                        - object
                        - "null"
                      properties:
                        type:
                          type:
                            - string
                            - "null"
                          description: |-
                            Localhost - a profile defined in a file on the node should be used.
                            RuntimeDefault - the container runtime default profile should be used.
                            Unconfined - no profile should be applied.
                            +unionDiscriminator
                          title: |-
                            type indicates which kind of seccomp profile will be applied.
                            Valid options are:
                        localhostProfile:
                          type:
                            - string
                            - "null"
                          title: |-
                            localhostProfile indicates a profile defined in a file on the node should be used.
                            The profile must be preconfigured on the node to work.
                            Must be a descending path, relative to the kubelet's configured seccomp profile location.
                            Must be set if type is "Localhost". Must NOT be set for any other type.
                            +optional
                      title: |-
                        SeccompProfile defines a pod/container's seccomp profile settings.
                        Only one profile source may be set.
                        +union
                  description: |-
                    SecurityContext holds security configuration that will be applied to a container.
                    Some fields are present in both SecurityContext and PodSecurityContext.  When both
                    are set, the values in SecurityContext take precedence.
                stdin:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Whether this container should allocate a buffer for stdin in the container runtime. If this
                    is not set, reads from stdin in the container will always result in EOF.
                    Default is false.
                    +optional
                stdinOnce:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Whether the container runtime should close the stdin channel after it has been opened by
                    a single attach. When stdin is true the stdin stream will remain open across multiple attach
                    sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the
                    first client attaches to stdin, and then remains open and accepts data until the client disconnects,
                    at which time stdin is closed and remains closed until the container is restarted. If this
                    flag is false, a container processes that reads from stdin will never receive an EOF.
                    Default is false
                    +optional
                tty:
                  type:
                    - boolean
                    - "null"
                  title: |-
                    Whether this container should allocate a TTY for itself, also requires 'stdin' to be true.
                    Default is false.
                    +optional
              description: |-
                EphemeralContainerCommon is a copy of all fields in Container to be inlined in
                EphemeralContainer. This separate type allows easy conversion from EphemeralContainer
                to Container and allows separate documentation for the fields of EphemeralContainer.
                When a new field is added to Container it must be added here as well.
            targetContainerName:
              type:
                - string
                - "null"
              description: |-
                If set, the name of the container from PodSpec that this ephemeral container targets.
                The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container.
                If not set then the ephemeral container uses the namespaces configured in the Pod spec.

                The container runtime must implement support for this feature. If the runtime does not
                support namespace targeting then the result of setting this field is undefined.
                +optional
          description: |-
            An EphemeralContainer is a temporary container that you may add to an existing Pod for
            user-initiated activities such as debugging. Ephemeral containers have no resource or
            scheduling guarantees, and they will not be restarted when they exit or when a Pod is
            removed or restarted. The kubelet may evict a Pod if an ephemeral container causes the
            Pod to exceed its resource allocation.

            To add an ephemeral container, use the ephemeralcontainers subresource of an existing
            Pod. Ephemeral containers may not be removed or restarted.
        title: |-
          List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing
          pod to perform user-initiated actions such as debugging. This list cannot be specified when
          creating a pod, and it cannot be modified by updating the pod spec. In order to add an
          ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource.
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
      restartPolicy:
        type:
          - string
          - "null"
        title: |-
          Restart policy for all containers within the pod.
          One of Always, OnFailure, Never. In some contexts, only a subset of those values may be permitted.
          Default to Always.
          More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
          +optional
      terminationGracePeriodSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request.
          Value must be non-negative integer. The value zero indicates stop immediately via
          the kill signal (no opportunity to shut down).
          If this value is nil, the default grace period will be used instead.
          The grace period is the duration in seconds after the processes running in the pod are sent
          a termination signal and the time when the processes are forcibly halted with a kill signal.
          Set this value longer than the expected cleanup time for your process.
          Defaults to 30 seconds.
          +optional
      activeDeadlineSeconds:
        type:
          - string
          - "null"
        format: int64
        title: |-
          Optional duration in seconds the pod may be active on the node relative to
          StartTime before the system will actively try to mark it failed and kill associated containers.
          Value must be a positive integer.
          +optional
      dnsPolicy:
        type:
          - string
          - "null"
        title: |-
          Set DNS policy for the pod.
          Defaults to "ClusterFirst".
          Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'.
          DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy.
          To have DNS options set along with hostNetwork, you have to specify DNS policy
          explicitly to 'ClusterFirstWithHostNet'.
          +optional
      nodeSelector:
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - string
            - "null"
        title: |-
          NodeSelector is a selector which must be true for the pod to fit on a node.
          Selector which must match a node's labels for the pod to be scheduled on that node.
          More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
          +optional
          +mapType=atomic
      serviceAccountName:
        type:
          - string
          - "null"
        title: |-
          ServiceAccountName is the name of the ServiceAccount to use to run this pod.
          More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
          +optional
      serviceAccount:
        type:
          - string
          - "null"
        title: |-
          DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.
          Deprecated: Use serviceAccountName instead.
          +k8s:conversion-gen=false
          +optional
      automountServiceAccountToken:
        type:
          - boolean
          - "null"
        title: |-
          AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
          +optional
      nodeName:
        type:
          - string
          - "null"
        title: |-
          NodeName is a request to schedule this pod onto a specific node. If it is non-empty,
          the scheduler simply schedules this pod onto that node, assuming that it fits resource
          requirements.
          +optional
      hostNetwork:
        type:
          - boolean
          - "null"
        title: |-
          Host networking requested for this pod. Use the host's network namespace.
          If this option is set, the ports that will be used must be specified.
          Default to false.
          +k8s:conversion-gen=false
          +optional
      hostPID:
        type:
          - boolean
          - "null"
        title: |-
          Use the host's pid namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
      hostIPC:
        type:
          - boolean
          - "null"
        title: |-
          Use the host's ipc namespace.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
      shareProcessNamespace:
        type:
          - boolean
          - "null"
        title: |-
          Share a single process namespace between all of the containers in a pod.
          When this is set containers will be able to view and signal processes from other containers
          in the same pod, and the first process in each container will not be assigned PID 1.
          HostPID and ShareProcessNamespace cannot both be set.
          Optional: Default to false.
          +k8s:conversion-gen=false
          +optional
      securityContext:
        type:
          - object
          - "null"
        properties:
          seLinuxOptions:
            type:
              - object
              - "null"
            properties:
              user:
                type:
                  - string
                  - "null"
                title: |-
                  User is a SELinux user label that applies to the container.
                  +optional
              role:
                type:
                  - string
                  - "null"
                title: |-
                  Role is a SELinux role label that applies to the container.
                  +optional
              type:
                type:
                  - string
                  - "null"
                title: |-
                  Type is a SELinux type label that applies to the container.
                  +optional
              level:
                type:
                  - string
                  - "null"
                title: |-
                  Level is SELinux level label that applies to the container.
                  +optional
            title: SELinuxOptions are the labels to be applied to the container
          windowsOptions:
            type:
              - object
              - "null"
            properties:
              gmsaCredentialSpecName:
                type:
                  - string
                  - "null"
                title: |-
                  GMSACredentialSpecName is the name of the GMSA credential spec to use.
                  +optional
              gmsaCredentialSpec:
                type:
                  - string
                  - "null"
                title: |-
                  GMSACredentialSpec is where the GMSA admission webhook
                  (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the
                  GMSA credential spec named by the GMSACredentialSpecName field.
                  +optional
              runAsUserName:
                type:
                  - string
                  - "null"
                title: |-
                  The UserName in Windows to run the entrypoint of the container process.
                  Defaults to the user specified in image metadata if unspecified.
                  May also be set in PodSecurityContext. If set in both SecurityContext and
                  PodSecurityContext, the value specified in SecurityContext takes precedence.
                  +optional
              hostProcess:
                type:
                  - boolean
                  - "null"
                title: |-
                  HostProcess determines if a container should be run as a 'Host Process' container.
                  All of a Pod's containers must have the same effective HostProcess value
                  (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).
                  In addition, if HostProcess is true then HostNetwork must also be set to true.
                  +optional
            description: WindowsSecurityContextOptions contain Windows-specific options and credentials.
          runAsUser:
            type:
              - string
              - "null"
            format: int64
            title: |-
              The UID to run the entrypoint of the container process.
              Defaults to user specified in image metadata if unspecified.
              May also be set in SecurityContext.  If set in both SecurityContext and
              PodSecurityContext, the value specified in SecurityContext takes precedence
              for that container.
              Note that this field cannot be set when spec.os.name is windows.
              +optional
          runAsGroup:
            type:
              - string
              - "null"
            format: int64
            title: |-
              The GID to run the entrypoint of the container process.
              Uses runtime default if unset.
              May also be set in SecurityContext.  If set in both SecurityContext and
              PodSecurityContext, the value specified in SecurityContext takes precedence
              for that container.
              Note that this field cannot be set when spec.os.name is windows.
              +optional
          runAsNonRoot:
            type:
              - boolean
              - "null"
            title: |-
              Indicates that the container must run as a non-root user.
              If true, the Kubelet will validate the image at runtime to ensure that it
              does not run as UID 0 (root) and fail to start the container if it does.
              If unset or false, no such validation will be performed.
              May also be set in SecurityContext.  If set in both SecurityContext and
              PodSecurityContext, the value specified in SecurityContext takes precedence.
              +optional
          supplementalGroups:
            type:
              - array
              - "null"
            items:
              type:
                - string
                - "null"
              format: int64
            title: |-
              A list of groups applied to the first process run in each container, in addition
              to the container's primary GID, the fsGroup (if specified), and group memberships
              defined in the container image for the uid of the container process. If unspecified,
              no additional groups are added to any container. Note that group memberships
              defined in the container image for the uid of the container process are still effective,
              even if they are not included in this list.
              Note that this field cannot be set when spec.os.name is windows.
              +optional
          fsGroup:
            type:
              - string
              - "null"
            format: int64
            description: |-
              1. The owning GID will be the FSGroup
              2. The setgid bit is set (new files created in the volume will be owned by FSGroup)
              3. The permission bits are OR'd with rw-rw----

              If unset, the Kubelet will not modify the ownership and permissions of any volume.
              Note that this field cannot be set when spec.os.name is windows.
              +optional
            title: |-
              A special supplemental group that applies to all containers in a pod.
              Some volume types allow the Kubelet to change the ownership of that volume
              to be owned by the pod:
          sysctls:
            type:
              - array
              - "null"
            items:
              type:
                - object
                - "null"
              properties:
                name:
                  type:
                    - string
                    - "null"
                  title: Name of a property to set
                value:
                  type:
                    - string
                    - "null"
                  title: Value of a property to set
              title: Sysctl defines a kernel parameter to be set
            title: |-
              Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported
              sysctls (by the container runtime) might fail to launch.
              Note that this field cannot be set when spec.os.name is windows.
              +optional
          fsGroupChangePolicy:
            type:
              - string
              - "null"
            title: |-
              fsGroupChangePolicy defines behavior of changing ownership and permission of the volume
              before being exposed inside Pod. This field will only apply to
              volume types which support fsGroup based ownership(and permissions).
              It will have no effect on ephemeral volume types such as: secret, configmaps
              and emptydir.
              Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
              Note that this field cannot be set when spec.os.name is windows.
              +optional
          seccompProfile:
            type:
              - object
              - "null"
            properties:
              type:
                type:
                  - string
                  - "null"
                description: |-
                  Localhost - a profile defined in a file on the node should be used.
                  RuntimeDefault - the container runtime default profile should be used.
                  Unconfined - no profile should be applied.
                  +unionDiscriminator
                title: |-
                  type indicates which kind of seccomp profile will be applied.
                  Valid options are:
              localhostProfile:
                type:
                  - string
                  - "null"
                title: |-
                  localhostProfile indicates a profile defined in a file on the node should be used.
                  The profile must be preconfigured on the node to work.
                  Must be a descending path, relative to the kubelet's configured seccomp profile location.
                  Must be set if type is "Localhost". Must NOT be set for any other type.
                  +optional
            title: |-
              SeccompProfile defines a pod/container's seccomp profile settings.
              Only one profile source may be set.
              +union
        description: |-
          PodSecurityContext holds pod-level security attributes and common container settings.
          Some fields are also present in container.securityContext.  Field values of
          container.securityContext take precedence over field values of PodSecurityContext.
      imagePullSecrets:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              title: |-
                Name of the referent.
                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                TODO: Add other useful fields. apiVersion, kind, uid?
                +optional
          title: |-
            LocalObjectReference contains enough information to let you locate the
            referenced object inside the same namespace.
            +structType=atomic
        title: |-
          ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec.
          If specified, these secrets will be passed to individual puller implementations for them to use.
          More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
          +optional
          +patchMergeKey=name
          +patchStrategy=merge
      hostname:
        type:
          - string
          - "null"
        title: |-
          Specifies the hostname of the Pod
          If not specified, the pod's hostname will be set to a system-defined value.
          +optional
      subdomain:
        type:
          - string
          - "null"
        title: |-
          If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>".
          If not specified, the pod will not have a domainname at all.
          +optional
      affinity:
        type:
          - object
          - "null"
        properties:
          nodeAffinity:
            type:
              - object
              - "null"
            properties:
              requiredDuringSchedulingIgnoredDuringExecution:
                type:
                  - object
                  - "null"
                properties:
                  nodeSelectorTerms:
                    type:
                      - array
                      - "null"
                    items:
                      type:
                        - object
                        - "null"
                      properties:
                        matchExpressions:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: The label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  Represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  An array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. If the operator is Gt or Lt, the values
                                  array must have a single element, which will be interpreted as an integer.
                                  This array is replaced during a strategic merge patch.
                                  +optional
                            description: |-
                              A node selector requirement is a selector that contains values, a key, and an operator
                              that relates the key and values.
                          title: |-
                            A list of node selector requirements by node's labels.
                            +optional
                        matchFields:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: The label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  Represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  An array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. If the operator is Gt or Lt, the values
                                  array must have a single element, which will be interpreted as an integer.
                                  This array is replaced during a strategic merge patch.
                                  +optional
                            description: |-
                              A node selector requirement is a selector that contains values, a key, and an operator
                              that relates the key and values.
                          title: |-
                            A list of node selector requirements by node's fields.
                            +optional
                      title: |-
                        A null or empty node selector term matches no objects. The requirements of
                        them are ANDed.
                        The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                        +structType=atomic
                    description: Required. A list of node selector terms. The terms are ORed.
                title: |-
                  A node selector represents the union of the results of one or more label queries
                  over a set of nodes; that is, it represents the OR of the selectors represented
                  by the node selector terms.
                  +structType=atomic
              preferredDuringSchedulingIgnoredDuringExecution:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    weight:
                      type:
                        - integer
                        - "null"
                      format: int32
                      description: Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
                    preference:
                      type:
                        - object
                        - "null"
                      properties:
                        matchExpressions:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: The label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  Represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  An array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. If the operator is Gt or Lt, the values
                                  array must have a single element, which will be interpreted as an integer.
                                  This array is replaced during a strategic merge patch.
                                  +optional
                            description: |-
                              A node selector requirement is a selector that contains values, a key, and an operator
                              that relates the key and values.
                          title: |-
                            A list of node selector requirements by node's labels.
                            +optional
                        matchFields:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: The label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  Represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  An array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. If the operator is Gt or Lt, the values
                                  array must have a single element, which will be interpreted as an integer.
                                  This array is replaced during a strategic merge patch.
                                  +optional
                            description: |-
                              A node selector requirement is a selector that contains values, a key, and an operator
                              that relates the key and values.
                          title: |-
                            A list of node selector requirements by node's fields.
                            +optional
                      title: |-
                        A null or empty node selector term matches no objects. The requirements of
                        them are ANDed.
                        The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
                        +structType=atomic
                  description: |-
                    An empty preferred scheduling term matches all objects with implicit weight 0
                    (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
                title: |-
                  The scheduler will prefer to schedule pods to nodes that satisfy
                  the affinity expressions specified by this field, but it may choose
                  a node that violates one or more of the expressions. The node that is
                  most preferred is the one with the greatest sum of weights, i.e.
                  for each node that meets all of the scheduling requirements (resource
                  request, requiredDuringScheduling affinity expressions, etc.),
                  compute a sum by iterating through the elements of this field and adding
                  "weight" to the sum if the node matches the corresponding matchExpressions; the
                  node(s) with the highest sum are the most preferred.
                  +optional
            description: Node affinity is a group of node affinity scheduling rules.
          podAffinity:
            type:
              - object
              - "null"
            properties:
              requiredDuringSchedulingIgnoredDuringExecution:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    labelSelector:
                      type:
                        - object
                        - "null"
                      properties:
                        matchLabels:
                          type:
                            - object
                            - "null"
                          additionalProperties:
                            type:
                              - string
                              - "null"
                          title: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                            +optional
                        matchExpressions:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: key is the label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                  +optional
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                          title: |-
                            matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            +optional
                      title: |-
                        A label selector is a label query over a set of resources. The result of matchLabels and
                        matchExpressions are ANDed. An empty label selector matches all objects. A null
                        label selector matches no objects.
                        +structType=atomic
                    namespaces:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        namespaces specifies a static list of namespace names that the term applies to.
                        The term is applied to the union of the namespaces listed in this field
                        and the ones selected by namespaceSelector.
                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                        +optional
                    topologyKey:
                      type:
                        - string
                        - "null"
                      description: |-
                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                        whose value of the label with key topologyKey matches that of any node on which any of the
                        selected pods is running.
                        Empty topologyKey is not allowed.
                    namespaceSelector:
                      type:
                        - object
                        - "null"
                      properties:
                        matchLabels:
                          type:
                            - object
                            - "null"
                          additionalProperties:
                            type:
                              - string
                              - "null"
                          title: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                            +optional
                        matchExpressions:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: key is the label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                  +optional
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                          title: |-
                            matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            +optional
                      title: |-
                        A label selector is a label query over a set of resources. The result of matchLabels and
                        matchExpressions are ANDed. An empty label selector matches all objects. A null
                        label selector matches no objects.
                        +structType=atomic
                    matchLabelKeys:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        MatchLabelKeys is a set of pod label keys to select which pods will
                        be taken into consideration. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                        to select the group of existing pods which pods will be taken into consideration
                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                        pod labels will be ignored. The default value is empty.
                        The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                        Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                        +listType=atomic
                        +optional
                    mismatchLabelKeys:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        MismatchLabelKeys is a set of pod label keys to select which pods will
                        be taken into consideration. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                        to select the group of existing pods which pods will be taken into consideration
                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                        pod labels will be ignored. The default value is empty.
                        The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                        Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                        +listType=atomic
                        +optional
                  title: |-
                    Defines a set of pods (namely those matching the labelSelector
                    relative to the given namespace(s)) that this pod should be
                    co-located (affinity) or not co-located (anti-affinity) with,
                    where co-located is defined as running on a node whose value of
                    the label with key <topologyKey> matches that of any node on which
                    a pod of the set of pods is running
                title: |-
                  If the affinity requirements specified by this field are not met at
                  scheduling time, the pod will not be scheduled onto the node.
                  If the affinity requirements specified by this field cease to be met
                  at some point during pod execution (e.g. due to a pod label update), the
                  system may or may not try to eventually evict the pod from its node.
                  When there are multiple elements, the lists of nodes corresponding to each
                  podAffinityTerm are intersected, i.e. all terms must be satisfied.
                  +optional
              preferredDuringSchedulingIgnoredDuringExecution:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    weight:
                      type:
                        - integer
                        - "null"
                      format: int32
                      description: |-
                        weight associated with matching the corresponding podAffinityTerm,
                        in the range 1-100.
                    podAffinityTerm:
                      type:
                        - object
                        - "null"
                      properties:
                        labelSelector:
                          type:
                            - object
                            - "null"
                          properties:
                            matchLabels:
                              type:
                                - object
                                - "null"
                              additionalProperties:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                +optional
                            matchExpressions:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  key:
                                    type:
                                      - string
                                      - "null"
                                    description: key is the label key that the selector applies to.
                                  operator:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                  values:
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      type:
                                        - string
                                        - "null"
                                    title: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                      +optional
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                              title: |-
                                matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                +optional
                          title: |-
                            A label selector is a label query over a set of resources. The result of matchLabels and
                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                            label selector matches no objects.
                            +structType=atomic
                        namespaces:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            namespaces specifies a static list of namespace names that the term applies to.
                            The term is applied to the union of the namespaces listed in this field
                            and the ones selected by namespaceSelector.
                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                            +optional
                        topologyKey:
                          type:
                            - string
                            - "null"
                          description: |-
                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                            whose value of the label with key topologyKey matches that of any node on which any of the
                            selected pods is running.
                            Empty topologyKey is not allowed.
                        namespaceSelector:
                          type:
                            - object
                            - "null"
                          properties:
                            matchLabels:
                              type:
                                - object
                                - "null"
                              additionalProperties:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                +optional
                            matchExpressions:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  key:
                                    type:
                                      - string
                                      - "null"
                                    description: key is the label key that the selector applies to.
                                  operator:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                  values:
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      type:
                                        - string
                                        - "null"
                                    title: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                      +optional
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                              title: |-
                                matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                +optional
                          title: |-
                            A label selector is a label query over a set of resources. The result of matchLabels and
                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                            label selector matches no objects.
                            +structType=atomic
                        matchLabelKeys:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            MatchLabelKeys is a set of pod label keys to select which pods will
                            be taken into consideration. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                            to select the group of existing pods which pods will be taken into consideration
                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                            pod labels will be ignored. The default value is empty.
                            The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                            This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            +listType=atomic
                            +optional
                        mismatchLabelKeys:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            MismatchLabelKeys is a set of pod label keys to select which pods will
                            be taken into consideration. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                            to select the group of existing pods which pods will be taken into consideration
                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                            pod labels will be ignored. The default value is empty.
                            The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                            Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                            This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            +listType=atomic
                            +optional
                      title: |-
                        Defines a set of pods (namely those matching the labelSelector
                        relative to the given namespace(s)) that this pod should be
                        co-located (affinity) or not co-located (anti-affinity) with,
                        where co-located is defined as running on a node whose value of
                        the label with key <topologyKey> matches that of any node on which
                        a pod of the set of pods is running
                  title: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                title: |-
                  The scheduler will prefer to schedule pods to nodes that satisfy
                  the affinity expressions specified by this field, but it may choose
                  a node that violates one or more of the expressions. The node that is
                  most preferred is the one with the greatest sum of weights, i.e.
                  for each node that meets all of the scheduling requirements (resource
                  request, requiredDuringScheduling affinity expressions, etc.),
                  compute a sum by iterating through the elements of this field and adding
                  "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                  node(s) with the highest sum are the most preferred.
                  +optional
            description: Pod affinity is a group of inter pod affinity scheduling rules.
          podAntiAffinity:
            type:
              - object
              - "null"
            properties:
              requiredDuringSchedulingIgnoredDuringExecution:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    labelSelector:
                      type:
                        - object
                        - "null"
                      properties:
                        matchLabels:
                          type:
                            - object
                            - "null"
                          additionalProperties:
                            type:
                              - string
                              - "null"
                          title: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                            +optional
                        matchExpressions:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: key is the label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                  +optional
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                          title: |-
                            matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            +optional
                      title: |-
                        A label selector is a label query over a set of resources. The result of matchLabels and
                        matchExpressions are ANDed. An empty label selector matches all objects. A null
                        label selector matches no objects.
                        +structType=atomic
                    namespaces:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        namespaces specifies a static list of namespace names that the term applies to.
                        The term is applied to the union of the namespaces listed in this field
                        and the ones selected by namespaceSelector.
                        null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                        +optional
                    topologyKey:
                      type:
                        - string
                        - "null"
                      description: |-
                        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                        the labelSelector in the specified namespaces, where co-located is defined as running on a node
                        whose value of the label with key topologyKey matches that of any node on which any of the
                        selected pods is running.
                        Empty topologyKey is not allowed.
                    namespaceSelector:
                      type:
                        - object
                        - "null"
                      properties:
                        matchLabels:
                          type:
                            - object
                            - "null"
                          additionalProperties:
                            type:
                              - string
                              - "null"
                          title: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                            +optional
                        matchExpressions:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - object
                              - "null"
                            properties:
                              key:
                                type:
                                  - string
                                  - "null"
                                description: key is the label key that the selector applies to.
                              operator:
                                type:
                                  - string
                                  - "null"
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                              values:
                                type:
                                  - array
                                  - "null"
                                items:
                                  type:
                                    - string
                                    - "null"
                                title: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                  +optional
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                          title: |-
                            matchExpressions is a list of label selector requirements. The requirements are ANDed.
                            +optional
                      title: |-
                        A label selector is a label query over a set of resources. The result of matchLabels and
                        matchExpressions are ANDed. An empty label selector matches all objects. A null
                        label selector matches no objects.
                        +structType=atomic
                    matchLabelKeys:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        MatchLabelKeys is a set of pod label keys to select which pods will
                        be taken into consideration. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                        to select the group of existing pods which pods will be taken into consideration
                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                        pod labels will be ignored. The default value is empty.
                        The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                        Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                        +listType=atomic
                        +optional
                    mismatchLabelKeys:
                      type:
                        - array
                        - "null"
                      items:
                        type:
                          - string
                          - "null"
                      title: |-
                        MismatchLabelKeys is a set of pod label keys to select which pods will
                        be taken into consideration. The keys are used to lookup values from the
                        incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                        to select the group of existing pods which pods will be taken into consideration
                        for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                        pod labels will be ignored. The default value is empty.
                        The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                        Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                        This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                        +listType=atomic
                        +optional
                  title: |-
                    Defines a set of pods (namely those matching the labelSelector
                    relative to the given namespace(s)) that this pod should be
                    co-located (affinity) or not co-located (anti-affinity) with,
                    where co-located is defined as running on a node whose value of
                    the label with key <topologyKey> matches that of any node on which
                    a pod of the set of pods is running
                title: |-
                  If the anti-affinity requirements specified by this field are not met at
                  scheduling time, the pod will not be scheduled onto the node.
                  If the anti-affinity requirements specified by this field cease to be met
                  at some point during pod execution (e.g. due to a pod label update), the
                  system may or may not try to eventually evict the pod from its node.
                  When there are multiple elements, the lists of nodes corresponding to each
                  podAffinityTerm are intersected, i.e. all terms must be satisfied.
                  +optional
              preferredDuringSchedulingIgnoredDuringExecution:
                type:
                  - array
                  - "null"
                items:
                  type:
                    - object
                    - "null"
                  properties:
                    weight:
                      type:
                        - integer
                        - "null"
                      format: int32
                      description: |-
                        weight associated with matching the corresponding podAffinityTerm,
                        in the range 1-100.
                    podAffinityTerm:
                      type:
                        - object
                        - "null"
                      properties:
                        labelSelector:
                          type:
                            - object
                            - "null"
                          properties:
                            matchLabels:
                              type:
                                - object
                                - "null"
                              additionalProperties:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                +optional
                            matchExpressions:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  key:
                                    type:
                                      - string
                                      - "null"
                                    description: key is the label key that the selector applies to.
                                  operator:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                  values:
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      type:
                                        - string
                                        - "null"
                                    title: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                      +optional
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                              title: |-
                                matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                +optional
                          title: |-
                            A label selector is a label query over a set of resources. The result of matchLabels and
                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                            label selector matches no objects.
                            +structType=atomic
                        namespaces:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            namespaces specifies a static list of namespace names that the term applies to.
                            The term is applied to the union of the namespaces listed in this field
                            and the ones selected by namespaceSelector.
                            null or empty namespaces list and null namespaceSelector means "this pod's namespace".
                            +optional
                        topologyKey:
                          type:
                            - string
                            - "null"
                          description: |-
                            This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching
                            the labelSelector in the specified namespaces, where co-located is defined as running on a node
                            whose value of the label with key topologyKey matches that of any node on which any of the
                            selected pods is running.
                            Empty topologyKey is not allowed.
                        namespaceSelector:
                          type:
                            - object
                            - "null"
                          properties:
                            matchLabels:
                              type:
                                - object
                                - "null"
                              additionalProperties:
                                type:
                                  - string
                                  - "null"
                              title: |-
                                matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                                map is equivalent to an element of matchExpressions, whose key field is "key", the
                                operator is "In", and the values array contains only "value". The requirements are ANDed.
                                +optional
                            matchExpressions:
                              type:
                                - array
                                - "null"
                              items:
                                type:
                                  - object
                                  - "null"
                                properties:
                                  key:
                                    type:
                                      - string
                                      - "null"
                                    description: key is the label key that the selector applies to.
                                  operator:
                                    type:
                                      - string
                                      - "null"
                                    description: |-
                                      operator represents a key's relationship to a set of values.
                                      Valid operators are In, NotIn, Exists and DoesNotExist.
                                  values:
                                    type:
                                      - array
                                      - "null"
                                    items:
                                      type:
                                        - string
                                        - "null"
                                    title: |-
                                      values is an array of string values. If the operator is In or NotIn,
                                      the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                      the values array must be empty. This array is replaced during a strategic
                                      merge patch.
                                      +optional
                                description: |-
                                  A label selector requirement is a selector that contains values, a key, and an operator that
                                  relates the key and values.
                              title: |-
                                matchExpressions is a list of label selector requirements. The requirements are ANDed.
                                +optional
                          title: |-
                            A label selector is a label query over a set of resources. The result of matchLabels and
                            matchExpressions are ANDed. An empty label selector matches all objects. A null
                            label selector matches no objects.
                            +structType=atomic
                        matchLabelKeys:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            MatchLabelKeys is a set of pod label keys to select which pods will
                            be taken into consideration. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are merged with `LabelSelector` as `key in (value)`
                            to select the group of existing pods which pods will be taken into consideration
                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                            pod labels will be ignored. The default value is empty.
                            The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                            Also, MatchLabelKeys cannot be set when LabelSelector isn't set.
                            This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            +listType=atomic
                            +optional
                        mismatchLabelKeys:
                          type:
                            - array
                            - "null"
                          items:
                            type:
                              - string
                              - "null"
                          title: |-
                            MismatchLabelKeys is a set of pod label keys to select which pods will
                            be taken into consideration. The keys are used to lookup values from the
                            incoming pod labels, those key-value labels are merged with `LabelSelector` as `key notin (value)`
                            to select the group of existing pods which pods will be taken into consideration
                            for the incoming pod's pod (anti) affinity. Keys that don't exist in the incoming
                            pod labels will be ignored. The default value is empty.
                            The same key is forbidden to exist in both MismatchLabelKeys and LabelSelector.
                            Also, MismatchLabelKeys cannot be set when LabelSelector isn't set.
                            This is an alpha field and requires enabling MatchLabelKeysInPodAffinity feature gate.
                            +listType=atomic
                            +optional
                      title: |-
                        Defines a set of pods (namely those matching the labelSelector
                        relative to the given namespace(s)) that this pod should be
                        co-located (affinity) or not co-located (anti-affinity) with,
                        where co-located is defined as running on a node whose value of
                        the label with key <topologyKey> matches that of any node on which
                        a pod of the set of pods is running
                  title: The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
                title: |-
                  The scheduler will prefer to schedule pods to nodes that satisfy
                  the anti-affinity expressions specified by this field, but it may choose
                  a node that violates one or more of the expressions. The node that is
                  most preferred is the one with the greatest sum of weights, i.e.
                  for each node that meets all of the scheduling requirements (resource
                  request, requiredDuringScheduling anti-affinity expressions, etc.),
                  compute a sum by iterating through the elements of this field and adding
                  "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the
                  node(s) with the highest sum are the most preferred.
                  +optional
            description: Pod anti affinity is a group of inter pod anti affinity scheduling rules.
        description: Affinity is a group of affinity scheduling rules.
      schedulerName:
        type:
          - string
          - "null"
        title: |-
          If specified, the pod will be dispatched by specified scheduler.
          If not specified, the pod will be dispatched by default scheduler.
          +optional
      tolerations:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            key:
              type:
                - string
                - "null"
              title: |-
                Key is the taint key that the toleration applies to. Empty means match all taint keys.
                If the key is empty, operator must be Exists; this combination means to match all values and all keys.
                +optional
            operator:
              type:
                - string
                - "null"
              title: |-
                Operator represents a key's relationship to the value.
                Valid operators are Exists and Equal. Defaults to Equal.
                Exists is equivalent to wildcard for value, so that a pod can
                tolerate all taints of a particular category.
                +optional
            value:
              type:
                - string
                - "null"
              title: |-
                Value is the taint value the toleration matches to.
                If the operator is Exists, the value should be empty, otherwise just a regular string.
                +optional
            effect:
              type:
                - string
                - "null"
              title: |-
                Effect indicates the taint effect to match. Empty means match all taint effects.
                When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
                +optional
            tolerationSeconds:
              type:
                - string
                - "null"
              format: int64
              title: |-
                TolerationSeconds represents the period of time the toleration (which must be
                of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default,
                it is not set, which means tolerate the taint forever (do not evict). Zero and
                negative values will be treated as 0 (evict immediately) by the system.
                +optional
          description: |-
            The pod this Toleration is attached to tolerates any taint that matches
            the triple <key,value,effect> using the matching operator <operator>.
        title: |-
          If specified, the pod's tolerations.
          +optional
      hostAliases:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            ip:
              type:
                - string
                - "null"
              description: IP address of the host file entry.
            hostnames:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              description: Hostnames for the above IP address.
          description: |-
            HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the
            pod's hosts file.
        title: |-
          HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts
          file if specified. This is only valid for non-hostNetwork pods.
          +optional
          +patchMergeKey=ip
          +patchStrategy=merge
      priorityClassName:
        type:
          - string
          - "null"
        title: |-
          If specified, indicates the pod's priority. "system-node-critical" and
          "system-cluster-critical" are two special keywords which indicate the
          highest priorities with the former being the highest priority. Any other
          name must be defined by creating a PriorityClass object with that name.
          If not specified, the pod priority will be default or zero if there is no
          default.
          +optional
      priority:
        type:
          - integer
          - "null"
        format: int32
        title: |-
          The priority value. Various system components use this field to find the
          priority of the pod. When Priority Admission Controller is enabled, it
          prevents users from setting this field. The admission controller populates
          this field from PriorityClassName.
          The higher the value, the higher the priority.
          +optional
      dnsConfig:
        type:
          - object
          - "null"
        properties:
          nameservers:
            type:
              - array
              - "null"
            items:
              type:
                - string
                - "null"
            title: |-
              A list of DNS name server IP addresses.
              This will be appended to the base nameservers generated from DNSPolicy.
              Duplicated nameservers will be removed.
              +optional
          searches:
            type:
              - array
              - "null"
            items:
              type:
                - string
                - "null"
            title: |-
              A list of DNS search domains for host-name lookup.
              This will be appended to the base search paths generated from DNSPolicy.
              Duplicated search paths will be removed.
              +optional
          options:
            type:
              - array
              - "null"
            items:
              type:
                - object
                - "null"
              properties:
                name:
                  type:
                    - string
                    - "null"
                  description: Required.
                value:
                  type:
                    - string
                    - "null"
                  title: +optional
              description: PodDNSConfigOption defines DNS resolver options of a pod.
            title: |-
              A list of DNS resolver options.
              This will be merged with the base options generated from DNSPolicy.
              Duplicated entries will be removed. Resolution options given in Options
              will override those that appear in the base DNSPolicy.
              +optional
        description: |-
          PodDNSConfig defines the DNS parameters of a pod in addition to
          those generated from DNSPolicy.
      readinessGates:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            conditionType:
              type:
                - string
                - "null"
              description: ConditionType refers to a condition in the pod's condition list with matching type.
          title: PodReadinessGate contains the reference to a pod condition
        title: |-
          If specified, all readiness gates will be evaluated for pod readiness.
          A pod is ready when all its containers are ready AND
          all conditions specified in the readiness gates have status equal to "True"
          More info: https://git.k8s.io/enhancements/keps/sig-network/580-pod-readiness-gates
          +optional
      runtimeClassName:
        type:
          - string
          - "null"
        title: |-
          RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used
          to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run.
          If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an
          empty definition that uses the default runtime handler.
          More info: https://git.k8s.io/enhancements/keps/sig-node/585-runtime-class
          +optional
      enableServiceLinks:
        type:
          - boolean
          - "null"
        title: |-
          EnableServiceLinks indicates whether information about services should be injected into pod's
          environment variables, matching the syntax of Docker links.
          Optional: Defaults to true.
          +optional
      preemptionPolicy:
        type:
          - string
          - "null"
        title: |-
          PreemptionPolicy is the Policy for preempting pods with lower priority.
          One of Never, PreemptLowerPriority.
          Defaults to PreemptLowerPriority if unset.
          +optional
      overhead:
        type:
          - object
          - "null"
        additionalProperties:
          type:
            - object
            - "null"
          properties:
            string:
              type:
                - string
                - "null"
          description: |-
            Quantity is a fixed-point representation of a number.
            It provides convenient marshaling/unmarshaling in JSON and YAML,
            in addition to String() and AsInt64() accessors.

            The serialization format is:

            ```
            <quantity>        ::= <signedNumber><suffix>

            	(Note that <suffix> may be empty, from the "" case in <decimalSI>.)

            <digit>           ::= 0 | 1 | ... | 9
            <digits>          ::= <digit> | <digit><digits>
            <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits>
            <sign>            ::= "+" | "-"
            <signedNumber>    ::= <number> | <sign><number>
            <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI>
            <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei

            	(International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)

            <decimalSI>       ::= m | "" | k | M | G | T | P | E

            	(Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)

            <decimalExponent> ::= "e" <signedNumber> | "E" <signedNumber>
            ```

            No matter which of the three exponent forms is used, no quantity may represent
            a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal
            places. Numbers larger or more precise will be capped or rounded up.
            (E.g.: 0.1m will rounded up to 1m.)
            This may be extended in the future if we require larger or smaller quantities.

            When a Quantity is parsed from a string, it will remember the type of suffix
            it had, and will use the same type again when it is serialized.

            Before serializing, Quantity will be put in "canonical form".
            This means that Exponent/suffix will be adjusted up or down (with a
            corresponding increase or decrease in Mantissa) such that:

            - No precision is lost
            - No fractional digits will be emitted
            - The exponent (or suffix) is as large as possible.

            The sign will be omitted unless the number is negative.

            Examples:

            - 1.5 will be serialized as "1500m"
            - 1.5Gi will be serialized as "1536Mi"

            Note that the quantity will NEVER be internally represented by a
            floating point number. That is the whole point of this exercise.

            Non-canonical values will still parse as long as they are well formed,
            but will be re-emitted in their canonical form. (So always use canonical
            form, or don't diff.)

            This format is intended to make it difficult to use these numbers without
            writing some sort of special handling code in the hopes that that will
            cause implementors to also use a fixed point implementation.

            +protobuf=true
            +protobuf.embed=string
            +protobuf.options.marshal=false
            +protobuf.options.(gogoproto.goproto_stringer)=false
            +k8s:deepcopy-gen=true
            +k8s:openapi-gen=true
        title: |-
          Overhead represents the resource overhead associated with running a pod for a given RuntimeClass.
          This field will be autopopulated at admission time by the RuntimeClass admission controller. If
          the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests.
          The RuntimeClass admission controller will reject Pod create requests which have the overhead already
          set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value
          defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero.
          More info: https://git.k8s.io/enhancements/keps/sig-node/688-pod-overhead/README.md
          +optional
      topologySpreadConstraints:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            maxSkew:
              type:
                - integer
                - "null"
              format: int32
              description: |-
                MaxSkew describes the degree to which pods may be unevenly distributed.
                When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference
                between the number of matching pods in the target topology and the global minimum.
                The global minimum is the minimum number of matching pods in an eligible domain
                or zero if the number of eligible domains is less than MinDomains.
                For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                labelSelector spread as 2/2/1:
                In this case, the global minimum is 1.
                +-------+-------+-------+
                | zone1 | zone2 | zone3 |
                +-------+-------+-------+
                |  P P  |  P P  |   P   |
                +-------+-------+-------+
                - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2;
                scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2)
                violate MaxSkew(1).
                - if MaxSkew is 2, incoming pod can be scheduled onto any zone.
                When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence
                to topologies that satisfy it.
                It's a required field. Default value is 1 and 0 is not allowed.
            topologyKey:
              type:
                - string
                - "null"
              description: |-
                TopologyKey is the key of node labels. Nodes that have a label with this key
                and identical values are considered to be in the same topology.
                We consider each <key, value> as a "bucket", and try to put balanced number
                of pods into each bucket.
                We define a domain as a particular instance of a topology.
                Also, we define an eligible domain as a domain whose nodes meet the requirements of
                nodeAffinityPolicy and nodeTaintsPolicy.
                e.g. If TopologyKey is "kubernetes.io/hostname", each Node is a domain of that topology.
                And, if TopologyKey is "topology.kubernetes.io/zone", each zone is a domain of that topology.
                It's a required field.
            whenUnsatisfiable:
              type:
                - string
                - "null"
              description: |-
                WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy
                the spread constraint.
                - DoNotSchedule (default) tells the scheduler not to schedule it.
                - ScheduleAnyway tells the scheduler to schedule the pod in any location,
                  but giving higher precedence to topologies that would help reduce the
                  skew.
                A constraint is considered "Unsatisfiable" for an incoming pod
                if and only if every possible node assignment for that pod would violate
                "MaxSkew" on some topology.
                For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same
                labelSelector spread as 3/1/1:
                +-------+-------+-------+
                | zone1 | zone2 | zone3 |
                +-------+-------+-------+
                | P P P |   P   |   P   |
                +-------+-------+-------+
                If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled
                to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies
                MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler
                won't make it *more* imbalanced.
                It's a required field.
            labelSelector:
              type:
                - object
                - "null"
              properties:
                matchLabels:
                  type:
                    - object
                    - "null"
                  additionalProperties:
                    type:
                      - string
                      - "null"
                  title: |-
                    matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                    map is equivalent to an element of matchExpressions, whose key field is "key", the
                    operator is "In", and the values array contains only "value". The requirements are ANDed.
                    +optional
                matchExpressions:
                  type:
                    - array
                    - "null"
                  items:
                    type:
                      - object
                      - "null"
                    properties:
                      key:
                        type:
                          - string
                          - "null"
                        description: key is the label key that the selector applies to.
                      operator:
                        type:
                          - string
                          - "null"
                        description: |-
                          operator represents a key's relationship to a set of values.
                          Valid operators are In, NotIn, Exists and DoesNotExist.
                      values:
                        type:
                          - array
                          - "null"
                        items:
                          type:
                            - string
                            - "null"
                        title: |-
                          values is an array of string values. If the operator is In or NotIn,
                          the values array must be non-empty. If the operator is Exists or DoesNotExist,
                          the values array must be empty. This array is replaced during a strategic
                          merge patch.
                          +optional
                    description: |-
                      A label selector requirement is a selector that contains values, a key, and an operator that
                      relates the key and values.
                  title: |-
                    matchExpressions is a list of label selector requirements. The requirements are ANDed.
                    +optional
              title: |-
                A label selector is a label query over a set of resources. The result of matchLabels and
                matchExpressions are ANDed. An empty label selector matches all objects. A null
                label selector matches no objects.
                +structType=atomic
            minDomains:
              type:
                - integer
                - "null"
              format: int32
              description: |-
                MinDomains indicates a minimum number of eligible domains.
                When the number of eligible domains with matching topology keys is less than minDomains,
                Pod Topology Spread treats "global minimum" as 0, and then the calculation of Skew is performed.
                And when the number of eligible domains with matching topology keys equals or greater than minDomains,
                this value has no effect on scheduling.
                As a result, when the number of eligible domains is less than minDomains,
                scheduler won't schedule more than maxSkew Pods to those domains.
                If value is nil, the constraint behaves as if MinDomains is equal to 1.
                Valid values are integers greater than 0.
                When value is not nil, WhenUnsatisfiable must be DoNotSchedule.

                For example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same
                labelSelector spread as 2/2/2:
                +-------+-------+-------+
                | zone1 | zone2 | zone3 |
                +-------+-------+-------+
                |  P P  |  P P  |  P P  |
                +-------+-------+-------+
                The number of domains is less than 5(MinDomains), so "global minimum" is treated as 0.
                In this situation, new pod with the same labelSelector cannot be scheduled,
                because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones,
                it will violate MaxSkew.

                This is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).
                +optional
            nodeAffinityPolicy:
              type:
                - string
                - "null"
              description: |-
                NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector
                when calculating pod topology spread skew. Options are:
                - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations.
                - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.

                If this value is nil, the behavior is equivalent to the Honor policy.
                This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                +optional
            nodeTaintsPolicy:
              type:
                - string
                - "null"
              description: |-
                NodeTaintsPolicy indicates how we will treat node taints when calculating
                pod topology spread skew. Options are:
                - Honor: nodes without taints, along with tainted nodes for which the incoming pod
                has a toleration, are included.
                - Ignore: node taints are ignored. All nodes are included.

                If this value is nil, the behavior is equivalent to the Ignore policy.
                This is a beta-level feature default enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.
                +optional
            matchLabelKeys:
              type:
                - array
                - "null"
              items:
                type:
                  - string
                  - "null"
              description: |-
                MatchLabelKeys is a set of pod label keys to select the pods over which
                spreading will be calculated. The keys are used to lookup values from the
                incoming pod labels, those key-value labels are ANDed with labelSelector
                to select the group of existing pods over which spreading will be calculated
                for the incoming pod. The same key is forbidden to exist in both MatchLabelKeys and LabelSelector.
                MatchLabelKeys cannot be set when LabelSelector isn't set.
                Keys that don't exist in the incoming pod labels will
                be ignored. A null or empty list means only match against labelSelector.

                This is a beta field and requires the MatchLabelKeysInPodTopologySpread feature gate to be enabled (enabled by default).
                +listType=atomic
                +optional
          description: TopologySpreadConstraint specifies how to spread matching pods among the given topology.
        title: |-
          TopologySpreadConstraints describes how a group of pods ought to spread across topology
          domains. Scheduler will schedule pods in a way which abides by the constraints.
          All topologySpreadConstraints are ANDed.
          +optional
          +patchMergeKey=topologyKey
          +patchStrategy=merge
          +listType=map
          +listMapKey=topologyKey
          +listMapKey=whenUnsatisfiable
      setHostnameAsFQDN:
        type:
          - boolean
          - "null"
        title: |-
          If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default).
          In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname).
          In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN.
          If a pod does not have FQDN, this has no effect.
          Default to false.
          +optional
      os:
        type:
          - object
          - "null"
        properties:
          name:
            type:
              - string
              - "null"
            title: |-
              Name is the name of the operating system. The currently supported values are linux and windows.
              Additional value may be defined in future and can be one of:
              https://github.com/opencontainers/runtime-spec/blob/master/config.md#platform-specific-configuration
              Clients should expect to handle additional values and treat unrecognized values in this field as os: null
        description: PodOS defines the OS parameters of a pod.
      hostUsers:
        type:
          - boolean
          - "null"
        title: |-
          Use the host's user namespace.
          Optional: Default to true.
          If set to true or not present, the pod will be run in the host user namespace, useful
          for when the pod needs a feature only available to the host user namespace, such as
          loading a kernel module with CAP_SYS_MODULE.
          When set to false, a new userns is created for the pod. Setting false is useful for
          mitigating container breakout vulnerabilities even allowing users to run their
          containers as root without actually having root privileges on the host.
          This field is alpha-level and is only honored by servers that enable the UserNamespacesSupport feature.
          +k8s:conversion-gen=false
          +optional
      schedulingGates:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              description: |-
                Name of the scheduling gate.
                Each scheduling gate must have a unique name field.
          description: PodSchedulingGate is associated to a Pod to guard its scheduling.
        description: |-
          SchedulingGates is an opaque list of values that if specified will block scheduling the pod.
          If schedulingGates is not empty, the pod will stay in the SchedulingGated state and the
          scheduler will not attempt to schedule the pod.

          SchedulingGates can only be set at pod creation time, and be removed only afterwards.

          This is a beta feature enabled by the PodSchedulingReadiness feature gate.

          +patchMergeKey=name
          +patchStrategy=merge
          +listType=map
          +listMapKey=name
          +featureGate=PodSchedulingReadiness
          +optional
      resourceClaims:
        type:
          - array
          - "null"
        items:
          type:
            - object
            - "null"
          properties:
            name:
              type:
                - string
                - "null"
              description: |-
                Name uniquely identifies this resource claim inside the pod.
                This must be a DNS_LABEL.
            source:
              type:
                - object
                - "null"
              properties:
                resourceClaimName:
                  type:
                    - string
                    - "null"
                  description: |-
                    ResourceClaimName is the name of a ResourceClaim object in the same
                    namespace as this pod.
                resourceClaimTemplateName:
                  type:
                    - string
                    - "null"
                  description: |-
                    ResourceClaimTemplateName is the name of a ResourceClaimTemplate
                    object in the same namespace as this pod.

                    The template will be used to create a new ResourceClaim, which will
                    be bound to this pod. When this pod is deleted, the ResourceClaim
                    will also be deleted. The pod name and resource name, along with a
                    generated component, will be used to form a unique name for the
                    ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.

                    This field is immutable and no changes will be made to the
                    corresponding ResourceClaim by the control plane after creating the
                    ResourceClaim.
              description: |-
                ClaimSource describes a reference to a ResourceClaim.

                Exactly one of these fields should be set.  Consumers of this type must
                treat an empty object as if it has an unknown value.
          description: |-
            PodResourceClaim references exactly one ResourceClaim through a ClaimSource.
            It adds a name to it that uniquely identifies the ResourceClaim inside the Pod.
            Containers that need access to the ResourceClaim reference it with this name.
        description: |-
          ResourceClaims defines which ResourceClaims must be allocated
          and reserved before the Pod is allowed to start. The resources
          will be made available to those containers which consume them
          by name.

          This is an alpha field and requires enabling the
          DynamicResourceAllocation feature gate.

          This field is immutable.

          +patchMergeKey=name
          +patchStrategy=merge,retainKeys
          +listType=map
          +listMapKey=name
          +featureGate=DynamicResourceAllocation
          +optional
    description: PodSpec is a description of a pod.
title: PodTemplateSpec describes the data a pod should have when created from a template
$schema: http://json-schema.org/schema#
